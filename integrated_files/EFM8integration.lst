0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Sun Mar 31 17:52:15 2024
0000              5   ;--------------------------------------------------------
                  5   $name EFM8integration
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _matchRange_PARM_2
0000             28            public _InitPinADC_PARM_2
0000             29            public _main
0000             30            public _matchRange
0000             31            public _playBuzzerSound
0000             32            public _loadTimer2
0000             33            public _SendATCommand
0000             34            public _waitms_or_RI1
0000             35            public _RXU1
0000             36            public _getstr1
0000             37            public _getchar1_with_timeout
0000             38            public _getchar1
0000             39            public _sendstr1
0000             40            public _putchar1
0000             41            public _UART1_Init
0000             42            public _GetPosition2
0000             43            public _LEDgetposition
0000             44            public _map2
0000             45            public _LCDprint
0000             46            public _LCD_4BIT
0000             47            public _WriteCommand
0000             48            public _WriteData
0000             49            public _LCD_byte
0000             50            public _LCD_pulse
0000             51            public _Volts_at_Pin
0000             52            public _Get_ADC
0000             53            public _ADC_at_Pin
0000             54            public _TIMER0_Init
0000             55            public _InitPinADC
0000             56            public _waitms
0000             57            public _Timer3us
0000             58            public _InitADC
0000             59            public _Timer2_ISR
0000             60            public __c51_external_startup
0000             61            public _LCDprint_PARM_3
0000             62            public _buff
0000             63            public _playBuzzerSound_PARM_3
0000             64            public _playBuzzerSound_PARM_2
0000             65            public _GetPosition2_PARM_2
0000             66            public _map2_PARM_5
0000             67            public _map2_PARM_4
0000             68            public _map2_PARM_3
0000             69            public _map2_PARM_2
0000             70            public _LCDprint_PARM_2
0000             71            public _overflow_count
0000             72   ;--------------------------------------------------------
0000             73   ; Special Function Registers
0000             74   ;--------------------------------------------------------
0000             75   _ACC            DATA 0xe0
0000             76   _ADC0ASAH       DATA 0xb6
0000             77   _ADC0ASAL       DATA 0xb5
0000             78   _ADC0ASCF       DATA 0xa1
0000             79   _ADC0ASCT       DATA 0xc7
0000             80   _ADC0CF0        DATA 0xbc
0000             81   _ADC0CF1        DATA 0xb9
0000             82   _ADC0CF2        DATA 0xdf
0000             83   _ADC0CN0        DATA 0xe8
0000             84   _ADC0CN1        DATA 0xb2
0000             85   _ADC0CN2        DATA 0xb3
0000             86   _ADC0GTH        DATA 0xc4
0000             87   _ADC0GTL        DATA 0xc3
0000             88   _ADC0H          DATA 0xbe
0000             89   _ADC0L          DATA 0xbd
0000             90   _ADC0LTH        DATA 0xc6
0000             91   _ADC0LTL        DATA 0xc5
0000             92   _ADC0MX         DATA 0xbb
0000             93   _B              DATA 0xf0
0000             94   _CKCON0         DATA 0x8e
0000             95   _CKCON1         DATA 0xa6
0000             96   _CLEN0          DATA 0xc6
0000             97   _CLIE0          DATA 0xc7
0000             98   _CLIF0          DATA 0xe8
0000             99   _CLKSEL         DATA 0xa9
0000            100   _CLOUT0         DATA 0xd1
0000            101   _CLU0CF         DATA 0xb1
0000            102   _CLU0FN         DATA 0xaf
0000            103   _CLU0MX         DATA 0x84
0000            104   _CLU1CF         DATA 0xb3
0000            105   _CLU1FN         DATA 0xb2
0000            106   _CLU1MX         DATA 0x85
0000            107   _CLU2CF         DATA 0xb6
0000            108   _CLU2FN         DATA 0xb5
0000            109   _CLU2MX         DATA 0x91
0000            110   _CLU3CF         DATA 0xbf
0000            111   _CLU3FN         DATA 0xbe
0000            112   _CLU3MX         DATA 0xae
0000            113   _CMP0CN0        DATA 0x9b
0000            114   _CMP0CN1        DATA 0x99
0000            115   _CMP0MD         DATA 0x9d
0000            116   _CMP0MX         DATA 0x9f
0000            117   _CMP1CN0        DATA 0xbf
0000            118   _CMP1CN1        DATA 0xac
0000            119   _CMP1MD         DATA 0xab
0000            120   _CMP1MX         DATA 0xaa
0000            121   _CRC0CN0        DATA 0xce
0000            122   _CRC0CN1        DATA 0x86
0000            123   _CRC0CNT        DATA 0xd3
0000            124   _CRC0DAT        DATA 0xcb
0000            125   _CRC0FLIP       DATA 0xcf
0000            126   _CRC0IN         DATA 0xca
0000            127   _CRC0ST         DATA 0xd2
0000            128   _DAC0CF0        DATA 0x91
0000            129   _DAC0CF1        DATA 0x92
0000            130   _DAC0H          DATA 0x85
0000            131   _DAC0L          DATA 0x84
0000            132   _DAC1CF0        DATA 0x93
0000            133   _DAC1CF1        DATA 0x94
0000            134   _DAC1H          DATA 0x8a
0000            135   _DAC1L          DATA 0x89
0000            136   _DAC2CF0        DATA 0x95
0000            137   _DAC2CF1        DATA 0x96
0000            138   _DAC2H          DATA 0x8c
0000            139   _DAC2L          DATA 0x8b
0000            140   _DAC3CF0        DATA 0x9a
0000            141   _DAC3CF1        DATA 0x9c
0000            142   _DAC3H          DATA 0x8e
0000            143   _DAC3L          DATA 0x8d
0000            144   _DACGCF0        DATA 0x88
0000            145   _DACGCF1        DATA 0x98
0000            146   _DACGCF2        DATA 0xa2
0000            147   _DERIVID        DATA 0xad
0000            148   _DEVICEID       DATA 0xb5
0000            149   _DPH            DATA 0x83
0000            150   _DPL            DATA 0x82
0000            151   _EIE1           DATA 0xe6
0000            152   _EIE2           DATA 0xf3
0000            153   _EIP1           DATA 0xbb
0000            154   _EIP1H          DATA 0xee
0000            155   _EIP2           DATA 0xed
0000            156   _EIP2H          DATA 0xf6
0000            157   _EMI0CN         DATA 0xe7
0000            158   _FLKEY          DATA 0xb7
0000            159   _HFO0CAL        DATA 0xc7
0000            160   _HFO1CAL        DATA 0xd6
0000            161   _HFOCN          DATA 0xef
0000            162   _I2C0ADM        DATA 0xff
0000            163   _I2C0CN0        DATA 0xba
0000            164   _I2C0DIN        DATA 0xbc
0000            165   _I2C0DOUT       DATA 0xbb
0000            166   _I2C0FCN0       DATA 0xad
0000            167   _I2C0FCN1       DATA 0xab
0000            168   _I2C0FCT        DATA 0xf5
0000            169   _I2C0SLAD       DATA 0xbd
0000            170   _I2C0STAT       DATA 0xb9
0000            171   _IE             DATA 0xa8
0000            172   _IP             DATA 0xb8
0000            173   _IPH            DATA 0xf2
0000            174   _IT01CF         DATA 0xe4
0000            175   _LFO0CN         DATA 0xb1
0000            176   _P0             DATA 0x80
0000            177   _P0MASK         DATA 0xfe
0000            178   _P0MAT          DATA 0xfd
0000            179   _P0MDIN         DATA 0xf1
0000            180   _P0MDOUT        DATA 0xa4
0000            181   _P0SKIP         DATA 0xd4
0000            182   _P1             DATA 0x90
0000            183   _P1MASK         DATA 0xee
0000            184   _P1MAT          DATA 0xed
0000            185   _P1MDIN         DATA 0xf2
0000            186   _P1MDOUT        DATA 0xa5
0000            187   _P1SKIP         DATA 0xd5
0000            188   _P2             DATA 0xa0
0000            189   _P2MASK         DATA 0xfc
0000            190   _P2MAT          DATA 0xfb
0000            191   _P2MDIN         DATA 0xf3
0000            192   _P2MDOUT        DATA 0xa6
0000            193   _P2SKIP         DATA 0xcc
0000            194   _P3             DATA 0xb0
0000            195   _P3MDIN         DATA 0xf4
0000            196   _P3MDOUT        DATA 0x9c
0000            197   _PCA0CENT       DATA 0x9e
0000            198   _PCA0CLR        DATA 0x9c
0000            199   _PCA0CN0        DATA 0xd8
0000            200   _PCA0CPH0       DATA 0xfc
0000            201   _PCA0CPH1       DATA 0xea
0000            202   _PCA0CPH2       DATA 0xec
0000            203   _PCA0CPH3       DATA 0xf5
0000            204   _PCA0CPH4       DATA 0x85
0000            205   _PCA0CPH5       DATA 0xde
0000            206   _PCA0CPL0       DATA 0xfb
0000            207   _PCA0CPL1       DATA 0xe9
0000            208   _PCA0CPL2       DATA 0xeb
0000            209   _PCA0CPL3       DATA 0xf4
0000            210   _PCA0CPL4       DATA 0x84
0000            211   _PCA0CPL5       DATA 0xdd
0000            212   _PCA0CPM0       DATA 0xda
0000            213   _PCA0CPM1       DATA 0xdb
0000            214   _PCA0CPM2       DATA 0xdc
0000            215   _PCA0CPM3       DATA 0xae
0000            216   _PCA0CPM4       DATA 0xaf
0000            217   _PCA0CPM5       DATA 0xcc
0000            218   _PCA0H          DATA 0xfa
0000            219   _PCA0L          DATA 0xf9
0000            220   _PCA0MD         DATA 0xd9
0000            221   _PCA0POL        DATA 0x96
0000            222   _PCA0PWM        DATA 0xf7
0000            223   _PCON0          DATA 0x87
0000            224   _PCON1          DATA 0xcd
0000            225   _PFE0CN         DATA 0xc1
0000            226   _PRTDRV         DATA 0xf6
0000            227   _PSCTL          DATA 0x8f
0000            228   _PSTAT0         DATA 0xaa
0000            229   _PSW            DATA 0xd0
0000            230   _REF0CN         DATA 0xd1
0000            231   _REG0CN         DATA 0xc9
0000            232   _REVID          DATA 0xb6
0000            233   _RSTSRC         DATA 0xef
0000            234   _SBCON1         DATA 0x94
0000            235   _SBRLH1         DATA 0x96
0000            236   _SBRLL1         DATA 0x95
0000            237   _SBUF           DATA 0x99
0000            238   _SBUF0          DATA 0x99
0000            239   _SBUF1          DATA 0x92
0000            240   _SCON           DATA 0x98
0000            241   _SCON0          DATA 0x98
0000            242   _SCON1          DATA 0xc8
0000            243   _SFRPAGE        DATA 0xa7
0000            244   _SFRPGCN        DATA 0xbc
0000            245   _SFRSTACK       DATA 0xd7
0000            246   _SMB0ADM        DATA 0xd6
0000            247   _SMB0ADR        DATA 0xd7
0000            248   _SMB0CF         DATA 0xc1
0000            249   _SMB0CN0        DATA 0xc0
0000            250   _SMB0DAT        DATA 0xc2
0000            251   _SMB0FCN0       DATA 0xc3
0000            252   _SMB0FCN1       DATA 0xc4
0000            253   _SMB0FCT        DATA 0xef
0000            254   _SMB0RXLN       DATA 0xc5
0000            255   _SMB0TC         DATA 0xac
0000            256   _SMOD1          DATA 0x93
0000            257   _SP             DATA 0x81
0000            258   _SPI0CFG        DATA 0xa1
0000            259   _SPI0CKR        DATA 0xa2
0000            260   _SPI0CN0        DATA 0xf8
0000            261   _SPI0DAT        DATA 0xa3
0000            262   _SPI0FCN0       DATA 0x9a
0000            263   _SPI0FCN1       DATA 0x9b
0000            264   _SPI0FCT        DATA 0xf7
0000            265   _SPI0PCF        DATA 0xdf
0000            266   _TCON           DATA 0x88
0000            267   _TH0            DATA 0x8c
0000            268   _TH1            DATA 0x8d
0000            269   _TL0            DATA 0x8a
0000            270   _TL1            DATA 0x8b
0000            271   _TMOD           DATA 0x89
0000            272   _TMR2CN0        DATA 0xc8
0000            273   _TMR2CN1        DATA 0xfd
0000            274   _TMR2H          DATA 0xcf
0000            275   _TMR2L          DATA 0xce
0000            276   _TMR2RLH        DATA 0xcb
0000            277   _TMR2RLL        DATA 0xca
0000            278   _TMR3CN0        DATA 0x91
0000            279   _TMR3CN1        DATA 0xfe
0000            280   _TMR3H          DATA 0x95
0000            281   _TMR3L          DATA 0x94
0000            282   _TMR3RLH        DATA 0x93
0000            283   _TMR3RLL        DATA 0x92
0000            284   _TMR4CN0        DATA 0x98
0000            285   _TMR4CN1        DATA 0xff
0000            286   _TMR4H          DATA 0xa5
0000            287   _TMR4L          DATA 0xa4
0000            288   _TMR4RLH        DATA 0xa3
0000            289   _TMR4RLL        DATA 0xa2
0000            290   _TMR5CN0        DATA 0xc0
0000            291   _TMR5CN1        DATA 0xf1
0000            292   _TMR5H          DATA 0xd5
0000            293   _TMR5L          DATA 0xd4
0000            294   _TMR5RLH        DATA 0xd3
0000            295   _TMR5RLL        DATA 0xd2
0000            296   _UART0PCF       DATA 0xd9
0000            297   _UART1FCN0      DATA 0x9d
0000            298   _UART1FCN1      DATA 0xd8
0000            299   _UART1FCT       DATA 0xfa
0000            300   _UART1LIN       DATA 0x9e
0000            301   _UART1PCF       DATA 0xda
0000            302   _VDM0CN         DATA 0xff
0000            303   _WDTCN          DATA 0x97
0000            304   _XBR0           DATA 0xe1
0000            305   _XBR1           DATA 0xe2
0000            306   _XBR2           DATA 0xe3
0000            307   _XOSC0CN        DATA 0x86
0000            308   _DPTR           DATA 0x8382
0000            309   _TMR2RL         DATA 0xcbca
0000            310   _TMR3RL         DATA 0x9392
0000            311   _TMR4RL         DATA 0xa3a2
0000            312   _TMR5RL         DATA 0xd3d2
0000            313   _TMR0           DATA 0x8c8a
0000            314   _TMR1           DATA 0x8d8b
0000            315   _TMR2           DATA 0xcfce
0000            316   _TMR3           DATA 0x9594
0000            317   _TMR4           DATA 0xa5a4
0000            318   _TMR5           DATA 0xd5d4
0000            319   _SBRL1          DATA 0x9695
0000            320   _PCA0           DATA 0xfaf9
0000            321   _PCA0CP0        DATA 0xfcfb
0000            322   _PCA0CP1        DATA 0xeae9
0000            323   _PCA0CP2        DATA 0xeceb
0000            324   _PCA0CP3        DATA 0xf5f4
0000            325   _PCA0CP4        DATA 0x8584
0000            326   _PCA0CP5        DATA 0xdedd
0000            327   _ADC0ASA        DATA 0xb6b5
0000            328   _ADC0GT         DATA 0xc4c3
0000            329   _ADC0           DATA 0xbebd
0000            330   _ADC0LT         DATA 0xc6c5
0000            331   _DAC0           DATA 0x8584
0000            332   _DAC1           DATA 0x8a89
0000            333   _DAC2           DATA 0x8c8b
0000            334   _DAC3           DATA 0x8e8d
0000            335   ;--------------------------------------------------------
0000            336   ; special function bits
0000            337   ;--------------------------------------------------------
0000            338   _ACC_0          BIT 0xe0
0000            339   _ACC_1          BIT 0xe1
0000            340   _ACC_2          BIT 0xe2
0000            341   _ACC_3          BIT 0xe3
0000            342   _ACC_4          BIT 0xe4
0000            343   _ACC_5          BIT 0xe5
0000            344   _ACC_6          BIT 0xe6
0000            345   _ACC_7          BIT 0xe7
0000            346   _TEMPE          BIT 0xe8
0000            347   _ADGN0          BIT 0xe9
0000            348   _ADGN1          BIT 0xea
0000            349   _ADWINT         BIT 0xeb
0000            350   _ADBUSY         BIT 0xec
0000            351   _ADINT          BIT 0xed
0000            352   _IPOEN          BIT 0xee
0000            353   _ADEN           BIT 0xef
0000            354   _B_0            BIT 0xf0
0000            355   _B_1            BIT 0xf1
0000            356   _B_2            BIT 0xf2
0000            357   _B_3            BIT 0xf3
0000            358   _B_4            BIT 0xf4
0000            359   _B_5            BIT 0xf5
0000            360   _B_6            BIT 0xf6
0000            361   _B_7            BIT 0xf7
0000            362   _C0FIF          BIT 0xe8
0000            363   _C0RIF          BIT 0xe9
0000            364   _C1FIF          BIT 0xea
0000            365   _C1RIF          BIT 0xeb
0000            366   _C2FIF          BIT 0xec
0000            367   _C2RIF          BIT 0xed
0000            368   _C3FIF          BIT 0xee
0000            369   _C3RIF          BIT 0xef
0000            370   _D1SRC0         BIT 0x88
0000            371   _D1SRC1         BIT 0x89
0000            372   _D1AMEN         BIT 0x8a
0000            373   _D01REFSL       BIT 0x8b
0000            374   _D3SRC0         BIT 0x8c
0000            375   _D3SRC1         BIT 0x8d
0000            376   _D3AMEN         BIT 0x8e
0000            377   _D23REFSL       BIT 0x8f
0000            378   _D0UDIS         BIT 0x98
0000            379   _D1UDIS         BIT 0x99
0000            380   _D2UDIS         BIT 0x9a
0000            381   _D3UDIS         BIT 0x9b
0000            382   _EX0            BIT 0xa8
0000            383   _ET0            BIT 0xa9
0000            384   _EX1            BIT 0xaa
0000            385   _ET1            BIT 0xab
0000            386   _ES0            BIT 0xac
0000            387   _ET2            BIT 0xad
0000            388   _ESPI0          BIT 0xae
0000            389   _EA             BIT 0xaf
0000            390   _PX0            BIT 0xb8
0000            391   _PT0            BIT 0xb9
0000            392   _PX1            BIT 0xba
0000            393   _PT1            BIT 0xbb
0000            394   _PS0            BIT 0xbc
0000            395   _PT2            BIT 0xbd
0000            396   _PSPI0          BIT 0xbe
0000            397   _P0_0           BIT 0x80
0000            398   _P0_1           BIT 0x81
0000            399   _P0_2           BIT 0x82
0000            400   _P0_3           BIT 0x83
0000            401   _P0_4           BIT 0x84
0000            402   _P0_5           BIT 0x85
0000            403   _P0_6           BIT 0x86
0000            404   _P0_7           BIT 0x87
0000            405   _P1_0           BIT 0x90
0000            406   _P1_1           BIT 0x91
0000            407   _P1_2           BIT 0x92
0000            408   _P1_3           BIT 0x93
0000            409   _P1_4           BIT 0x94
0000            410   _P1_5           BIT 0x95
0000            411   _P1_6           BIT 0x96
0000            412   _P1_7           BIT 0x97
0000            413   _P2_0           BIT 0xa0
0000            414   _P2_1           BIT 0xa1
0000            415   _P2_2           BIT 0xa2
0000            416   _P2_3           BIT 0xa3
0000            417   _P2_4           BIT 0xa4
0000            418   _P2_5           BIT 0xa5
0000            419   _P2_6           BIT 0xa6
0000            420   _P3_0           BIT 0xb0
0000            421   _P3_1           BIT 0xb1
0000            422   _P3_2           BIT 0xb2
0000            423   _P3_3           BIT 0xb3
0000            424   _P3_4           BIT 0xb4
0000            425   _P3_7           BIT 0xb7
0000            426   _CCF0           BIT 0xd8
0000            427   _CCF1           BIT 0xd9
0000            428   _CCF2           BIT 0xda
0000            429   _CCF3           BIT 0xdb
0000            430   _CCF4           BIT 0xdc
0000            431   _CCF5           BIT 0xdd
0000            432   _CR             BIT 0xde
0000            433   _CF             BIT 0xdf
0000            434   _PARITY         BIT 0xd0
0000            435   _F1             BIT 0xd1
0000            436   _OV             BIT 0xd2
0000            437   _RS0            BIT 0xd3
0000            438   _RS1            BIT 0xd4
0000            439   _F0             BIT 0xd5
0000            440   _AC             BIT 0xd6
0000            441   _CY             BIT 0xd7
0000            442   _RI             BIT 0x98
0000            443   _TI             BIT 0x99
0000            444   _RB8            BIT 0x9a
0000            445   _TB8            BIT 0x9b
0000            446   _REN            BIT 0x9c
0000            447   _CE             BIT 0x9d
0000            448   _SMODE          BIT 0x9e
0000            449   _RI1            BIT 0xc8
0000            450   _TI1            BIT 0xc9
0000            451   _RBX1           BIT 0xca
0000            452   _TBX1           BIT 0xcb
0000            453   _REN1           BIT 0xcc
0000            454   _PERR1          BIT 0xcd
0000            455   _OVR1           BIT 0xce
0000            456   _SI             BIT 0xc0
0000            457   _ACK            BIT 0xc1
0000            458   _ARBLOST        BIT 0xc2
0000            459   _ACKRQ          BIT 0xc3
0000            460   _STO            BIT 0xc4
0000            461   _STA            BIT 0xc5
0000            462   _TXMODE         BIT 0xc6
0000            463   _MASTER         BIT 0xc7
0000            464   _SPIEN          BIT 0xf8
0000            465   _TXNF           BIT 0xf9
0000            466   _NSSMD0         BIT 0xfa
0000            467   _NSSMD1         BIT 0xfb
0000            468   _RXOVRN         BIT 0xfc
0000            469   _MODF           BIT 0xfd
0000            470   _WCOL           BIT 0xfe
0000            471   _SPIF           BIT 0xff
0000            472   _IT0            BIT 0x88
0000            473   _IE0            BIT 0x89
0000            474   _IT1            BIT 0x8a
0000            475   _IE1            BIT 0x8b
0000            476   _TR0            BIT 0x8c
0000            477   _TF0            BIT 0x8d
0000            478   _TR1            BIT 0x8e
0000            479   _TF1            BIT 0x8f
0000            480   _T2XCLK0        BIT 0xc8
0000            481   _T2XCLK1        BIT 0xc9
0000            482   _TR2            BIT 0xca
0000            483   _T2SPLIT        BIT 0xcb
0000            484   _TF2CEN         BIT 0xcc
0000            485   _TF2LEN         BIT 0xcd
0000            486   _TF2L           BIT 0xce
0000            487   _TF2H           BIT 0xcf
0000            488   _T4XCLK0        BIT 0x98
0000            489   _T4XCLK1        BIT 0x99
0000            490   _TR4            BIT 0x9a
0000            491   _T4SPLIT        BIT 0x9b
0000            492   _TF4CEN         BIT 0x9c
0000            493   _TF4LEN         BIT 0x9d
0000            494   _TF4L           BIT 0x9e
0000            495   _TF4H           BIT 0x9f
0000            496   _T5XCLK0        BIT 0xc0
0000            497   _T5XCLK1        BIT 0xc1
0000            498   _TR5            BIT 0xc2
0000            499   _T5SPLIT        BIT 0xc3
0000            500   _TF5CEN         BIT 0xc4
0000            501   _TF5LEN         BIT 0xc5
0000            502   _TF5L           BIT 0xc6
0000            503   _TF5H           BIT 0xc7
0000            504   _RIE            BIT 0xd8
0000            505   _RXTO0          BIT 0xd9
0000            506   _RXTO1          BIT 0xda
0000            507   _RFRQ           BIT 0xdb
0000            508   _TIE            BIT 0xdc
0000            509   _TXHOLD         BIT 0xdd
0000            510   _TXNF1          BIT 0xde
0000            511   _TFRQ           BIT 0xdf
0000            512   ;--------------------------------------------------------
0000            513   ; overlayable register banks
0000            514   ;--------------------------------------------------------
0000            515            rbank0 segment data overlay
0000            516   ;--------------------------------------------------------
0000            517   ; internal ram data
0000            518   ;--------------------------------------------------------
0000            519            rseg R_DSEG
0000            520   _overflow_count:
0000            521            ds 1
0001            522   _LCDprint_PARM_2:
0001            523            ds 1
0002            524   _map2_PARM_2:
0002            525            ds 4
0006            526   _map2_PARM_3:
0006            527            ds 4
000A            528   _map2_PARM_4:
000A            529            ds 4
000E            530   _map2_PARM_5:
000E            531            ds 4
0012            532   _GetPosition2_PARM_2:
0012            533            ds 3
0015            534   _GetPosition2_vx_1_122:
0015            535            ds 4
0019            536   _GetPosition2_vy_1_122:
0019            537            ds 4
001D            538   _playBuzzerSound_PARM_2:
001D            539            ds 4
0021            540   _playBuzzerSound_PARM_3:
0021            541            ds 4
0025            542   _main_v_1_167:
0025            543            ds 8
002D            544   _main_xy_pos_1_167:
002D            545            ds 8
0035            546   _main_mid_1_167:
0035            547            ds 8
003D            548   ;--------------------------------------------------------
003D            549   ; overlayable items in internal ram 
003D            550   ;--------------------------------------------------------
0000            551            rseg    R_OSEG
0000            552            rseg    R_OSEG
0000            553   _InitPinADC_PARM_2:
0000            554            ds 1
0001            555            rseg    R_OSEG
0001            556            rseg    R_OSEG
0001            557            rseg    R_OSEG
0001            558            rseg    R_OSEG
0001            559   _matchRange_PARM_2:
0001            560            ds 2
0003            561   ;--------------------------------------------------------
0003            562   ; indirectly addressable internal ram data
0003            563   ;--------------------------------------------------------
0000            564            rseg R_ISEG
0000            565   _buff:
0000            566            ds 20
0014            567   ;--------------------------------------------------------
0014            568   ; absolute internal ram data
0014            569   ;--------------------------------------------------------
0000            570            DSEG
0000            571   ;--------------------------------------------------------
0000            572   ; bit data
0000            573   ;--------------------------------------------------------
0000            574            rseg R_BSEG
0000            575   _LCDprint_PARM_3:
0000            576            DBIT    1
0001            577   ;--------------------------------------------------------
0001            578   ; paged external ram data
0001            579   ;--------------------------------------------------------
0000            580            rseg R_PSEG
0000            581   ;--------------------------------------------------------
0000            582   ; external ram data
0000            583   ;--------------------------------------------------------
0000            584            rseg R_XSEG
0000            585   _main_temp_buff_1_167:
0000            586            ds 4
0004            587   ;--------------------------------------------------------
0004            588   ; absolute external ram data
0004            589   ;--------------------------------------------------------
0000            590            XSEG
0000            591   ;--------------------------------------------------------
0000            592   ; external initialized ram data
0000            593   ;--------------------------------------------------------
0000            594            rseg R_IXSEG
0000            595            rseg R_HOME
0000            596            rseg R_GSINIT
0000            597            rseg R_CSEG
0000            598   ;--------------------------------------------------------
0000            599   ; Reset entry point and interrupt vectors
0000            600   ;--------------------------------------------------------
0000            601            CSEG at 0x0000
0000 020000     602            ljmp    _crt0
002B            603            CSEG at 0x002b
002B 020000     604            ljmp    _Timer2_ISR
002E            605   ;--------------------------------------------------------
002E            606   ; global & static initialisations
002E            607   ;--------------------------------------------------------
0000            608            rseg R_HOME
0000            609            rseg R_GSINIT
0000            610            rseg R_GSINIT
0000            611   ;--------------------------------------------------------
0000            612   ; data variables initialization
0000            613   ;--------------------------------------------------------
0000            614            rseg R_DINIT
0000            615            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            616   ;--------------------------------------------------------
0000            617   ; code
0000            618   ;--------------------------------------------------------
0000            619            rseg R_CSEG
0000            620   ;------------------------------------------------------------
0000            621   ;Allocation info for local variables in function '_c51_external_startup'
0000            622   ;------------------------------------------------------------
0000            623   ;------------------------------------------------------------
0000            624   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:54: char _c51_external_startup (void)
0000            625   ;        -----------------------------------------
0000            626   ;         function _c51_external_startup
0000            627   ;        -----------------------------------------
0000            628   __c51_external_startup:
0000            629            using   0
0000            630   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:57: SFRPAGE = 0x00;
0000 75A700     631            mov     _SFRPAGE,#0x00
0003            632   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:58: WDTCN = 0xDE; //First key
0003 7597DE     633            mov     _WDTCN,#0xDE
0006            634   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:59: WDTCN = 0xAD; //Second key
0006 7597AD     635            mov     _WDTCN,#0xAD
0009            636   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:61: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     637            mov     _VDM0CN,#0x80
000C            638   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:62: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     639            mov     _RSTSRC,#0x06
000F            640   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:69: SFRPAGE = 0x10;
000F 75A710     641            mov     _SFRPAGE,#0x10
0012            642   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:70: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     643            mov     _PFE0CN,#0x20
0015            644   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:71: SFRPAGE = 0x00;
0015 75A700     645            mov     _SFRPAGE,#0x00
0018            646   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:92: CLKSEL = 0x00;
0018 75A900     647            mov     _CLKSEL,#0x00
001B            648   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:93: CLKSEL = 0x00;
001B 75A900     649            mov     _CLKSEL,#0x00
001E            650   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:94: while ((CLKSEL & 0x80) == 0);
001E            651   L002001?:
001E E5A9       652            mov     a,_CLKSEL
0020 30E7E8     653            jnb     acc.7,L002001?
0023            654   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:95: CLKSEL = 0x03;
0023 75A903     655            mov     _CLKSEL,#0x03
0026            656   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:96: CLKSEL = 0x03;
0026 75A903     657            mov     _CLKSEL,#0x03
0029            658   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:97: while ((CLKSEL & 0x80) == 0);
0029            659   L002004?:
0029 E5A9       660            mov     a,_CLKSEL
002B 30E768     661            jnb     acc.7,L002004?
002E            662   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:102: P0MDOUT |= 0x11; // Enable UART0 TX (P0.4) and UART1 TX (P0.0) as push-pull outputs
002E 43A411     663            orl     _P0MDOUT,#0x11
0031            664   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:103: P2MDOUT |= 0x01; // P2.0 in push-pull mode
0031 43A601     665            orl     _P2MDOUT,#0x01
0034            666   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:104: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0034 75E101     667            mov     _XBR0,#0x01
0037            668   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:105: XBR1     = 0X00;
0037 75E200     669            mov     _XBR1,#0x00
003A            670   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:106: XBR2     = 0x41; // Enable crossbar and uart 1
003A 75E341     671            mov     _XBR2,#0x41
003D            672   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:112: SCON0 = 0x10;
003D 759810     673            mov     _SCON0,#0x10
0040            674   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:113: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     675            mov     _TH1,#0xE6
0043            676   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:114: TL1 = TH1;      // Init Timer1
0043 858D8B     677            mov     _TL1,_TH1
0046            678   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:115: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     679            anl     _TMOD,#0x0F
0049            680   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:116: TMOD |=  0x20;                       
0049 438920     681            orl     _TMOD,#0x20
004C            682   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:117: TR1 = 1; // START Timer1
004C D28E       683            setb    _TR1
004E            684   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:118: TI = 1;  // Indicate TX0 ready
004E D299       685            setb    _TI
0050            686   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:122: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
0050 75C800     687            mov     _TMR2CN0,#0x00
0053            688   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:123: CKCON0|=0b_0001_0000;
0053 438E10     689            orl     _CKCON0,#0x10
0056            690   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:124: TMR2RL=(-(SYSCLK/(2*DEFAULT_F))); // Initialize reload value
0056 75CAEE     691            mov     _TMR2RL,#0xEE
0059 75CBF6     692            mov     (_TMR2RL >> 8),#0xF6
005C            693   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:125: TMR2=0xffff;   // Set to reload immediately
005C 75CEFF     694            mov     _TMR2,#0xFF
005F 75CFFF     695            mov     (_TMR2 >> 8),#0xFF
0062            696   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:126: ET2=1;         // Enable Timer2 interrupts
0062 D2AD       697            setb    _ET2
0064            698   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:127: TR2=1;         // Start Timer2
0064 D2CA       699            setb    _TR2
0066            700   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:128: EA=1; // Global interrupt enable
0066 D2AF       701            setb    _EA
0068            702   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:130: return 0;
0068 758200     703            mov     dpl,#0x00
006B 22         704            ret
006C            705   ;------------------------------------------------------------
006C            706   ;Allocation info for local variables in function 'Timer2_ISR'
006C            707   ;------------------------------------------------------------
006C            708   ;------------------------------------------------------------
006C            709   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:133: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
006C            710   ;        -----------------------------------------
006C            711   ;         function Timer2_ISR
006C            712   ;        -----------------------------------------
006C            713   _Timer2_ISR:
006C            714   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:135: TF2H = 0; // Clear Timer2 interrupt flag
006C C2CF       715            clr     _TF2H
006E            716   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:136: BUZZER_OUT=!BUZZER_OUT; // complements the value of BUZZER_OUT to generate a square wave
006E B282       717            cpl     _P0_2
0070 32         718            reti
0071            719   ;        eliminated unneeded push/pop psw
0071            720   ;        eliminated unneeded push/pop dpl
0071            721   ;        eliminated unneeded push/pop dph
0071            722   ;        eliminated unneeded push/pop b
0071            723   ;        eliminated unneeded push/pop acc
0071            724   ;------------------------------------------------------------
0071            725   ;Allocation info for local variables in function 'InitADC'
0071            726   ;------------------------------------------------------------
0071            727   ;------------------------------------------------------------
0071            728   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:140: void InitADC (void)
0071            729   ;        -----------------------------------------
0071            730   ;         function InitADC
0071            731   ;        -----------------------------------------
0071            732   _InitADC:
0071            733   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:142: SFRPAGE = 0x00;
0071 75A700     734            mov     _SFRPAGE,#0x00
0074            735   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:143: ADEN=0; // Disable ADC
0074 C2EF       736            clr     _ADEN
0076            737   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:148: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0076 75B280     738            mov     _ADC0CN1,#0x80
0079            739   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:152: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0079 75BC20     740            mov     _ADC0CF0,#0x20
007C            741   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:156: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
007C 75B91E     742            mov     _ADC0CF1,#0x1E
007F            743   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:165: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
007F 75E800     744            mov     _ADC0CN0,#0x00
0082            745   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:170: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0082 75DF3F     746            mov     _ADC0CF2,#0x3F
0085            747   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:174: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0085 75B300     748            mov     _ADC0CN2,#0x00
0088            749   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:176: ADEN=1; // Enable ADC
0088 D2EF       750            setb    _ADEN
008A 22         751            ret
008B            752   ;------------------------------------------------------------
008B            753   ;Allocation info for local variables in function 'Timer3us'
008B            754   ;------------------------------------------------------------
008B            755   ;us                        Allocated to registers r2 
008B            756   ;i                         Allocated to registers r3 
008B            757   ;------------------------------------------------------------
008B            758   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:180: void Timer3us(unsigned char us)
008B            759   ;        -----------------------------------------
008B            760   ;         function Timer3us
008B            761   ;        -----------------------------------------
008B            762   _Timer3us:
008B AA82       763            mov     r2,dpl
008D            764   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:185: CKCON0|=0b_0100_0000;
008D 438E40     765            orl     _CKCON0,#0x40
0090            766   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:187: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0090 7592B8     767            mov     _TMR3RL,#0xB8
0093 7593FF     768            mov     (_TMR3RL >> 8),#0xFF
0096            769   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:188: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0096 859294     770            mov     _TMR3,_TMR3RL
0099 859395     771            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
009C            772   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:190: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
009C 759104     773            mov     _TMR3CN0,#0x04
009F            774   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:191: for (i = 0; i < us; i++)       // Count <us> overflows
009F 7B00       775            mov     r3,#0x00
00A1            776   L005004?:
00A1 C3         777            clr     c
00A2 EB         778            mov     a,r3
00A3 9A         779            subb    a,r2
00A4 5000       780            jnc     L005007?
00A6            781   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:193: while (!(TMR3CN0 & 0x80));  // Wait for overflow
00A6            782   L005001?:
00A6 E591       783            mov     a,_TMR3CN0
00A8 30E768     784            jnb     acc.7,L005001?
00AB            785   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:194: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
00AB 53917F     786            anl     _TMR3CN0,#0x7F
00AE            787   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:191: for (i = 0; i < us; i++)       // Count <us> overflows
00AE 0B         788            inc     r3
00AF 8000       789            sjmp    L005004?
00B1            790   L005007?:
00B1            791   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:196: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
00B1 759100     792            mov     _TMR3CN0,#0x00
00B4 22         793            ret
00B5            794   ;------------------------------------------------------------
00B5            795   ;Allocation info for local variables in function 'waitms'
00B5            796   ;------------------------------------------------------------
00B5            797   ;ms                        Allocated to registers r2 r3 
00B5            798   ;j                         Allocated to registers r4 r5 
00B5            799   ;k                         Allocated to registers r6 
00B5            800   ;------------------------------------------------------------
00B5            801   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:199: void waitms (unsigned int ms)
00B5            802   ;        -----------------------------------------
00B5            803   ;         function waitms
00B5            804   ;        -----------------------------------------
00B5            805   _waitms:
00B5 AA82       806            mov     r2,dpl
00B7 AB83       807            mov     r3,dph
00B9            808   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:203: for(j=0; j<ms; j++)
00B9 7C00       809            mov     r4,#0x00
00BB 7D00       810            mov     r5,#0x00
00BD            811   L006005?:
00BD C3         812            clr     c
00BE EC         813            mov     a,r4
00BF 9A         814            subb    a,r2
00C0 ED         815            mov     a,r5
00C1 9B         816            subb    a,r3
00C2 5000       817            jnc     L006009?
00C4            818   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:204: for (k=0; k<4; k++) Timer3us(250);
00C4 7E00       819            mov     r6,#0x00
00C6            820   L006001?:
00C6 BE04A8     821            cjne    r6,#0x04,L006018?
00C9            822   L006018?:
00C9 5000       823            jnc     L006007?
00CB 7582FA     824            mov     dpl,#0xFA
00CE C002       825            push    ar2
00D0 C003       826            push    ar3
00D2 C004       827            push    ar4
00D4 C005       828            push    ar5
00D6 C006       829            push    ar6
00D8 120000     830            lcall   _Timer3us
00DB D006       831            pop     ar6
00DD D005       832            pop     ar5
00DF D004       833            pop     ar4
00E1 D003       834            pop     ar3
00E3 D002       835            pop     ar2
00E5 0E         836            inc     r6
00E6 8000       837            sjmp    L006001?
00E8            838   L006007?:
00E8            839   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:203: for(j=0; j<ms; j++)
00E8 0C         840            inc     r4
00E9 BC00E8     841            cjne    r4,#0x00,L006005?
00EC 0D         842            inc     r5
00ED 8000       843            sjmp    L006005?
00EF            844   L006009?:
00EF 22         845            ret
00F0            846   ;------------------------------------------------------------
00F0            847   ;Allocation info for local variables in function 'InitPinADC'
00F0            848   ;------------------------------------------------------------
00F0            849   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00F0            850   ;portno                    Allocated to registers r2 
00F0            851   ;mask                      Allocated to registers r3 
00F0            852   ;------------------------------------------------------------
00F0            853   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:209: void InitPinADC (unsigned char portno, unsigned char pinno)
00F0            854   ;        -----------------------------------------
00F0            855   ;         function InitPinADC
00F0            856   ;        -----------------------------------------
00F0            857   _InitPinADC:
00F0 AA82       858            mov     r2,dpl
00F2            859   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:213: mask=1<<pinno;
00F2 85B0F0     860            mov     b,_InitPinADC_PARM_2
00F5 05F0       861            inc     b
00F7 7401       862            mov     a,#0x01
00F9 8000       863            sjmp    L007013?
00FB            864   L007011?:
00FB 25E0       865            add     a,acc
00FD            866   L007013?:
00FD D5F0A8     867            djnz    b,L007011?
0100 FB         868            mov     r3,a
0101            869   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:215: SFRPAGE = 0x20;
0101 75A720     870            mov     _SFRPAGE,#0x20
0104            871   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:216: switch (portno)
0104 BA00E8     872            cjne    r2,#0x00,L007014?
0107 8000       873            sjmp    L007001?
0109            874   L007014?:
0109 BA0168     875            cjne    r2,#0x01,L007015?
010C 8000       876            sjmp    L007002?
010E            877   L007015?:
010E            878   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:218: case 0:
010E BA02E8     879            cjne    r2,#0x02,L007005?
0111 8000       880            sjmp    L007003?
0113            881   L007001?:
0113            882   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:219: P0MDIN &= (~mask); // Set pin as analog input
0113 EB         883            mov     a,r3
0114 F4         884            cpl     a
0115 FA         885            mov     r2,a
0116 52F1       886            anl     _P0MDIN,a
0118            887   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:220: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0118 EB         888            mov     a,r3
0119 42D4       889            orl     _P0SKIP,a
011B            890   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:221: break;
011B            891   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:222: case 1:
011B 8000       892            sjmp    L007005?
011D            893   L007002?:
011D            894   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:223: P1MDIN &= (~mask); // Set pin as analog input
011D EB         895            mov     a,r3
011E F4         896            cpl     a
011F FA         897            mov     r2,a
0120 52F2       898            anl     _P1MDIN,a
0122            899   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:224: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0122 EB         900            mov     a,r3
0123 42D5       901            orl     _P1SKIP,a
0125            902   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:225: break;
0125            903   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:226: case 2:
0125 8000       904            sjmp    L007005?
0127            905   L007003?:
0127            906   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:227: P2MDIN &= (~mask); // Set pin as analog input
0127 EB         907            mov     a,r3
0128 F4         908            cpl     a
0129 FA         909            mov     r2,a
012A 52F3       910            anl     _P2MDIN,a
012C            911   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:228: P2SKIP |= mask; // Skip Crossbar decoding for this pin
012C EB         912            mov     a,r3
012D 42CC       913            orl     _P2SKIP,a
012F            914   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:232: }
012F            915   L007005?:
012F            916   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:233: SFRPAGE = 0x00;
012F 75A700     917            mov     _SFRPAGE,#0x00
0132 22         918            ret
0133            919   ;------------------------------------------------------------
0133            920   ;Allocation info for local variables in function 'TIMER0_Init'
0133            921   ;------------------------------------------------------------
0133            922   ;------------------------------------------------------------
0133            923   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:236: void TIMER0_Init(void)
0133            924   ;        -----------------------------------------
0133            925   ;         function TIMER0_Init
0133            926   ;        -----------------------------------------
0133            927   _TIMER0_Init:
0133            928   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:238: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0133 5389F0     929            anl     _TMOD,#0xF0
0136            930   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:239: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0136 438901     931            orl     _TMOD,#0x01
0139            932   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:240: TR0=0; // Stop Timer/Counter 0
0139 C28C       933            clr     _TR0
013B 22         934            ret
013C            935   ;------------------------------------------------------------
013C            936   ;Allocation info for local variables in function 'ADC_at_Pin'
013C            937   ;------------------------------------------------------------
013C            938   ;pin                       Allocated to registers 
013C            939   ;------------------------------------------------------------
013C            940   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:243: unsigned int ADC_at_Pin(unsigned char pin)
013C            941   ;        -----------------------------------------
013C            942   ;         function ADC_at_Pin
013C            943   ;        -----------------------------------------
013C            944   _ADC_at_Pin:
013C 8582BB     945            mov     _ADC0MX,dpl
013F            946   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:246: ADINT = 0;
013F C2ED       947            clr     _ADINT
0141            948   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:247: ADBUSY = 1;     // Convert voltage at the pin
0141 D2EC       949            setb    _ADBUSY
0143            950   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:248: while (!ADINT); // Wait for conversion to complete
0143            951   L009001?:
0143 30ED68     952            jnb     _ADINT,L009001?
0146            953   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:249: return (ADC0);
0146 85BD82     954            mov     dpl,_ADC0
0149 85BE83     955            mov     dph,(_ADC0 >> 8)
014C 22         956            ret
014D            957   ;------------------------------------------------------------
014D            958   ;Allocation info for local variables in function 'Get_ADC'
014D            959   ;------------------------------------------------------------
014D            960   ;------------------------------------------------------------
014D            961   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:252: unsigned int Get_ADC (void)
014D            962   ;        -----------------------------------------
014D            963   ;         function Get_ADC
014D            964   ;        -----------------------------------------
014D            965   _Get_ADC:
014D            966   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:254: ADINT = 0;
014D C2ED       967            clr     _ADINT
014F            968   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:255: ADBUSY = 1;
014F D2EC       969            setb    _ADBUSY
0151            970   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:256: while (!ADINT); // Wait for conversion to complete
0151            971   L010001?:
0151 30EDA8     972            jnb     _ADINT,L010001?
0154            973   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:257: return (ADC0);
0154 85BD82     974            mov     dpl,_ADC0
0157 85BE83     975            mov     dph,(_ADC0 >> 8)
015A 22         976            ret
015B            977   ;------------------------------------------------------------
015B            978   ;Allocation info for local variables in function 'Volts_at_Pin'
015B            979   ;------------------------------------------------------------
015B            980   ;pin                       Allocated to registers r2 
015B            981   ;------------------------------------------------------------
015B            982   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:261: float Volts_at_Pin(unsigned char pin)
015B            983   ;        -----------------------------------------
015B            984   ;         function Volts_at_Pin
015B            985   ;        -----------------------------------------
015B            986   _Volts_at_Pin:
015B            987   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:263: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
015B 120000     988            lcall   _ADC_at_Pin
015E 120000     989            lcall   ___uint2fs
0161 AA82       990            mov     r2,dpl
0163 AB83       991            mov     r3,dph
0165 ACF0       992            mov     r4,b
0167 FD         993            mov     r5,a
0168 C002       994            push    ar2
016A C003       995            push    ar3
016C C004       996            push    ar4
016E C005       997            push    ar5
0170 906C8B     998            mov     dptr,#0x6C8B
0173 75F053     999            mov     b,#0x53
0176 7440      1000            mov     a,#0x40
0178 120000    1001            lcall   ___fsmul
017B AA82      1002            mov     r2,dpl
017D AB83      1003            mov     r3,dph
017F ACF0      1004            mov     r4,b
0181 FD        1005            mov     r5,a
0182 E581      1006            mov     a,sp
0184 24FC      1007            add     a,#0xfc
0186 F581      1008            mov     sp,a
0188 E4        1009            clr     a
0189 C0E0      1010            push    acc
018B 74FC      1011            mov     a,#0xFC
018D C0E0      1012            push    acc
018F 747F      1013            mov     a,#0x7F
0191 C0E0      1014            push    acc
0193 7446      1015            mov     a,#0x46
0195 C0E0      1016            push    acc
0197 8A82      1017            mov     dpl,r2
0199 8B83      1018            mov     dph,r3
019B 8CF0      1019            mov     b,r4
019D ED        1020            mov     a,r5
019E 120000    1021            lcall   ___fsdiv
01A1 AA82      1022            mov     r2,dpl
01A3 AB83      1023            mov     r3,dph
01A5 ACF0      1024            mov     r4,b
01A7 FD        1025            mov     r5,a
01A8 E581      1026            mov     a,sp
01AA 24FC      1027            add     a,#0xfc
01AC F581      1028            mov     sp,a
01AE 8A82      1029            mov     dpl,r2
01B0 8B83      1030            mov     dph,r3
01B2 8CF0      1031            mov     b,r4
01B4 ED        1032            mov     a,r5
01B5 22        1033            ret
01B6           1034   ;------------------------------------------------------------
01B6           1035   ;Allocation info for local variables in function 'LCD_pulse'
01B6           1036   ;------------------------------------------------------------
01B6           1037   ;------------------------------------------------------------
01B6           1038   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:267: void LCD_pulse (void)
01B6           1039   ;        -----------------------------------------
01B6           1040   ;         function LCD_pulse
01B6           1041   ;        -----------------------------------------
01B6           1042   _LCD_pulse:
01B6           1043   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:269: LCD_E=1;
01B6 D296      1044            setb    _P1_6
01B8           1045   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:270: Timer3us(40);
01B8 758228    1046            mov     dpl,#0x28
01BB 120000    1047            lcall   _Timer3us
01BE           1048   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:271: LCD_E=0;
01BE C296      1049            clr     _P1_6
01C0 22        1050            ret
01C1           1051   ;------------------------------------------------------------
01C1           1052   ;Allocation info for local variables in function 'LCD_byte'
01C1           1053   ;------------------------------------------------------------
01C1           1054   ;x                         Allocated to registers r2 
01C1           1055   ;------------------------------------------------------------
01C1           1056   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:274: void LCD_byte (unsigned char x)
01C1           1057   ;        -----------------------------------------
01C1           1058   ;         function LCD_byte
01C1           1059   ;        -----------------------------------------
01C1           1060   _LCD_byte:
01C1 AA82      1061            mov     r2,dpl
01C3           1062   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:277: ACC=x; //Send high nible
01C3 8AE0      1063            mov     _ACC,r2
01C5           1064   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:278: LCD_D7=ACC_7;
01C5 A2E7      1065            mov     c,_ACC_7
01C7 9290      1066            mov     _P1_0,c
01C9           1067   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:279: LCD_D6=ACC_6;
01C9 A2E6      1068            mov     c,_ACC_6
01CB 9291      1069            mov     _P1_1,c
01CD           1070   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:280: LCD_D5=ACC_5;
01CD A2E5      1071            mov     c,_ACC_5
01CF 9292      1072            mov     _P1_2,c
01D1           1073   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:281: LCD_D4=ACC_4;
01D1 A2E4      1074            mov     c,_ACC_4
01D3 9293      1075            mov     _P1_3,c
01D5           1076   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:282: LCD_pulse();
01D5 C002      1077            push    ar2
01D7 120000    1078            lcall   _LCD_pulse
01DA           1079   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:283: Timer3us(40);
01DA 758228    1080            mov     dpl,#0x28
01DD 120000    1081            lcall   _Timer3us
01E0 D002      1082            pop     ar2
01E2           1083   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:284: ACC=x; //Send low nible
01E2 8AE0      1084            mov     _ACC,r2
01E4           1085   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:285: LCD_D7=ACC_3;
01E4 A2E3      1086            mov     c,_ACC_3
01E6 9290      1087            mov     _P1_0,c
01E8           1088   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:286: LCD_D6=ACC_2;
01E8 A2E2      1089            mov     c,_ACC_2
01EA 9291      1090            mov     _P1_1,c
01EC           1091   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:287: LCD_D5=ACC_1;
01EC A2E1      1092            mov     c,_ACC_1
01EE 9292      1093            mov     _P1_2,c
01F0           1094   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:288: LCD_D4=ACC_0;
01F0 A2E0      1095            mov     c,_ACC_0
01F2 9293      1096            mov     _P1_3,c
01F4           1097   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:289: LCD_pulse();
01F4 020000    1098            ljmp    _LCD_pulse
01F7           1099   ;------------------------------------------------------------
01F7           1100   ;Allocation info for local variables in function 'WriteData'
01F7           1101   ;------------------------------------------------------------
01F7           1102   ;x                         Allocated to registers r2 
01F7           1103   ;------------------------------------------------------------
01F7           1104   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:293: void WriteData (unsigned char x)
01F7           1105   ;        -----------------------------------------
01F7           1106   ;         function WriteData
01F7           1107   ;        -----------------------------------------
01F7           1108   _WriteData:
01F7 AA82      1109            mov     r2,dpl
01F9           1110   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:295: LCD_RS=1;
01F9 D297      1111            setb    _P1_7
01FB           1112   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:296: LCD_byte(x);
01FB 8A82      1113            mov     dpl,r2
01FD 120000    1114            lcall   _LCD_byte
0200           1115   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:297: waitms(2);
0200 900002    1116            mov     dptr,#0x0002
0203 020000    1117            ljmp    _waitms
0206           1118   ;------------------------------------------------------------
0206           1119   ;Allocation info for local variables in function 'WriteCommand'
0206           1120   ;------------------------------------------------------------
0206           1121   ;x                         Allocated to registers r2 
0206           1122   ;------------------------------------------------------------
0206           1123   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:300: void WriteCommand (unsigned char x)
0206           1124   ;        -----------------------------------------
0206           1125   ;         function WriteCommand
0206           1126   ;        -----------------------------------------
0206           1127   _WriteCommand:
0206 AA82      1128            mov     r2,dpl
0208           1129   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:302: LCD_RS=0;
0208 C297      1130            clr     _P1_7
020A           1131   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:303: LCD_byte(x);
020A 8A82      1132            mov     dpl,r2
020C 120000    1133            lcall   _LCD_byte
020F           1134   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:304: waitms(5);
020F 900005    1135            mov     dptr,#0x0005
0212 020000    1136            ljmp    _waitms
0215           1137   ;------------------------------------------------------------
0215           1138   ;Allocation info for local variables in function 'LCD_4BIT'
0215           1139   ;------------------------------------------------------------
0215           1140   ;------------------------------------------------------------
0215           1141   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:307: void LCD_4BIT (void)
0215           1142   ;        -----------------------------------------
0215           1143   ;         function LCD_4BIT
0215           1144   ;        -----------------------------------------
0215           1145   _LCD_4BIT:
0215           1146   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:309: LCD_E=0; // Resting state of LCD's enable is zero
0215 C296      1147            clr     _P1_6
0217           1148   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:311: waitms(20);
0217 900014    1149            mov     dptr,#0x0014
021A 120000    1150            lcall   _waitms
021D           1151   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:313: WriteCommand(0x33);
021D 758233    1152            mov     dpl,#0x33
0220 120000    1153            lcall   _WriteCommand
0223           1154   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:314: WriteCommand(0x33);
0223 758233    1155            mov     dpl,#0x33
0226 120000    1156            lcall   _WriteCommand
0229           1157   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:315: WriteCommand(0x32); // Change to 4-bit mode
0229 758232    1158            mov     dpl,#0x32
022C 120000    1159            lcall   _WriteCommand
022F           1160   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:317: WriteCommand(0x28);
022F 758228    1161            mov     dpl,#0x28
0232 120000    1162            lcall   _WriteCommand
0235           1163   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:318: WriteCommand(0x0c);
0235 75820C    1164            mov     dpl,#0x0C
0238 120000    1165            lcall   _WriteCommand
023B           1166   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:319: WriteCommand(0x01); // Clear screen command (takes some time)
023B 758201    1167            mov     dpl,#0x01
023E 120000    1168            lcall   _WriteCommand
0241           1169   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:320: waitms(20); // Wait for clear screen command to finsih.
0241 900014    1170            mov     dptr,#0x0014
0244 020000    1171            ljmp    _waitms
0247           1172   ;------------------------------------------------------------
0247           1173   ;Allocation info for local variables in function 'LCDprint'
0247           1174   ;------------------------------------------------------------
0247           1175   ;line                      Allocated with name '_LCDprint_PARM_2'
0247           1176   ;string                    Allocated to registers r2 r3 r4 
0247           1177   ;j                         Allocated to registers r5 r6 
0247           1178   ;------------------------------------------------------------
0247           1179   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:323: void LCDprint(char * string, unsigned char line, bit clear)
0247           1180   ;        -----------------------------------------
0247           1181   ;         function LCDprint
0247           1182   ;        -----------------------------------------
0247           1183   _LCDprint:
0247 AA82      1184            mov     r2,dpl
0249 AB83      1185            mov     r3,dph
024B ACF0      1186            mov     r4,b
024D           1187   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:326: WriteCommand(line==2?0xc0:0x80);
024D 7402      1188            mov     a,#0x02
024F B5A8E8    1189            cjne    a,_LCDprint_PARM_2,L017013?
0252 7DC0      1190            mov     r5,#0xC0
0254 8000      1191            sjmp    L017014?
0256           1192   L017013?:
0256 7D80      1193            mov     r5,#0x80
0258           1194   L017014?:
0258 8D82      1195            mov     dpl,r5
025A C002      1196            push    ar2
025C C003      1197            push    ar3
025E C004      1198            push    ar4
0260 120000    1199            lcall   _WriteCommand
0263           1200   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:327: waitms(5);
0263 900005    1201            mov     dptr,#0x0005
0266 120000    1202            lcall   _waitms
0269 D004      1203            pop     ar4
026B D003      1204            pop     ar3
026D D002      1205            pop     ar2
026F           1206   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:328: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
026F 7D00      1207            mov     r5,#0x00
0271 7E00      1208            mov     r6,#0x00
0273           1209   L017003?:
0273 ED        1210            mov     a,r5
0274 2A        1211            add     a,r2
0275 FF        1212            mov     r7,a
0276 EE        1213            mov     a,r6
0277 3B        1214            addc    a,r3
0278 F8        1215            mov     r0,a
0279 8C01      1216            mov     ar1,r4
027B 8F82      1217            mov     dpl,r7
027D 8883      1218            mov     dph,r0
027F 89F0      1219            mov     b,r1
0281 120000    1220            lcall   __gptrget
0284 FF        1221            mov     r7,a
0285 6000      1222            jz      L017006?
0287 8F82      1223            mov     dpl,r7
0289 C002      1224            push    ar2
028B C003      1225            push    ar3
028D C004      1226            push    ar4
028F C005      1227            push    ar5
0291 C006      1228            push    ar6
0293 120000    1229            lcall   _WriteData
0296 D006      1230            pop     ar6
0298 D005      1231            pop     ar5
029A D004      1232            pop     ar4
029C D003      1233            pop     ar3
029E D002      1234            pop     ar2
02A0 0D        1235            inc     r5
02A1 BD0068    1236            cjne    r5,#0x00,L017003?
02A4 0E        1237            inc     r6
02A5 8000      1238            sjmp    L017003?
02A7           1239   L017006?:
02A7           1240   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:329: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest ofthe line
02A7 302828    1241            jnb     _LCDprint_PARM_3,L017011?
02AA 8D02      1242            mov     ar2,r5
02AC 8E03      1243            mov     ar3,r6
02AE           1244   L017007?:
02AE C3        1245            clr     c
02AF EA        1246            mov     a,r2
02B0 9410      1247            subb    a,#0x10
02B2 EB        1248            mov     a,r3
02B3 6480      1249            xrl     a,#0x80
02B5 9480      1250            subb    a,#0x80
02B7 5000      1251            jnc     L017011?
02B9 758220    1252            mov     dpl,#0x20
02BC C002      1253            push    ar2
02BE C003      1254            push    ar3
02C0 120000    1255            lcall   _WriteData
02C3 D003      1256            pop     ar3
02C5 D002      1257            pop     ar2
02C7 0A        1258            inc     r2
02C8 BA0068    1259            cjne    r2,#0x00,L017007?
02CB 0B        1260            inc     r3
02CC 8000      1261            sjmp    L017007?
02CE           1262   L017011?:
02CE 22        1263            ret
02CF           1264   ;------------------------------------------------------------
02CF           1265   ;Allocation info for local variables in function 'map2'
02CF           1266   ;------------------------------------------------------------
02CF           1267   ;in_min                    Allocated with name '_map2_PARM_2'
02CF           1268   ;in_max                    Allocated with name '_map2_PARM_3'
02CF           1269   ;out_min                   Allocated with name '_map2_PARM_4'
02CF           1270   ;out_max                   Allocated with name '_map2_PARM_5'
02CF           1271   ;x                         Allocated to registers r2 r3 r4 r5 
02CF           1272   ;value                     Allocated to registers r2 r3 r4 r5 
02CF           1273   ;------------------------------------------------------------
02CF           1274   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:332: float map2(float x, float in_min, float in_max, float out_min, float out_max)
02CF           1275   ;        -----------------------------------------
02CF           1276   ;         function map2
02CF           1277   ;        -----------------------------------------
02CF           1278   _map2:
02CF AA82      1279            mov     r2,dpl
02D1 AB83      1280            mov     r3,dph
02D3 ACF0      1281            mov     r4,b
02D5 FD        1282            mov     r5,a
02D6           1283   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:349: float value =  (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
02D6 C058      1284            push    _map2_PARM_2
02D8 C059      1285            push    (_map2_PARM_2 + 1)
02DA C05A      1286            push    (_map2_PARM_2 + 2)
02DC C05B      1287            push    (_map2_PARM_2 + 3)
02DE 8A82      1288            mov     dpl,r2
02E0 8B83      1289            mov     dph,r3
02E2 8CF0      1290            mov     b,r4
02E4 ED        1291            mov     a,r5
02E5 120000    1292            lcall   ___fssub
02E8 AA82      1293            mov     r2,dpl
02EA AB83      1294            mov     r3,dph
02EC ACF0      1295            mov     r4,b
02EE FD        1296            mov     r5,a
02EF E581      1297            mov     a,sp
02F1 24FC      1298            add     a,#0xfc
02F3 F581      1299            mov     sp,a
02F5 C002      1300            push    ar2
02F7 C003      1301            push    ar3
02F9 C004      1302            push    ar4
02FB C005      1303            push    ar5
02FD C0D8      1304            push    _map2_PARM_4
02FF C0D9      1305            push    (_map2_PARM_4 + 1)
0301 C0DA      1306            push    (_map2_PARM_4 + 2)
0303 C0DB      1307            push    (_map2_PARM_4 + 3)
0305 859882    1308            mov     dpl,_map2_PARM_5
0308 859983    1309            mov     dph,(_map2_PARM_5 + 1)
030B 859AF0    1310            mov     b,(_map2_PARM_5 + 2)
030E E59B      1311            mov     a,(_map2_PARM_5 + 3)
0310 120000    1312            lcall   ___fssub
0313 AE82      1313            mov     r6,dpl
0315 AF83      1314            mov     r7,dph
0317 A8F0      1315            mov     r0,b
0319 F9        1316            mov     r1,a
031A E581      1317            mov     a,sp
031C 24FC      1318            add     a,#0xfc
031E F581      1319            mov     sp,a
0320 D005      1320            pop     ar5
0322 D004      1321            pop     ar4
0324 D003      1322            pop     ar3
0326 D002      1323            pop     ar2
0328 C006      1324            push    ar6
032A C007      1325            push    ar7
032C C000      1326            push    ar0
032E C001      1327            push    ar1
0330 8A82      1328            mov     dpl,r2
0332 8B83      1329            mov     dph,r3
0334 8CF0      1330            mov     b,r4
0336 ED        1331            mov     a,r5
0337 120000    1332            lcall   ___fsmul
033A AA82      1333            mov     r2,dpl
033C AB83      1334            mov     r3,dph
033E ACF0      1335            mov     r4,b
0340 FD        1336            mov     r5,a
0341 E581      1337            mov     a,sp
0343 24FC      1338            add     a,#0xfc
0345 F581      1339            mov     sp,a
0347 C002      1340            push    ar2
0349 C003      1341            push    ar3
034B C004      1342            push    ar4
034D C005      1343            push    ar5
034F C058      1344            push    _map2_PARM_2
0351 C059      1345            push    (_map2_PARM_2 + 1)
0353 C05A      1346            push    (_map2_PARM_2 + 2)
0355 C05B      1347            push    (_map2_PARM_2 + 3)
0357 851882    1348            mov     dpl,_map2_PARM_3
035A 851983    1349            mov     dph,(_map2_PARM_3 + 1)
035D 851AF0    1350            mov     b,(_map2_PARM_3 + 2)
0360 E51B      1351            mov     a,(_map2_PARM_3 + 3)
0362 120000    1352            lcall   ___fssub
0365 AE82      1353            mov     r6,dpl
0367 AF83      1354            mov     r7,dph
0369 A8F0      1355            mov     r0,b
036B F9        1356            mov     r1,a
036C E581      1357            mov     a,sp
036E 24FC      1358            add     a,#0xfc
0370 F581      1359            mov     sp,a
0372 D005      1360            pop     ar5
0374 D004      1361            pop     ar4
0376 D003      1362            pop     ar3
0378 D002      1363            pop     ar2
037A C006      1364            push    ar6
037C C007      1365            push    ar7
037E C000      1366            push    ar0
0380 C001      1367            push    ar1
0382 8A82      1368            mov     dpl,r2
0384 8B83      1369            mov     dph,r3
0386 8CF0      1370            mov     b,r4
0388 ED        1371            mov     a,r5
0389 120000    1372            lcall   ___fsdiv
038C AA82      1373            mov     r2,dpl
038E AB83      1374            mov     r3,dph
0390 ACF0      1375            mov     r4,b
0392 FD        1376            mov     r5,a
0393 E581      1377            mov     a,sp
0395 24FC      1378            add     a,#0xfc
0397 F581      1379            mov     sp,a
0399 C0D8      1380            push    _map2_PARM_4
039B C0D9      1381            push    (_map2_PARM_4 + 1)
039D C0DA      1382            push    (_map2_PARM_4 + 2)
039F C0DB      1383            push    (_map2_PARM_4 + 3)
03A1 8A82      1384            mov     dpl,r2
03A3 8B83      1385            mov     dph,r3
03A5 8CF0      1386            mov     b,r4
03A7 ED        1387            mov     a,r5
03A8 120000    1388            lcall   ___fsadd
03AB AA82      1389            mov     r2,dpl
03AD AB83      1390            mov     r3,dph
03AF ACF0      1391            mov     r4,b
03B1 FD        1392            mov     r5,a
03B2 E581      1393            mov     a,sp
03B4 24FC      1394            add     a,#0xfc
03B6 F581      1395            mov     sp,a
03B8           1396   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:350: return value;
03B8 8A82      1397            mov     dpl,r2
03BA 8B83      1398            mov     dph,r3
03BC 8CF0      1399            mov     b,r4
03BE ED        1400            mov     a,r5
03BF 22        1401            ret
03C0           1402   ;------------------------------------------------------------
03C0           1403   ;Allocation info for local variables in function 'LEDgetposition'
03C0           1404   ;------------------------------------------------------------
03C0           1405   ;volts                     Allocated to registers r2 r3 r4 
03C0           1406   ;------------------------------------------------------------
03C0           1407   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:353: void LEDgetposition (float volts[2]) {
03C0           1408   ;        -----------------------------------------
03C0           1409   ;         function LEDgetposition
03C0           1410   ;        -----------------------------------------
03C0           1411   _LEDgetposition:
03C0           1412   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:365: volts[0] = volts[0] - external_voltage_reference; //convert to midpoint
03C0 AA82      1413            mov     r2,dpl
03C2 AB83      1414            mov     r3,dph
03C4 ACF0      1415            mov     r4,b
03C6 120000    1416            lcall   __gptrget
03C9 FD        1417            mov     r5,a
03CA A3        1418            inc     dptr
03CB 120000    1419            lcall   __gptrget
03CE FE        1420            mov     r6,a
03CF A3        1421            inc     dptr
03D0 120000    1422            lcall   __gptrget
03D3 FF        1423            mov     r7,a
03D4 A3        1424            inc     dptr
03D5 120000    1425            lcall   __gptrget
03D8 F8        1426            mov     r0,a
03D9 C002      1427            push    ar2
03DB C003      1428            push    ar3
03DD C004      1429            push    ar4
03DF 74FD      1430            mov     a,#0xFD
03E1 C0E0      1431            push    acc
03E3 7487      1432            mov     a,#0x87
03E5 C0E0      1433            push    acc
03E7 74E4      1434            mov     a,#0xE4
03E9 C0E0      1435            push    acc
03EB 743F      1436            mov     a,#0x3F
03ED C0E0      1437            push    acc
03EF 8D82      1438            mov     dpl,r5
03F1 8E83      1439            mov     dph,r6
03F3 8FF0      1440            mov     b,r7
03F5 E8        1441            mov     a,r0
03F6 120000    1442            lcall   ___fssub
03F9 AD82      1443            mov     r5,dpl
03FB AE83      1444            mov     r6,dph
03FD AFF0      1445            mov     r7,b
03FF F8        1446            mov     r0,a
0400 E581      1447            mov     a,sp
0402 24FC      1448            add     a,#0xfc
0404 F581      1449            mov     sp,a
0406 D004      1450            pop     ar4
0408 D003      1451            pop     ar3
040A D002      1452            pop     ar2
040C 8A82      1453            mov     dpl,r2
040E 8B83      1454            mov     dph,r3
0410 8CF0      1455            mov     b,r4
0412 ED        1456            mov     a,r5
0413 120000    1457            lcall   __gptrput
0416 A3        1458            inc     dptr
0417 EE        1459            mov     a,r6
0418 120000    1460            lcall   __gptrput
041B A3        1461            inc     dptr
041C EF        1462            mov     a,r7
041D 120000    1463            lcall   __gptrput
0420 A3        1464            inc     dptr
0421 E8        1465            mov     a,r0
0422 120000    1466            lcall   __gptrput
0425           1467   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:366: volts[1] = volts[1] - external_voltage_reference;
0425 7404      1468            mov     a,#0x04
0427 2A        1469            add     a,r2
0428 FA        1470            mov     r2,a
0429 E4        1471            clr     a
042A 3B        1472            addc    a,r3
042B FB        1473            mov     r3,a
042C 8A82      1474            mov     dpl,r2
042E 8B83      1475            mov     dph,r3
0430 8CF0      1476            mov     b,r4
0432 120000    1477            lcall   __gptrget
0435 FD        1478            mov     r5,a
0436 A3        1479            inc     dptr
0437 120000    1480            lcall   __gptrget
043A FE        1481            mov     r6,a
043B A3        1482            inc     dptr
043C 120000    1483            lcall   __gptrget
043F FF        1484            mov     r7,a
0440 A3        1485            inc     dptr
0441 120000    1486            lcall   __gptrget
0444 F8        1487            mov     r0,a
0445 C002      1488            push    ar2
0447 C003      1489            push    ar3
0449 C004      1490            push    ar4
044B 74FD      1491            mov     a,#0xFD
044D C0E0      1492            push    acc
044F 7487      1493            mov     a,#0x87
0451 C0E0      1494            push    acc
0453 74E4      1495            mov     a,#0xE4
0455 C0E0      1496            push    acc
0457 743F      1497            mov     a,#0x3F
0459 C0E0      1498            push    acc
045B 8D82      1499            mov     dpl,r5
045D 8E83      1500            mov     dph,r6
045F 8FF0      1501            mov     b,r7
0461 E8        1502            mov     a,r0
0462 120000    1503            lcall   ___fssub
0465 AD82      1504            mov     r5,dpl
0467 AE83      1505            mov     r6,dph
0469 AFF0      1506            mov     r7,b
046B F8        1507            mov     r0,a
046C E581      1508            mov     a,sp
046E 24FC      1509            add     a,#0xfc
0470 F581      1510            mov     sp,a
0472 D004      1511            pop     ar4
0474 D003      1512            pop     ar3
0476 D002      1513            pop     ar2
0478 8A82      1514            mov     dpl,r2
047A 8B83      1515            mov     dph,r3
047C 8CF0      1516            mov     b,r4
047E ED        1517            mov     a,r5
047F 120000    1518            lcall   __gptrput
0482 A3        1519            inc     dptr
0483 EE        1520            mov     a,r6
0484 120000    1521            lcall   __gptrput
0487 A3        1522            inc     dptr
0488 EF        1523            mov     a,r7
0489 120000    1524            lcall   __gptrput
048C A3        1525            inc     dptr
048D E8        1526            mov     a,r0
048E           1527   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:372: return;
048E 020000    1528            ljmp    __gptrput
0491           1529   ;------------------------------------------------------------
0491           1530   ;Allocation info for local variables in function 'GetPosition2'
0491           1531   ;------------------------------------------------------------
0491           1532   ;pos                       Allocated with name '_GetPosition2_PARM_2'
0491           1533   ;volts                     Allocated to registers r2 r3 r4 
0491           1534   ;mov_x                     Allocated to registers 
0491           1535   ;mov_y                     Allocated to registers 
0491           1536   ;mid_x                     Allocated to registers 
0491           1537   ;mid_y                     Allocated to registers 
0491           1538   ;vx                        Allocated with name '_GetPosition2_vx_1_122'
0491           1539   ;vy                        Allocated with name '_GetPosition2_vy_1_122'
0491           1540   ;------------------------------------------------------------
0491           1541   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:377: void GetPosition2 (float volts[2], float pos[2]) {
0491           1542   ;        -----------------------------------------
0491           1543   ;         function GetPosition2
0491           1544   ;        -----------------------------------------
0491           1545   _GetPosition2:
0491           1546   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:386: float vx = volts[0];
0491 AA82      1547            mov     r2,dpl
0493 AB83      1548            mov     r3,dph
0495 ACF0      1549            mov     r4,b
0497 120000    1550            lcall   __gptrget
049A F5F8      1551            mov     _GetPosition2_vx_1_122,a
049C A3        1552            inc     dptr
049D 120000    1553            lcall   __gptrget
04A0 F5F9      1554            mov     (_GetPosition2_vx_1_122 + 1),a
04A2 A3        1555            inc     dptr
04A3 120000    1556            lcall   __gptrget
04A6 F5FA      1557            mov     (_GetPosition2_vx_1_122 + 2),a
04A8 A3        1558            inc     dptr
04A9 120000    1559            lcall   __gptrget
04AC F5FB      1560            mov     (_GetPosition2_vx_1_122 + 3),a
04AE           1561   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:387: float vy = volts[1];
04AE 7404      1562            mov     a,#0x04
04B0 2A        1563            add     a,r2
04B1 FA        1564            mov     r2,a
04B2 E4        1565            clr     a
04B3 3B        1566            addc    a,r3
04B4 FB        1567            mov     r3,a
04B5 8A82      1568            mov     dpl,r2
04B7 8B83      1569            mov     dph,r3
04B9 8CF0      1570            mov     b,r4
04BB 120000    1571            lcall   __gptrget
04BE F548      1572            mov     _GetPosition2_vy_1_122,a
04C0 A3        1573            inc     dptr
04C1 120000    1574            lcall   __gptrget
04C4 F549      1575            mov     (_GetPosition2_vy_1_122 + 1),a
04C6 A3        1576            inc     dptr
04C7 120000    1577            lcall   __gptrget
04CA F54A      1578            mov     (_GetPosition2_vy_1_122 + 2),a
04CC A3        1579            inc     dptr
04CD 120000    1580            lcall   __gptrget
04D0 F54B      1581            mov     (_GetPosition2_vy_1_122 + 3),a
04D2           1582   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:389: if (pos[0] < mid_x) {
04D2 AA58      1583            mov     r2,_GetPosition2_PARM_2
04D4 AB59      1584            mov     r3,(_GetPosition2_PARM_2 + 1)
04D6 AC5A      1585            mov     r4,(_GetPosition2_PARM_2 + 2)
04D8 8A82      1586            mov     dpl,r2
04DA 8B83      1587            mov     dph,r3
04DC 8CF0      1588            mov     b,r4
04DE 120000    1589            lcall   __gptrget
04E1 F9        1590            mov     r1,a
04E2 A3        1591            inc     dptr
04E3 120000    1592            lcall   __gptrget
04E6 FD        1593            mov     r5,a
04E7 A3        1594            inc     dptr
04E8 120000    1595            lcall   __gptrget
04EB FE        1596            mov     r6,a
04EC A3        1597            inc     dptr
04ED 120000    1598            lcall   __gptrget
04F0 FF        1599            mov     r7,a
04F1 C002      1600            push    ar2
04F3 C003      1601            push    ar3
04F5 C004      1602            push    ar4
04F7 7433      1603            mov     a,#0x33
04F9 C0E0      1604            push    acc
04FB C0E0      1605            push    acc
04FD 7413      1606            mov     a,#0x13
04FF C0E0      1607            push    acc
0501 7440      1608            mov     a,#0x40
0503 C0E0      1609            push    acc
0505 8982      1610            mov     dpl,r1
0507 8D83      1611            mov     dph,r5
0509 8EF0      1612            mov     b,r6
050B EF        1613            mov     a,r7
050C 120000    1614            lcall   ___fslt
050F AD82      1615            mov     r5,dpl
0511 E581      1616            mov     a,sp
0513 24FC      1617            add     a,#0xfc
0515 F581      1618            mov     sp,a
0517 D004      1619            pop     ar4
0519 D003      1620            pop     ar3
051B D002      1621            pop     ar2
051D ED        1622            mov     a,r5
051E 6000      1623            jz      L020002?
0520           1624   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:390: pos[0] = map2(vx, 0.0, mid_x, -50.0, 0);
0520 755800    1625            mov     _map2_PARM_2,#0x00
0523 755900    1626            mov     (_map2_PARM_2 + 1),#0x00
0526 755A00    1627            mov     (_map2_PARM_2 + 2),#0x00
0529 755B00    1628            mov     (_map2_PARM_2 + 3),#0x00
052C 751833    1629            mov     _map2_PARM_3,#0x33
052F 751933    1630            mov     (_map2_PARM_3 + 1),#0x33
0532 751A13    1631            mov     (_map2_PARM_3 + 2),#0x13
0535 751B40    1632            mov     (_map2_PARM_3 + 3),#0x40
0538 75D800    1633            mov     _map2_PARM_4,#0x00
053B 75D900    1634            mov     (_map2_PARM_4 + 1),#0x00
053E 75DA48    1635            mov     (_map2_PARM_4 + 2),#0x48
0541 75DBC2    1636            mov     (_map2_PARM_4 + 3),#0xC2
0544 759800    1637            mov     _map2_PARM_5,#0x00
0547 759900    1638            mov     (_map2_PARM_5 + 1),#0x00
054A 759A00    1639            mov     (_map2_PARM_5 + 2),#0x00
054D 759B00    1640            mov     (_map2_PARM_5 + 3),#0x00
0550 85F882    1641            mov     dpl,_GetPosition2_vx_1_122
0553 85F983    1642            mov     dph,(_GetPosition2_vx_1_122 + 1)
0556 85FAF0    1643            mov     b,(_GetPosition2_vx_1_122 + 2)
0559 E5FB      1644            mov     a,(_GetPosition2_vx_1_122 + 3)
055B C002      1645            push    ar2
055D C003      1646            push    ar3
055F C004      1647            push    ar4
0561 120000    1648            lcall   _map2
0564 AD82      1649            mov     r5,dpl
0566 AE83      1650            mov     r6,dph
0568 AFF0      1651            mov     r7,b
056A F8        1652            mov     r0,a
056B D004      1653            pop     ar4
056D D003      1654            pop     ar3
056F D002      1655            pop     ar2
0571 8A82      1656            mov     dpl,r2
0573 8B83      1657            mov     dph,r3
0575 8CF0      1658            mov     b,r4
0577 ED        1659            mov     a,r5
0578 120000    1660            lcall   __gptrput
057B A3        1661            inc     dptr
057C EE        1662            mov     a,r6
057D 120000    1663            lcall   __gptrput
0580 A3        1664            inc     dptr
0581 EF        1665            mov     a,r7
0582 120000    1666            lcall   __gptrput
0585 A3        1667            inc     dptr
0586 E8        1668            mov     a,r0
0587 120000    1669            lcall   __gptrput
058A 8000      1670            sjmp    L020003?
058C           1671   L020002?:
058C           1672   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:395: pos[0] = map2(vx, mid_x, 3.3, 0.0, 50.0);
058C 755833    1673            mov     _map2_PARM_2,#0x33
058F 755933    1674            mov     (_map2_PARM_2 + 1),#0x33
0592 755A13    1675            mov     (_map2_PARM_2 + 2),#0x13
0595 755B40    1676            mov     (_map2_PARM_2 + 3),#0x40
0598 751833    1677            mov     _map2_PARM_3,#0x33
059B 751933    1678            mov     (_map2_PARM_3 + 1),#0x33
059E 751A53    1679            mov     (_map2_PARM_3 + 2),#0x53
05A1 751B40    1680            mov     (_map2_PARM_3 + 3),#0x40
05A4 75D800    1681            mov     _map2_PARM_4,#0x00
05A7 75D900    1682            mov     (_map2_PARM_4 + 1),#0x00
05AA 75DA00    1683            mov     (_map2_PARM_4 + 2),#0x00
05AD 75DB00    1684            mov     (_map2_PARM_4 + 3),#0x00
05B0 759800    1685            mov     _map2_PARM_5,#0x00
05B3 759900    1686            mov     (_map2_PARM_5 + 1),#0x00
05B6 759A48    1687            mov     (_map2_PARM_5 + 2),#0x48
05B9 759B42    1688            mov     (_map2_PARM_5 + 3),#0x42
05BC 85F882    1689            mov     dpl,_GetPosition2_vx_1_122
05BF 85F983    1690            mov     dph,(_GetPosition2_vx_1_122 + 1)
05C2 85FAF0    1691            mov     b,(_GetPosition2_vx_1_122 + 2)
05C5 E5FB      1692            mov     a,(_GetPosition2_vx_1_122 + 3)
05C7 C002      1693            push    ar2
05C9 C003      1694            push    ar3
05CB C004      1695            push    ar4
05CD 120000    1696            lcall   _map2
05D0 AD82      1697            mov     r5,dpl
05D2 AE83      1698            mov     r6,dph
05D4 AFF0      1699            mov     r7,b
05D6 F8        1700            mov     r0,a
05D7 D004      1701            pop     ar4
05D9 D003      1702            pop     ar3
05DB D002      1703            pop     ar2
05DD 8A82      1704            mov     dpl,r2
05DF 8B83      1705            mov     dph,r3
05E1 8CF0      1706            mov     b,r4
05E3 ED        1707            mov     a,r5
05E4 120000    1708            lcall   __gptrput
05E7 A3        1709            inc     dptr
05E8 EE        1710            mov     a,r6
05E9 120000    1711            lcall   __gptrput
05EC A3        1712            inc     dptr
05ED EF        1713            mov     a,r7
05EE 120000    1714            lcall   __gptrput
05F1 A3        1715            inc     dptr
05F2 E8        1716            mov     a,r0
05F3 120000    1717            lcall   __gptrput
05F6           1718   L020003?:
05F6           1719   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:399: if (pos[1] < mid_y) {
05F6 7404      1720            mov     a,#0x04
05F8 2A        1721            add     a,r2
05F9 FA        1722            mov     r2,a
05FA E4        1723            clr     a
05FB 3B        1724            addc    a,r3
05FC FB        1725            mov     r3,a
05FD 8A82      1726            mov     dpl,r2
05FF 8B83      1727            mov     dph,r3
0601 8CF0      1728            mov     b,r4
0603 120000    1729            lcall   __gptrget
0606 FD        1730            mov     r5,a
0607 A3        1731            inc     dptr
0608 120000    1732            lcall   __gptrget
060B FE        1733            mov     r6,a
060C A3        1734            inc     dptr
060D 120000    1735            lcall   __gptrget
0610 FF        1736            mov     r7,a
0611 A3        1737            inc     dptr
0612 120000    1738            lcall   __gptrget
0615 F8        1739            mov     r0,a
0616 C002      1740            push    ar2
0618 C003      1741            push    ar3
061A C004      1742            push    ar4
061C 7466      1743            mov     a,#0x66
061E C0E0      1744            push    acc
0620 C0E0      1745            push    acc
0622 7416      1746            mov     a,#0x16
0624 C0E0      1747            push    acc
0626 7440      1748            mov     a,#0x40
0628 C0E0      1749            push    acc
062A 8D82      1750            mov     dpl,r5
062C 8E83      1751            mov     dph,r6
062E 8FF0      1752            mov     b,r7
0630 E8        1753            mov     a,r0
0631 120000    1754            lcall   ___fslt
0634 AD82      1755            mov     r5,dpl
0636 E581      1756            mov     a,sp
0638 24FC      1757            add     a,#0xfc
063A F581      1758            mov     sp,a
063C D004      1759            pop     ar4
063E D003      1760            pop     ar3
0640 D002      1761            pop     ar2
0642 ED        1762            mov     a,r5
0643 6000      1763            jz      L020005?
0645           1764   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:400: pos[1] = map2(vy, 0.0, mid_y, -50.0, 0.0);
0645 755800    1765            mov     _map2_PARM_2,#0x00
0648 755900    1766            mov     (_map2_PARM_2 + 1),#0x00
064B 755A00    1767            mov     (_map2_PARM_2 + 2),#0x00
064E 755B00    1768            mov     (_map2_PARM_2 + 3),#0x00
0651 751866    1769            mov     _map2_PARM_3,#0x66
0654 751966    1770            mov     (_map2_PARM_3 + 1),#0x66
0657 751A16    1771            mov     (_map2_PARM_3 + 2),#0x16
065A 751B40    1772            mov     (_map2_PARM_3 + 3),#0x40
065D 75D800    1773            mov     _map2_PARM_4,#0x00
0660 75D900    1774            mov     (_map2_PARM_4 + 1),#0x00
0663 75DA48    1775            mov     (_map2_PARM_4 + 2),#0x48
0666 75DBC2    1776            mov     (_map2_PARM_4 + 3),#0xC2
0669 759800    1777            mov     _map2_PARM_5,#0x00
066C 759900    1778            mov     (_map2_PARM_5 + 1),#0x00
066F 759A00    1779            mov     (_map2_PARM_5 + 2),#0x00
0672 759B00    1780            mov     (_map2_PARM_5 + 3),#0x00
0675 854882    1781            mov     dpl,_GetPosition2_vy_1_122
0678 854983    1782            mov     dph,(_GetPosition2_vy_1_122 + 1)
067B 854AF0    1783            mov     b,(_GetPosition2_vy_1_122 + 2)
067E E54B      1784            mov     a,(_GetPosition2_vy_1_122 + 3)
0680 C002      1785            push    ar2
0682 C003      1786            push    ar3
0684 C004      1787            push    ar4
0686 120000    1788            lcall   _map2
0689 AD82      1789            mov     r5,dpl
068B AE83      1790            mov     r6,dph
068D AFF0      1791            mov     r7,b
068F F8        1792            mov     r0,a
0690 D004      1793            pop     ar4
0692 D003      1794            pop     ar3
0694 D002      1795            pop     ar2
0696 8A82      1796            mov     dpl,r2
0698 8B83      1797            mov     dph,r3
069A 8CF0      1798            mov     b,r4
069C ED        1799            mov     a,r5
069D 120000    1800            lcall   __gptrput
06A0 A3        1801            inc     dptr
06A1 EE        1802            mov     a,r6
06A2 120000    1803            lcall   __gptrput
06A5 A3        1804            inc     dptr
06A6 EF        1805            mov     a,r7
06A7 120000    1806            lcall   __gptrput
06AA A3        1807            inc     dptr
06AB E8        1808            mov     a,r0
06AC 020000    1809            ljmp    __gptrput
06AF           1810   L020005?:
06AF           1811   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:404: pos[1] = map2(vy, mid_y, 3.3, 0.0, 50.0);
06AF 755866    1812            mov     _map2_PARM_2,#0x66
06B2 755966    1813            mov     (_map2_PARM_2 + 1),#0x66
06B5 755A16    1814            mov     (_map2_PARM_2 + 2),#0x16
06B8 755B40    1815            mov     (_map2_PARM_2 + 3),#0x40
06BB 751833    1816            mov     _map2_PARM_3,#0x33
06BE 751933    1817            mov     (_map2_PARM_3 + 1),#0x33
06C1 751A53    1818            mov     (_map2_PARM_3 + 2),#0x53
06C4 751B40    1819            mov     (_map2_PARM_3 + 3),#0x40
06C7 75D800    1820            mov     _map2_PARM_4,#0x00
06CA 75D900    1821            mov     (_map2_PARM_4 + 1),#0x00
06CD 75DA00    1822            mov     (_map2_PARM_4 + 2),#0x00
06D0 75DB00    1823            mov     (_map2_PARM_4 + 3),#0x00
06D3 759800    1824            mov     _map2_PARM_5,#0x00
06D6 759900    1825            mov     (_map2_PARM_5 + 1),#0x00
06D9 759A48    1826            mov     (_map2_PARM_5 + 2),#0x48
06DC 759B42    1827            mov     (_map2_PARM_5 + 3),#0x42
06DF 854882    1828            mov     dpl,_GetPosition2_vy_1_122
06E2 854983    1829            mov     dph,(_GetPosition2_vy_1_122 + 1)
06E5 854AF0    1830            mov     b,(_GetPosition2_vy_1_122 + 2)
06E8 E54B      1831            mov     a,(_GetPosition2_vy_1_122 + 3)
06EA C002      1832            push    ar2
06EC C003      1833            push    ar3
06EE C004      1834            push    ar4
06F0 120000    1835            lcall   _map2
06F3 AD82      1836            mov     r5,dpl
06F5 AE83      1837            mov     r6,dph
06F7 AFF0      1838            mov     r7,b
06F9 F8        1839            mov     r0,a
06FA D004      1840            pop     ar4
06FC D003      1841            pop     ar3
06FE D002      1842            pop     ar2
0700 8A82      1843            mov     dpl,r2
0702 8B83      1844            mov     dph,r3
0704 8CF0      1845            mov     b,r4
0706 ED        1846            mov     a,r5
0707 120000    1847            lcall   __gptrput
070A A3        1848            inc     dptr
070B EE        1849            mov     a,r6
070C 120000    1850            lcall   __gptrput
070F A3        1851            inc     dptr
0710 EF        1852            mov     a,r7
0711 120000    1853            lcall   __gptrput
0714 A3        1854            inc     dptr
0715 E8        1855            mov     a,r0
0716 020000    1856            ljmp    __gptrput
0719           1857   ;------------------------------------------------------------
0719           1858   ;Allocation info for local variables in function 'UART1_Init'
0719           1859   ;------------------------------------------------------------
0719           1860   ;baudrate                  Allocated to registers r2 r3 r4 r5 
0719           1861   ;------------------------------------------------------------
0719           1862   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:409: void UART1_Init (unsigned long baudrate)
0719           1863   ;        -----------------------------------------
0719           1864   ;         function UART1_Init
0719           1865   ;        -----------------------------------------
0719           1866   _UART1_Init:
0719 AA82      1867            mov     r2,dpl
071B AB83      1868            mov     r3,dph
071D ACF0      1869            mov     r4,b
071F FD        1870            mov     r5,a
0720           1871   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:411: SFRPAGE = 0x20;
0720 75A720    1872            mov     _SFRPAGE,#0x20
0723           1873   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:412: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
0723 75930C    1874            mov     _SMOD1,#0x0C
0726           1875   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:413: SCON1 = 0x10;
0726 75C810    1876            mov     _SCON1,#0x10
0729           1877   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:414: SBCON1 =0x00;   // disable baud rate generator
0729 759400    1878            mov     _SBCON1,#0x00
072C           1879   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:415: SBRL1 = 0x10000L-((SYSCLK/baudrate)/(12L*2L));
072C 8A00      1880            mov     __divulong_PARM_2,r2
072E 8B01      1881            mov     (__divulong_PARM_2 + 1),r3
0730 8C02      1882            mov     (__divulong_PARM_2 + 2),r4
0732 8D03      1883            mov     (__divulong_PARM_2 + 3),r5
0734 90A200    1884            mov     dptr,#0xA200
0737 75F04A    1885            mov     b,#0x4A
073A 7404      1886            mov     a,#0x04
073C 120000    1887            lcall   __divulong
073F AA82      1888            mov     r2,dpl
0741 AB83      1889            mov     r3,dph
0743 ACF0      1890            mov     r4,b
0745 FD        1891            mov     r5,a
0746 750018    1892            mov     __divulong_PARM_2,#0x18
0749 E4        1893            clr     a
074A F501      1894            mov     (__divulong_PARM_2 + 1),a
074C F502      1895            mov     (__divulong_PARM_2 + 2),a
074E F503      1896            mov     (__divulong_PARM_2 + 3),a
0750 8A82      1897            mov     dpl,r2
0752 8B83      1898            mov     dph,r3
0754 8CF0      1899            mov     b,r4
0756 ED        1900            mov     a,r5
0757 120000    1901            lcall   __divulong
075A AA82      1902            mov     r2,dpl
075C AB83      1903            mov     r3,dph
075E ACF0      1904            mov     r4,b
0760 FD        1905            mov     r5,a
0761 E4        1906            clr     a
0762 C3        1907            clr     c
0763 9A        1908            subb    a,r2
0764 FA        1909            mov     r2,a
0765 E4        1910            clr     a
0766 9B        1911            subb    a,r3
0767 FB        1912            mov     r3,a
0768 7401      1913            mov     a,#0x01
076A 9C        1914            subb    a,r4
076B E4        1915            clr     a
076C 9D        1916            subb    a,r5
076D 8A95      1917            mov     _SBRL1,r2
076F 8B96      1918            mov     (_SBRL1 >> 8),r3
0771           1919   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:416: TI1 = 1; // indicate ready for TX
0771 D2C9      1920            setb    _TI1
0773           1921   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:417: SBCON1 |= 0x40;   // enable baud rate generator
0773 439440    1922            orl     _SBCON1,#0x40
0776           1923   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:418: SFRPAGE = 0x00;
0776 75A700    1924            mov     _SFRPAGE,#0x00
0779 22        1925            ret
077A           1926   ;------------------------------------------------------------
077A           1927   ;Allocation info for local variables in function 'putchar1'
077A           1928   ;------------------------------------------------------------
077A           1929   ;c                         Allocated to registers r2 
077A           1930   ;------------------------------------------------------------
077A           1931   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:421: void putchar1 (char c) 
077A           1932   ;        -----------------------------------------
077A           1933   ;         function putchar1
077A           1934   ;        -----------------------------------------
077A           1935   _putchar1:
077A AA82      1936            mov     r2,dpl
077C           1937   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:423: SFRPAGE = 0x20;
077C 75A720    1938            mov     _SFRPAGE,#0x20
077F           1939   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:424: while (!TI1);
077F           1940   L022001?:
077F           1941   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:425: TI1=0;
077F 10C938    1942            jbc     _TI1,L022008?
0782 8000      1943            sjmp    L022001?
0784           1944   L022008?:
0784           1945   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:426: SBUF1 = c;
0784 8A92      1946            mov     _SBUF1,r2
0786           1947   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:427: SFRPAGE = 0x00;
0786 75A700    1948            mov     _SFRPAGE,#0x00
0789 22        1949            ret
078A           1950   ;------------------------------------------------------------
078A           1951   ;Allocation info for local variables in function 'sendstr1'
078A           1952   ;------------------------------------------------------------
078A           1953   ;s                         Allocated to registers r2 r3 r4 
078A           1954   ;------------------------------------------------------------
078A           1955   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:430: void sendstr1 (char * s)
078A           1956   ;        -----------------------------------------
078A           1957   ;         function sendstr1
078A           1958   ;        -----------------------------------------
078A           1959   _sendstr1:
078A AA82      1960            mov     r2,dpl
078C AB83      1961            mov     r3,dph
078E ACF0      1962            mov     r4,b
0790           1963   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:432: while(*s)
0790           1964   L023001?:
0790 8A82      1965            mov     dpl,r2
0792 8B83      1966            mov     dph,r3
0794 8CF0      1967            mov     b,r4
0796 120000    1968            lcall   __gptrget
0799 FD        1969            mov     r5,a
079A 6000      1970            jz      L023004?
079C           1971   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:434: putchar1(*s);
079C 8D82      1972            mov     dpl,r5
079E C002      1973            push    ar2
07A0 C003      1974            push    ar3
07A2 C004      1975            push    ar4
07A4 120000    1976            lcall   _putchar1
07A7 D004      1977            pop     ar4
07A9 D003      1978            pop     ar3
07AB D002      1979            pop     ar2
07AD           1980   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:435: s++;        
07AD 0A        1981            inc     r2
07AE BA0078    1982            cjne    r2,#0x00,L023001?
07B1 0B        1983            inc     r3
07B2 8000      1984            sjmp    L023001?
07B4           1985   L023004?:
07B4 22        1986            ret
07B5           1987   ;------------------------------------------------------------
07B5           1988   ;Allocation info for local variables in function 'getchar1'
07B5           1989   ;------------------------------------------------------------
07B5           1990   ;c                         Allocated to registers 
07B5           1991   ;------------------------------------------------------------
07B5           1992   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:439: char getchar1 (void)
07B5           1993   ;        -----------------------------------------
07B5           1994   ;         function getchar1
07B5           1995   ;        -----------------------------------------
07B5           1996   _getchar1:
07B5           1997   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:442: SFRPAGE = 0x20;
07B5 75A720    1998            mov     _SFRPAGE,#0x20
07B8           1999   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:443: while (!RI1);
07B8           2000   L024001?:
07B8           2001   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:444: RI1=0;
07B8 10C838    2002            jbc     _RI1,L024008?
07BB 8000      2003            sjmp    L024001?
07BD           2004   L024008?:
07BD           2005   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:446: SCON1&=0b_0011_1111;
07BD 53C83F    2006            anl     _SCON1,#0x3F
07C0           2007   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:447: c = SBUF1;
07C0 859282    2008            mov     dpl,_SBUF1
07C3           2009   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:448: SFRPAGE = 0x00;
07C3 75A700    2010            mov     _SFRPAGE,#0x00
07C6           2011   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:449: return (c);
07C6 22        2012            ret
07C7           2013   ;------------------------------------------------------------
07C7           2014   ;Allocation info for local variables in function 'getchar1_with_timeout'
07C7           2015   ;------------------------------------------------------------
07C7           2016   ;c                         Allocated to registers 
07C7           2017   ;timeout                   Allocated to registers r2 r3 
07C7           2018   ;------------------------------------------------------------
07C7           2019   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:452: char getchar1_with_timeout (void)
07C7           2020   ;        -----------------------------------------
07C7           2021   ;         function getchar1_with_timeout
07C7           2022   ;        -----------------------------------------
07C7           2023   _getchar1_with_timeout:
07C7           2024   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:456: SFRPAGE = 0x20;
07C7 75A720    2025            mov     _SFRPAGE,#0x20
07CA           2026   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:458: while (!RI1)
07CA 7A00      2027            mov     r2,#0x00
07CC 7B00      2028            mov     r3,#0x00
07CE           2029   L025003?:
07CE 20C8B8    2030            jb      _RI1,L025005?
07D1           2031   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:460: SFRPAGE = 0x00;
07D1 75A700    2032            mov     _SFRPAGE,#0x00
07D4           2033   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:461: Timer3us(20);
07D4 758214    2034            mov     dpl,#0x14
07D7 C002      2035            push    ar2
07D9 C003      2036            push    ar3
07DB 120000    2037            lcall   _Timer3us
07DE D003      2038            pop     ar3
07E0 D002      2039            pop     ar2
07E2           2040   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:462: SFRPAGE = 0x20;
07E2 75A720    2041            mov     _SFRPAGE,#0x20
07E5           2042   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:463: timeout++;
07E5 0A        2043            inc     r2
07E6 BA00F8    2044            cjne    r2,#0x00,L025012?
07E9 0B        2045            inc     r3
07EA           2046   L025012?:
07EA           2047   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:464: if(timeout==25000)
07EA BAA878    2048            cjne    r2,#0xA8,L025003?
07ED BB6178    2049            cjne    r3,#0x61,L025003?
07F0           2050   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:466: SFRPAGE = 0x00;
07F0 75A700    2051            mov     _SFRPAGE,#0x00
07F3           2052   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:467: return ('\n'); // Timeout after half second
07F3 75820A    2053            mov     dpl,#0x0A
07F6 22        2054            ret
07F7           2055   L025005?:
07F7           2056   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:470: RI1=0;
07F7 C2C8      2057            clr     _RI1
07F9           2058   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:472: SCON1&=0b_0011_1111;
07F9 53C83F    2059            anl     _SCON1,#0x3F
07FC           2060   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:473: c = SBUF1;
07FC 859282    2061            mov     dpl,_SBUF1
07FF           2062   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:474: SFRPAGE = 0x00;
07FF 75A700    2063            mov     _SFRPAGE,#0x00
0802           2064   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:475: return (c);
0802 22        2065            ret
0803           2066   ;------------------------------------------------------------
0803           2067   ;Allocation info for local variables in function 'getstr1'
0803           2068   ;------------------------------------------------------------
0803           2069   ;s                         Allocated to registers r2 r3 r4 
0803           2070   ;c                         Allocated to registers r5 
0803           2071   ;------------------------------------------------------------
0803           2072   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:479: void getstr1 (char * s)
0803           2073   ;        -----------------------------------------
0803           2074   ;         function getstr1
0803           2075   ;        -----------------------------------------
0803           2076   _getstr1:
0803 AA82      2077            mov     r2,dpl
0805 AB83      2078            mov     r3,dph
0807 ACF0      2079            mov     r4,b
0809           2080   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:483: while(1)
0809           2081   L026004?:
0809           2082   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:485: c=getchar1_with_timeout();
0809 C002      2083            push    ar2
080B C003      2084            push    ar3
080D C004      2085            push    ar4
080F 120000    2086            lcall   _getchar1_with_timeout
0812 AD82      2087            mov     r5,dpl
0814 D004      2088            pop     ar4
0816 D003      2089            pop     ar3
0818 D002      2090            pop     ar2
081A           2091   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:486: if(c=='\n')
081A BD0A78    2092            cjne    r5,#0x0A,L026002?
081D           2093   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:488: *s=0;
081D 8A82      2094            mov     dpl,r2
081F 8B83      2095            mov     dph,r3
0821 8CF0      2096            mov     b,r4
0823 E4        2097            clr     a
0824           2098   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:489: return;
0824 020000    2099            ljmp    __gptrput
0827           2100   L026002?:
0827           2101   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:491: *s=c;
0827 8A82      2102            mov     dpl,r2
0829 8B83      2103            mov     dph,r3
082B 8CF0      2104            mov     b,r4
082D ED        2105            mov     a,r5
082E 120000    2106            lcall   __gptrput
0831 A3        2107            inc     dptr
0832 AA82      2108            mov     r2,dpl
0834 AB83      2109            mov     r3,dph
0836           2110   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:492: s++;
0836 8000      2111            sjmp    L026004?
0838           2112   ;------------------------------------------------------------
0838           2113   ;Allocation info for local variables in function 'RXU1'
0838           2114   ;------------------------------------------------------------
0838           2115   ;------------------------------------------------------------
0838           2116   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:497: bit RXU1 (void)
0838           2117   ;        -----------------------------------------
0838           2118   ;         function RXU1
0838           2119   ;        -----------------------------------------
0838           2120   _RXU1:
0838           2121   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:500: SFRPAGE = 0x20;
0838 75A720    2122            mov     _SFRPAGE,#0x20
083B           2123   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:501: mybit=RI1;
083B A2C8      2124            mov     c,_RI1
083D           2125   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:502: SFRPAGE = 0x00;
083D 75A700    2126            mov     _SFRPAGE,#0x00
0840           2127   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:503: return mybit;
0840 22        2128            ret
0841           2129   ;------------------------------------------------------------
0841           2130   ;Allocation info for local variables in function 'waitms_or_RI1'
0841           2131   ;------------------------------------------------------------
0841           2132   ;ms                        Allocated to registers r2 r3 
0841           2133   ;j                         Allocated to registers r4 r5 
0841           2134   ;k                         Allocated to registers r6 
0841           2135   ;------------------------------------------------------------
0841           2136   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:506: void waitms_or_RI1 (unsigned int ms)
0841           2137   ;        -----------------------------------------
0841           2138   ;         function waitms_or_RI1
0841           2139   ;        -----------------------------------------
0841           2140   _waitms_or_RI1:
0841 AA82      2141            mov     r2,dpl
0843 AB83      2142            mov     r3,dph
0845           2143   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:510: for(j=0; j<ms; j++)
0845 7C00      2144            mov     r4,#0x00
0847 7D00      2145            mov     r5,#0x00
0849           2146   L028007?:
0849 C3        2147            clr     c
084A EC        2148            mov     a,r4
084B 9A        2149            subb    a,r2
084C ED        2150            mov     a,r5
084D 9B        2151            subb    a,r3
084E 5000      2152            jnc     L028011?
0850           2153   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:512: for (k=0; k<4; k++)
0850 7E00      2154            mov     r6,#0x00
0852           2155   L028003?:
0852 BE0478    2156            cjne    r6,#0x04,L028019?
0855           2157   L028019?:
0855 5000      2158            jnc     L028009?
0857           2159   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:514: if(RXU1()) return;
0857 C002      2160            push    ar2
0859 C003      2161            push    ar3
085B C004      2162            push    ar4
085D C005      2163            push    ar5
085F C006      2164            push    ar6
0861 120000    2165            lcall   _RXU1
0864 E4        2166            clr     a
0865 33        2167            rlc     a
0866 D006      2168            pop     ar6
0868 D005      2169            pop     ar5
086A D004      2170            pop     ar4
086C D003      2171            pop     ar3
086E D002      2172            pop     ar2
0870 6000      2173            jz      L028002?
0872 22        2174            ret
0873           2175   L028002?:
0873           2176   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:515: Timer3us(250);
0873 7582FA    2177            mov     dpl,#0xFA
0876 C002      2178            push    ar2
0878 C003      2179            push    ar3
087A C004      2180            push    ar4
087C C005      2181            push    ar5
087E C006      2182            push    ar6
0880 120000    2183            lcall   _Timer3us
0883 D006      2184            pop     ar6
0885 D005      2185            pop     ar5
0887 D004      2186            pop     ar4
0889 D003      2187            pop     ar3
088B D002      2188            pop     ar2
088D           2189   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:512: for (k=0; k<4; k++)
088D 0E        2190            inc     r6
088E 8000      2191            sjmp    L028003?
0890           2192   L028009?:
0890           2193   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:510: for(j=0; j<ms; j++)
0890 0C        2194            inc     r4
0891 BC00B8    2195            cjne    r4,#0x00,L028007?
0894 0D        2196            inc     r5
0895 8000      2197            sjmp    L028007?
0897           2198   L028011?:
0897 22        2199            ret
0898           2200   ;------------------------------------------------------------
0898           2201   ;Allocation info for local variables in function 'SendATCommand'
0898           2202   ;------------------------------------------------------------
0898           2203   ;s                         Allocated to registers r2 r3 r4 
0898           2204   ;------------------------------------------------------------
0898           2205   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:520: void SendATCommand (char * s)
0898           2206   ;        -----------------------------------------
0898           2207   ;         function SendATCommand
0898           2208   ;        -----------------------------------------
0898           2209   _SendATCommand:
0898 AA82      2210            mov     r2,dpl
089A AB83      2211            mov     r3,dph
089C ACF0      2212            mov     r4,b
089E           2213   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:522: printf("Command: %s", s);
089E C002      2214            push    ar2
08A0 C003      2215            push    ar3
08A2 C004      2216            push    ar4
08A4 C002      2217            push    ar2
08A6 C003      2218            push    ar3
08A8 C004      2219            push    ar4
08AA 7438      2220            mov     a,#__str_0
08AC C0E0      2221            push    acc
08AE 74CC      2222            mov     a,#(__str_0 >> 8)
08B0 C0E0      2223            push    acc
08B2 7480      2224            mov     a,#0x80
08B4 C0E0      2225            push    acc
08B6 120000    2226            lcall   _printf
08B9 E581      2227            mov     a,sp
08BB 24FA      2228            add     a,#0xfa
08BD F581      2229            mov     sp,a
08BF           2230   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:523: P2_0=0; // 'set' pin to 0 is 'AT' mode.
08BF C2A0      2231            clr     _P2_0
08C1           2232   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:524: waitms(5);
08C1 900005    2233            mov     dptr,#0x0005
08C4 120000    2234            lcall   _waitms
08C7 D004      2235            pop     ar4
08C9 D003      2236            pop     ar3
08CB D002      2237            pop     ar2
08CD           2238   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:525: sendstr1(s);
08CD 8A82      2239            mov     dpl,r2
08CF 8B83      2240            mov     dph,r3
08D1 8CF0      2241            mov     b,r4
08D3 120000    2242            lcall   _sendstr1
08D6           2243   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:526: getstr1(buff);
08D6 904B68    2244            mov     dptr,#_buff
08D9 75F040    2245            mov     b,#0x40
08DC 120000    2246            lcall   _getstr1
08DF           2247   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:527: waitms(10);
08DF 90000A    2248            mov     dptr,#0x000A
08E2 120000    2249            lcall   _waitms
08E5           2250   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:528: P2_0=1; // 'set' pin to 1 is normal operation mode.
08E5 D2A0      2251            setb    _P2_0
08E7           2252   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:529: printf("Response: %s\r\n", buff);
08E7 7468      2253            mov     a,#_buff
08E9 C0E0      2254            push    acc
08EB 744B      2255            mov     a,#(_buff >> 8)
08ED C0E0      2256            push    acc
08EF 7440      2257            mov     a,#0x40
08F1 C0E0      2258            push    acc
08F3 74B8      2259            mov     a,#__str_1
08F5 C0E0      2260            push    acc
08F7 74CC      2261            mov     a,#(__str_1 >> 8)
08F9 C0E0      2262            push    acc
08FB 7480      2263            mov     a,#0x80
08FD C0E0      2264            push    acc
08FF 120000    2265            lcall   _printf
0902 E581      2266            mov     a,sp
0904 24FA      2267            add     a,#0xfa
0906 F581      2268            mov     sp,a
0908 22        2269            ret
0909           2270   ;------------------------------------------------------------
0909           2271   ;Allocation info for local variables in function 'loadTimer2'
0909           2272   ;------------------------------------------------------------
0909           2273   ;freq                      Allocated to registers r2 r3 r4 r5 
0909           2274   ;x                         Allocated to registers r2 r3 r4 r5 
0909           2275   ;------------------------------------------------------------
0909           2276   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:534: void loadTimer2(unsigned long int freq) {
0909           2277   ;        -----------------------------------------
0909           2278   ;         function loadTimer2
0909           2279   ;        -----------------------------------------
0909           2280   _loadTimer2:
0909 AA82      2281            mov     r2,dpl
090B AB83      2282            mov     r3,dph
090D ACF0      2283            mov     r4,b
090F FD        2284            mov     r5,a
0910           2285   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:535: unsigned long int x=(SYSCLK/(2L*freq));
0910 EA        2286            mov     a,r2
0911 2A        2287            add     a,r2
0912 F500      2288            mov     __divulong_PARM_2,a
0914 EB        2289            mov     a,r3
0915 33        2290            rlc     a
0916 F501      2291            mov     (__divulong_PARM_2 + 1),a
0918 EC        2292            mov     a,r4
0919 33        2293            rlc     a
091A F502      2294            mov     (__divulong_PARM_2 + 2),a
091C ED        2295            mov     a,r5
091D 33        2296            rlc     a
091E F503      2297            mov     (__divulong_PARM_2 + 3),a
0920 90A200    2298            mov     dptr,#0xA200
0923 75F04A    2299            mov     b,#0x4A
0926 7404      2300            mov     a,#0x04
0928 120000    2301            lcall   __divulong
092B AA82      2302            mov     r2,dpl
092D AB83      2303            mov     r3,dph
092F ACF0      2304            mov     r4,b
0931 FD        2305            mov     r5,a
0932           2306   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:537: TR2=0; // Stop timer 2
0932 C2CA      2307            clr     _TR2
0934           2308   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:538: TMR2RL=0x10000L-x; // Change reload value for new frequency
0934 E4        2309            clr     a
0935 C3        2310            clr     c
0936 9A        2311            subb    a,r2
0937 FA        2312            mov     r2,a
0938 E4        2313            clr     a
0939 9B        2314            subb    a,r3
093A FB        2315            mov     r3,a
093B 7401      2316            mov     a,#0x01
093D 9C        2317            subb    a,r4
093E E4        2318            clr     a
093F 9D        2319            subb    a,r5
0940 8ACA      2320            mov     _TMR2RL,r2
0942 8BCB      2321            mov     (_TMR2RL >> 8),r3
0944           2322   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:539: TR2=1; // Start timer 2
0944 D2CA      2323            setb    _TR2
0946 22        2324            ret
0947           2325   ;------------------------------------------------------------
0947           2326   ;Allocation info for local variables in function 'playBuzzerSound'
0947           2327   ;------------------------------------------------------------
0947           2328   ;min_metal_detect          Allocated with name '_playBuzzerSound_PARM_2'
0947           2329   ;baseline_freq             Allocated with name '_playBuzzerSound_PARM_3'
0947           2330   ;extract_num               Allocated to registers r2 r3 r4 r5 
0947           2331   ;------------------------------------------------------------
0947           2332   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:556: void playBuzzerSound (float extract_num, float min_metal_detect, float baseline_freq) {
0947           2333   ;        -----------------------------------------
0947           2334   ;         function playBuzzerSound
0947           2335   ;        -----------------------------------------
0947           2336   _playBuzzerSound:
0947 AA82      2337            mov     r2,dpl
0949 AB83      2338            mov     r3,dph
094B ACF0      2339            mov     r4,b
094D FD        2340            mov     r5,a
094E           2341   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:559: if (extract_num > min_metal_detect + baseline_freq){
094E C002      2342            push    ar2
0950 C003      2343            push    ar3
0952 C004      2344            push    ar4
0954 C005      2345            push    ar5
0956 C0B8      2346            push    _playBuzzerSound_PARM_3
0958 C0B9      2347            push    (_playBuzzerSound_PARM_3 + 1)
095A C0BA      2348            push    (_playBuzzerSound_PARM_3 + 2)
095C C0BB      2349            push    (_playBuzzerSound_PARM_3 + 3)
095E 850882    2350            mov     dpl,_playBuzzerSound_PARM_2
0961 850983    2351            mov     dph,(_playBuzzerSound_PARM_2 + 1)
0964 850AF0    2352            mov     b,(_playBuzzerSound_PARM_2 + 2)
0967 E50B      2353            mov     a,(_playBuzzerSound_PARM_2 + 3)
0969 120000    2354            lcall   ___fsadd
096C AE82      2355            mov     r6,dpl
096E AF83      2356            mov     r7,dph
0970 A8F0      2357            mov     r0,b
0972 F9        2358            mov     r1,a
0973 E581      2359            mov     a,sp
0975 24FC      2360            add     a,#0xfc
0977 F581      2361            mov     sp,a
0979 D005      2362            pop     ar5
097B D004      2363            pop     ar4
097D D003      2364            pop     ar3
097F D002      2365            pop     ar2
0981 C002      2366            push    ar2
0983 C003      2367            push    ar3
0985 C004      2368            push    ar4
0987 C005      2369            push    ar5
0989 C006      2370            push    ar6
098B C007      2371            push    ar7
098D C000      2372            push    ar0
098F C001      2373            push    ar1
0991 8A82      2374            mov     dpl,r2
0993 8B83      2375            mov     dph,r3
0995 8CF0      2376            mov     b,r4
0997 ED        2377            mov     a,r5
0998 120000    2378            lcall   ___fsgt
099B AE82      2379            mov     r6,dpl
099D E581      2380            mov     a,sp
099F 24FC      2381            add     a,#0xfc
09A1 F581      2382            mov     sp,a
09A3 D005      2383            pop     ar5
09A5 D004      2384            pop     ar4
09A7 D003      2385            pop     ar3
09A9 D002      2386            pop     ar2
09AB EE        2387            mov     a,r6
09AC 7000      2388            jnz     L031007?
09AE 020000    2389            ljmp    L031002?
09B1           2390   L031007?:
09B1           2391   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:560: loadTimer2((extract_num - baseline_freq-min_metal_detect)*0.25+500);
09B1 C0B8      2392            push    _playBuzzerSound_PARM_3
09B3 C0B9      2393            push    (_playBuzzerSound_PARM_3 + 1)
09B5 C0BA      2394            push    (_playBuzzerSound_PARM_3 + 2)
09B7 C0BB      2395            push    (_playBuzzerSound_PARM_3 + 3)
09B9 8A82      2396            mov     dpl,r2
09BB 8B83      2397            mov     dph,r3
09BD 8CF0      2398            mov     b,r4
09BF ED        2399            mov     a,r5
09C0 120000    2400            lcall   ___fssub
09C3 AA82      2401            mov     r2,dpl
09C5 AB83      2402            mov     r3,dph
09C7 ACF0      2403            mov     r4,b
09C9 FD        2404            mov     r5,a
09CA E581      2405            mov     a,sp
09CC 24FC      2406            add     a,#0xfc
09CE F581      2407            mov     sp,a
09D0 C008      2408            push    _playBuzzerSound_PARM_2
09D2 C009      2409            push    (_playBuzzerSound_PARM_2 + 1)
09D4 C00A      2410            push    (_playBuzzerSound_PARM_2 + 2)
09D6 C00B      2411            push    (_playBuzzerSound_PARM_2 + 3)
09D8 8A82      2412            mov     dpl,r2
09DA 8B83      2413            mov     dph,r3
09DC 8CF0      2414            mov     b,r4
09DE ED        2415            mov     a,r5
09DF 120000    2416            lcall   ___fssub
09E2 AA82      2417            mov     r2,dpl
09E4 AB83      2418            mov     r3,dph
09E6 ACF0      2419            mov     r4,b
09E8 FD        2420            mov     r5,a
09E9 E581      2421            mov     a,sp
09EB 24FC      2422            add     a,#0xfc
09ED F581      2423            mov     sp,a
09EF C002      2424            push    ar2
09F1 C003      2425            push    ar3
09F3 C004      2426            push    ar4
09F5 C005      2427            push    ar5
09F7 900000    2428            mov     dptr,#0x0000
09FA 75F080    2429            mov     b,#0x80
09FD 743E      2430            mov     a,#0x3E
09FF 120000    2431            lcall   ___fsmul
0A02 AA82      2432            mov     r2,dpl
0A04 AB83      2433            mov     r3,dph
0A06 ACF0      2434            mov     r4,b
0A08 FD        2435            mov     r5,a
0A09 E581      2436            mov     a,sp
0A0B 24FC      2437            add     a,#0xfc
0A0D F581      2438            mov     sp,a
0A0F E4        2439            clr     a
0A10 C0E0      2440            push    acc
0A12 C0E0      2441            push    acc
0A14 74FA      2442            mov     a,#0xFA
0A16 C0E0      2443            push    acc
0A18 7443      2444            mov     a,#0x43
0A1A C0E0      2445            push    acc
0A1C 8A82      2446            mov     dpl,r2
0A1E 8B83      2447            mov     dph,r3
0A20 8CF0      2448            mov     b,r4
0A22 ED        2449            mov     a,r5
0A23 120000    2450            lcall   ___fsadd
0A26 AA82      2451            mov     r2,dpl
0A28 AB83      2452            mov     r3,dph
0A2A ACF0      2453            mov     r4,b
0A2C FD        2454            mov     r5,a
0A2D E581      2455            mov     a,sp
0A2F 24FC      2456            add     a,#0xfc
0A31 F581      2457            mov     sp,a
0A33 8A82      2458            mov     dpl,r2
0A35 8B83      2459            mov     dph,r3
0A37 8CF0      2460            mov     b,r4
0A39 ED        2461            mov     a,r5
0A3A 120000    2462            lcall   ___fs2ulong
0A3D 020000    2463            ljmp    _loadTimer2
0A40           2464   L031002?:
0A40           2465   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:584: TR2 = 0;            // Stop timer 2
0A40 C2CA      2466            clr     _TR2
0A42           2467   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:585: BUZZER_OUT = 0; // turn off buzzer sound
0A42 C282      2468            clr     _P0_2
0A44 22        2469            ret
0A45           2470   ;------------------------------------------------------------
0A45           2471   ;Allocation info for local variables in function 'matchRange'
0A45           2472   ;------------------------------------------------------------
0A45           2473   ;y                         Allocated with name '_matchRange_PARM_2'
0A45           2474   ;x                         Allocated to registers r2 r3 
0A45           2475   ;result                    Allocated to registers r4 
0A45           2476   ;------------------------------------------------------------
0A45           2477   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:589: char matchRange(int x, int y) {
0A45           2478   ;        -----------------------------------------
0A45           2479   ;         function matchRange
0A45           2480   ;        -----------------------------------------
0A45           2481   _matchRange:
0A45 AA82      2482            mov     r2,dpl
0A47 AB83      2483            mov     r3,dph
0A49           2484   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:593: if (x >= -5 && x <= 5) {
0A49 C3        2485            clr     c
0A4A EA        2486            mov     a,r2
0A4B 94FB      2487            subb    a,#0xFB
0A4D EB        2488            mov     a,r3
0A4E 6480      2489            xrl     a,#0x80
0A50 947F      2490            subb    a,#0x7f
0A52 5000      2491            jnc     L032121?
0A54 020000    2492            ljmp    L032081?
0A57           2493   L032121?:
0A57 C3        2494            clr     c
0A58 7405      2495            mov     a,#0x05
0A5A 9A        2496            subb    a,r2
0A5B E4        2497            clr     a
0A5C 6480      2498            xrl     a,#0x80
0A5E 8BF0      2499            mov     b,r3
0A60 63F080    2500            xrl     b,#0x80
0A63 95F0      2501            subb    a,b
0A65 5000      2502            jnc     L032122?
0A67 020000    2503            ljmp    L032081?
0A6A           2504   L032122?:
0A6A           2505   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:594: if (y >= 45)
0A6A C3        2506            clr     c
0A6B E560      2507            mov     a,_matchRange_PARM_2
0A6D 942D      2508            subb    a,#0x2D
0A6F E561      2509            mov     a,(_matchRange_PARM_2 + 1)
0A71 6480      2510            xrl     a,#0x80
0A73 9480      2511            subb    a,#0x80
0A75 4000      2512            jc      L032021?
0A77           2513   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:595: result = 'A';
0A77 7C41      2514            mov     r4,#0x41
0A79 020000    2515            ljmp    L032082?
0A7C           2516   L032021?:
0A7C           2517   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:596: else if (y >= 30 && y <= 45)
0A7C C3        2518            clr     c
0A7D E560      2519            mov     a,_matchRange_PARM_2
0A7F 941E      2520            subb    a,#0x1E
0A81 E561      2521            mov     a,(_matchRange_PARM_2 + 1)
0A83 6480      2522            xrl     a,#0x80
0A85 9480      2523            subb    a,#0x80
0A87 4000      2524            jc      L032017?
0A89 742D      2525            mov     a,#0x2D
0A8B 9560      2526            subb    a,_matchRange_PARM_2
0A8D E4        2527            clr     a
0A8E 6480      2528            xrl     a,#0x80
0A90 8561F0    2529            mov     b,(_matchRange_PARM_2 + 1)
0A93 63F080    2530            xrl     b,#0x80
0A96 95F0      2531            subb    a,b
0A98 4000      2532            jc      L032017?
0A9A           2533   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:597: result = 'B';
0A9A 7C42      2534            mov     r4,#0x42
0A9C 020000    2535            ljmp    L032082?
0A9F           2536   L032017?:
0A9F           2537   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:598: else if (y >= 5 && y <= 30)
0A9F C3        2538            clr     c
0AA0 E560      2539            mov     a,_matchRange_PARM_2
0AA2 9405      2540            subb    a,#0x05
0AA4 E561      2541            mov     a,(_matchRange_PARM_2 + 1)
0AA6 6480      2542            xrl     a,#0x80
0AA8 9480      2543            subb    a,#0x80
0AAA 4000      2544            jc      L032013?
0AAC 741E      2545            mov     a,#0x1E
0AAE 9560      2546            subb    a,_matchRange_PARM_2
0AB0 E4        2547            clr     a
0AB1 6480      2548            xrl     a,#0x80
0AB3 8561F0    2549            mov     b,(_matchRange_PARM_2 + 1)
0AB6 63F080    2550            xrl     b,#0x80
0AB9 95F0      2551            subb    a,b
0ABB 4000      2552            jc      L032013?
0ABD           2553   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:599: result = 'C';
0ABD 7C43      2554            mov     r4,#0x43
0ABF 020000    2555            ljmp    L032082?
0AC2           2556   L032013?:
0AC2           2557   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:600: else if (y <= -45)
0AC2 C3        2558            clr     c
0AC3 74D3      2559            mov     a,#0xD3
0AC5 9560      2560            subb    a,_matchRange_PARM_2
0AC7 747F      2561            mov     a,#(0xFF ^ 0x80)
0AC9 8561F0    2562            mov     b,(_matchRange_PARM_2 + 1)
0ACC 63F080    2563            xrl     b,#0x80
0ACF 95F0      2564            subb    a,b
0AD1 4000      2565            jc      L032010?
0AD3           2566   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:601: result = 'D';
0AD3 7C44      2567            mov     r4,#0x44
0AD5 020000    2568            ljmp    L032082?
0AD8           2569   L032010?:
0AD8           2570   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:602: else if (y >= -45 && y <= -30)
0AD8 C3        2571            clr     c
0AD9 E560      2572            mov     a,_matchRange_PARM_2
0ADB 94D3      2573            subb    a,#0xD3
0ADD E561      2574            mov     a,(_matchRange_PARM_2 + 1)
0ADF 6480      2575            xrl     a,#0x80
0AE1 947F      2576            subb    a,#0x7f
0AE3 4000      2577            jc      L032006?
0AE5 74E2      2578            mov     a,#0xE2
0AE7 9560      2579            subb    a,_matchRange_PARM_2
0AE9 747F      2580            mov     a,#(0xFF ^ 0x80)
0AEB 8561F0    2581            mov     b,(_matchRange_PARM_2 + 1)
0AEE 63F080    2582            xrl     b,#0x80
0AF1 95F0      2583            subb    a,b
0AF3 4000      2584            jc      L032006?
0AF5           2585   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:603: result = 'E';
0AF5 7C45      2586            mov     r4,#0x45
0AF7 020000    2587            ljmp    L032082?
0AFA           2588   L032006?:
0AFA           2589   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:604: else if (y >= -30 && y <= -5)
0AFA C3        2590            clr     c
0AFB E560      2591            mov     a,_matchRange_PARM_2
0AFD 94E2      2592            subb    a,#0xE2
0AFF E561      2593            mov     a,(_matchRange_PARM_2 + 1)
0B01 6480      2594            xrl     a,#0x80
0B03 947F      2595            subb    a,#0x7f
0B05 4000      2596            jc      L032002?
0B07 74FB      2597            mov     a,#0xFB
0B09 9560      2598            subb    a,_matchRange_PARM_2
0B0B 747F      2599            mov     a,#(0xFF ^ 0x80)
0B0D 8561F0    2600            mov     b,(_matchRange_PARM_2 + 1)
0B10 63F080    2601            xrl     b,#0x80
0B13 95F0      2602            subb    a,b
0B15 4000      2603            jc      L032002?
0B17           2604   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:605: result = 'F';
0B17 7C46      2605            mov     r4,#0x46
0B19 020000    2606            ljmp    L032082?
0B1C           2607   L032002?:
0B1C           2608   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:607: result = 'Z'; // Default case if Y doesn't match any range
0B1C 7C5A      2609            mov     r4,#0x5A
0B1E 020000    2610            ljmp    L032082?
0B21           2611   L032081?:
0B21           2612   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:609: else if (x >= 40) {
0B21 C3        2613            clr     c
0B22 EA        2614            mov     a,r2
0B23 9428      2615            subb    a,#0x28
0B25 EB        2616            mov     a,r3
0B26 6480      2617            xrl     a,#0x80
0B28 9480      2618            subb    a,#0x80
0B2A           2619   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:611: if (y >= 5) 
0B2A 4000      2620            jc      L032078?
0B2C E560      2621            mov     a,_matchRange_PARM_2
0B2E 9405      2622            subb    a,#0x05
0B30 E561      2623            mov     a,(_matchRange_PARM_2 + 1)
0B32 6480      2624            xrl     a,#0x80
0B34 9480      2625            subb    a,#0x80
0B36 4000      2626            jc      L032031?
0B38           2627   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:612: result = 'K';
0B38 7C4B      2628            mov     r4,#0x4B
0B3A 020000    2629            ljmp    L032082?
0B3D           2630   L032031?:
0B3D           2631   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:613: else if (y <= -5)
0B3D C3        2632            clr     c
0B3E 74FB      2633            mov     a,#0xFB
0B40 9560      2634            subb    a,_matchRange_PARM_2
0B42 747F      2635            mov     a,#(0xFF ^ 0x80)
0B44 8561F0    2636            mov     b,(_matchRange_PARM_2 + 1)
0B47 63F080    2637            xrl     b,#0x80
0B4A 95F0      2638            subb    a,b
0B4C 4000      2639            jc      L032028?
0B4E           2640   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:614: result = 'M';
0B4E 7C4D      2641            mov     r4,#0x4D
0B50 020000    2642            ljmp    L032082?
0B53           2643   L032028?:
0B53           2644   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:615: else if (y >= -5 && y <= 5)
0B53 C3        2645            clr     c
0B54 E560      2646            mov     a,_matchRange_PARM_2
0B56 94FB      2647            subb    a,#0xFB
0B58 E561      2648            mov     a,(_matchRange_PARM_2 + 1)
0B5A 6480      2649            xrl     a,#0x80
0B5C 947F      2650            subb    a,#0x7f
0B5E 4000      2651            jc      L032024?
0B60 7405      2652            mov     a,#0x05
0B62 9560      2653            subb    a,_matchRange_PARM_2
0B64 E4        2654            clr     a
0B65 6480      2655            xrl     a,#0x80
0B67 8561F0    2656            mov     b,(_matchRange_PARM_2 + 1)
0B6A 63F080    2657            xrl     b,#0x80
0B6D 95F0      2658            subb    a,b
0B6F 4000      2659            jc      L032024?
0B71           2660   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:616: result = 'G';
0B71 7C47      2661            mov     r4,#0x47
0B73 020000    2662            ljmp    L032082?
0B76           2663   L032024?:
0B76           2664   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:618: result = 'Z'; // Default case if Y doesn't match any range
0B76 7C5A      2665            mov     r4,#0x5A
0B78 020000    2666            ljmp    L032082?
0B7B           2667   L032078?:
0B7B           2668   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:620: else if (x <= -40) {
0B7B C3        2669            clr     c
0B7C 74D8      2670            mov     a,#0xD8
0B7E 9A        2671            subb    a,r2
0B7F 747F      2672            mov     a,#(0xFF ^ 0x80)
0B81 8BF0      2673            mov     b,r3
0B83 63F080    2674            xrl     b,#0x80
0B86 95F0      2675            subb    a,b
0B88           2676   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:622: if (y <= -5)
0B88 4000      2677            jc      L032075?
0B8A 74FB      2678            mov     a,#0xFB
0B8C 9560      2679            subb    a,_matchRange_PARM_2
0B8E 747F      2680            mov     a,#(0xFF ^ 0x80)
0B90 8561F0    2681            mov     b,(_matchRange_PARM_2 + 1)
0B93 63F080    2682            xrl     b,#0x80
0B96 95F0      2683            subb    a,b
0B98 E4        2684            clr     a
0B99 33        2685            rlc     a
0B9A FD        2686            mov     r5,a
0B9B 7000      2687            jnz     L032044?
0B9D           2688   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:623: result = 'N';
0B9D 7C4E      2689            mov     r4,#0x4E
0B9F 020000    2690            ljmp    L032082?
0BA2           2691   L032044?:
0BA2           2692   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:624: else if (y >= 5)
0BA2 C3        2693            clr     c
0BA3 E560      2694            mov     a,_matchRange_PARM_2
0BA5 9405      2695            subb    a,#0x05
0BA7 E561      2696            mov     a,(_matchRange_PARM_2 + 1)
0BA9 6480      2697            xrl     a,#0x80
0BAB 9480      2698            subb    a,#0x80
0BAD 4000      2699            jc      L032041?
0BAF           2700   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:625: result = 'L';
0BAF 7C4C      2701            mov     r4,#0x4C
0BB1 020000    2702            ljmp    L032082?
0BB4           2703   L032041?:
0BB4           2704   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:626: else if (y <= -5)
0BB4 ED        2705            mov     a,r5
0BB5 7000      2706            jnz     L032038?
0BB7           2707   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:627: result = 'N';
0BB7 7C4E      2708            mov     r4,#0x4E
0BB9 020000    2709            ljmp    L032082?
0BBC           2710   L032038?:
0BBC           2711   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:628: else if (y >= -5 && y <= 5)
0BBC C3        2712            clr     c
0BBD E560      2713            mov     a,_matchRange_PARM_2
0BBF 94FB      2714            subb    a,#0xFB
0BC1 E561      2715            mov     a,(_matchRange_PARM_2 + 1)
0BC3 6480      2716            xrl     a,#0x80
0BC5 947F      2717            subb    a,#0x7f
0BC7 4000      2718            jc      L032034?
0BC9 7405      2719            mov     a,#0x05
0BCB 9560      2720            subb    a,_matchRange_PARM_2
0BCD E4        2721            clr     a
0BCE 6480      2722            xrl     a,#0x80
0BD0 8561F0    2723            mov     b,(_matchRange_PARM_2 + 1)
0BD3 63F080    2724            xrl     b,#0x80
0BD6 95F0      2725            subb    a,b
0BD8 4000      2726            jc      L032034?
0BDA           2727   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:629: result = 'I';
0BDA 7C49      2728            mov     r4,#0x49
0BDC 020000    2729            ljmp    L032082?
0BDF           2730   L032034?:
0BDF           2731   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:631: result = 'Z'; // Default case if Y doesn't match any range
0BDF 7C5A      2732            mov     r4,#0x5A
0BE1 020000    2733            ljmp    L032082?
0BE4           2734   L032075?:
0BE4           2735   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:633: else if (x >= 5 && x <= 40) {
0BE4 C3        2736            clr     c
0BE5 EA        2737            mov     a,r2
0BE6 9405      2738            subb    a,#0x05
0BE8 EB        2739            mov     a,r3
0BE9 6480      2740            xrl     a,#0x80
0BEB 9480      2741            subb    a,#0x80
0BED 4000      2742            jc      L032071?
0BEF 7428      2743            mov     a,#0x28
0BF1 9A        2744            subb    a,r2
0BF2 E4        2745            clr     a
0BF3 6480      2746            xrl     a,#0x80
0BF5 8BF0      2747            mov     b,r3
0BF7 63F080    2748            xrl     b,#0x80
0BFA 95F0      2749            subb    a,b
0BFC           2750   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:635: if (y >= -5 && y <= 5)
0BFC 4000      2751            jc      L032071?
0BFE E560      2752            mov     a,_matchRange_PARM_2
0C00 94FB      2753            subb    a,#0xFB
0C02 E561      2754            mov     a,(_matchRange_PARM_2 + 1)
0C04 6480      2755            xrl     a,#0x80
0C06 947F      2756            subb    a,#0x7f
0C08 4000      2757            jc      L032053?
0C0A 7405      2758            mov     a,#0x05
0C0C 9560      2759            subb    a,_matchRange_PARM_2
0C0E E4        2760            clr     a
0C0F 6480      2761            xrl     a,#0x80
0C11 8561F0    2762            mov     b,(_matchRange_PARM_2 + 1)
0C14 63F080    2763            xrl     b,#0x80
0C17 95F0      2764            subb    a,b
0C19 4000      2765            jc      L032053?
0C1B           2766   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:636: result = 'H';
0C1B 7C48      2767            mov     r4,#0x48
0C1D 020000    2768            ljmp    L032082?
0C20           2769   L032053?:
0C20           2770   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:637: else if (y >= 5)
0C20 C3        2771            clr     c
0C21 E560      2772            mov     a,_matchRange_PARM_2
0C23 9405      2773            subb    a,#0x05
0C25 E561      2774            mov     a,(_matchRange_PARM_2 + 1)
0C27 6480      2775            xrl     a,#0x80
0C29 9480      2776            subb    a,#0x80
0C2B 4000      2777            jc      L032050?
0C2D           2778   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:638: result = 'K';
0C2D 7C4B      2779            mov     r4,#0x4B
0C2F 020000    2780            ljmp    L032082?
0C32           2781   L032050?:
0C32           2782   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:639: else if (y <= -5)
0C32 C3        2783            clr     c
0C33 74FB      2784            mov     a,#0xFB
0C35 9560      2785            subb    a,_matchRange_PARM_2
0C37 747F      2786            mov     a,#(0xFF ^ 0x80)
0C39 8561F0    2787            mov     b,(_matchRange_PARM_2 + 1)
0C3C 63F080    2788            xrl     b,#0x80
0C3F 95F0      2789            subb    a,b
0C41 4000      2790            jc      L032047?
0C43           2791   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:640: result = 'M';
0C43 7C4D      2792            mov     r4,#0x4D
0C45 020000    2793            ljmp    L032082?
0C48           2794   L032047?:
0C48           2795   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:642: result = 'Z'; // Default case if Y doesn't match any range
0C48 7C5A      2796            mov     r4,#0x5A
0C4A 020000    2797            ljmp    L032082?
0C4D           2798   L032071?:
0C4D           2799   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:644: else if (x >= -40 && x <= -5) {
0C4D C3        2800            clr     c
0C4E EA        2801            mov     a,r2
0C4F 94D8      2802            subb    a,#0xD8
0C51 EB        2803            mov     a,r3
0C52 6480      2804            xrl     a,#0x80
0C54 947F      2805            subb    a,#0x7f
0C56 4000      2806            jc      L032067?
0C58 74FB      2807            mov     a,#0xFB
0C5A 9A        2808            subb    a,r2
0C5B 747F      2809            mov     a,#(0xFF ^ 0x80)
0C5D 8BF0      2810            mov     b,r3
0C5F 63F080    2811            xrl     b,#0x80
0C62 95F0      2812            subb    a,b
0C64           2813   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:646: if (y >= -5 && y <= 5)
0C64 4000      2814            jc      L032067?
0C66 E560      2815            mov     a,_matchRange_PARM_2
0C68 94FB      2816            subb    a,#0xFB
0C6A E561      2817            mov     a,(_matchRange_PARM_2 + 1)
0C6C 6480      2818            xrl     a,#0x80
0C6E 947F      2819            subb    a,#0x7f
0C70 4000      2820            jc      L032063?
0C72 7405      2821            mov     a,#0x05
0C74 9560      2822            subb    a,_matchRange_PARM_2
0C76 E4        2823            clr     a
0C77 6480      2824            xrl     a,#0x80
0C79 8561F0    2825            mov     b,(_matchRange_PARM_2 + 1)
0C7C 63F080    2826            xrl     b,#0x80
0C7F 95F0      2827            subb    a,b
0C81 4000      2828            jc      L032063?
0C83           2829   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:647: result = 'J';
0C83 7C4A      2830            mov     r4,#0x4A
0C85 8000      2831            sjmp    L032082?
0C87           2832   L032063?:
0C87           2833   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:648: else if (y >= 5)
0C87 C3        2834            clr     c
0C88 E560      2835            mov     a,_matchRange_PARM_2
0C8A 9405      2836            subb    a,#0x05
0C8C E561      2837            mov     a,(_matchRange_PARM_2 + 1)
0C8E 6480      2838            xrl     a,#0x80
0C90 9480      2839            subb    a,#0x80
0C92 4000      2840            jc      L032060?
0C94           2841   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:649: result = 'L';
0C94 7C4C      2842            mov     r4,#0x4C
0C96 8000      2843            sjmp    L032082?
0C98           2844   L032060?:
0C98           2845   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:650: else if (y <= -5)
0C98 C3        2846            clr     c
0C99 74FB      2847            mov     a,#0xFB
0C9B 9560      2848            subb    a,_matchRange_PARM_2
0C9D 747F      2849            mov     a,#(0xFF ^ 0x80)
0C9F 8561F0    2850            mov     b,(_matchRange_PARM_2 + 1)
0CA2 63F080    2851            xrl     b,#0x80
0CA5 95F0      2852            subb    a,b
0CA7 4000      2853            jc      L032057?
0CA9           2854   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:651: result = 'N';
0CA9 7C4E      2855            mov     r4,#0x4E
0CAB 8000      2856            sjmp    L032082?
0CAD           2857   L032057?:
0CAD           2858   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:653: result = 'Z'; // Default case if Y doesn't match any range
0CAD 7C5A      2859            mov     r4,#0x5A
0CAF 8000      2860            sjmp    L032082?
0CB1           2861   L032067?:
0CB1           2862   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:656: result = 'Z'; // Default case if X doesn't match any range
0CB1 7C5A      2863            mov     r4,#0x5A
0CB3           2864   L032082?:
0CB3           2865   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:659: return result;
0CB3 8C82      2866            mov     dpl,r4
0CB5 22        2867            ret
0CB6           2868   ;------------------------------------------------------------
0CB6           2869   ;Allocation info for local variables in function 'main'
0CB6           2870   ;------------------------------------------------------------
0CB6           2871   ;extract_num               Allocated to registers 
0CB6           2872   ;prev_num                  Allocated to registers 
0CB6           2873   ;min_metal_detect          Allocated to registers 
0CB6           2874   ;mapped_range              Allocated to registers 
0CB6           2875   ;extract_range             Allocated to registers 
0CB6           2876   ;timeout_cnt               Allocated to registers r2 r3 
0CB6           2877   ;sum_count                 Allocated to registers 
0CB6           2878   ;sum_freq                  Allocated to registers 
0CB6           2879   ;baseline_freq             Allocated to registers 
0CB6           2880   ;v                         Allocated with name '_main_v_1_167'
0CB6           2881   ;xy_pos                    Allocated with name '_main_xy_pos_1_167'
0CB6           2882   ;mid                       Allocated with name '_main_mid_1_167'
0CB6           2883   ;mapped_dir                Allocated to registers r2 
0CB6           2884   ;temp_buff                 Allocated with name '_main_temp_buff_1_167'
0CB6           2885   ;------------------------------------------------------------
0CB6           2886   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:663: void main(void)
0CB6           2887   ;        -----------------------------------------
0CB6           2888   ;         function main
0CB6           2889   ;        -----------------------------------------
0CB6           2890   _main:
0CB6           2891   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:687: LCD_4BIT();
0CB6 120000    2892            lcall   _LCD_4BIT
0CB9           2893   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:689: waitms(500);
0CB9 9001F4    2894            mov     dptr,#0x01F4
0CBC 120000    2895            lcall   _waitms
0CBF           2896   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:690: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0CBF 74C0      2897            mov     a,#__str_2
0CC1 C0E0      2898            push    acc
0CC3 74D4      2899            mov     a,#(__str_2 >> 8)
0CC5 C0E0      2900            push    acc
0CC7 7480      2901            mov     a,#0x80
0CC9 C0E0      2902            push    acc
0CCB 120000    2903            lcall   _printf
0CCE 1581      2904            dec     sp
0CD0 1581      2905            dec     sp
0CD2 1581      2906            dec     sp
0CD4           2907   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:695: __FILE__, __DATE__, __TIME__);
0CD4           2908   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:694: "Compiled: %s, %s\n\n",
0CD4 7400      2909            mov     a,#__str_6
0CD6 C0E0      2910            push    acc
0CD8 74D5      2911            mov     a,#(__str_6 >> 8)
0CDA C0E0      2912            push    acc
0CDC 7480      2913            mov     a,#0x80
0CDE C0E0      2914            push    acc
0CE0 7440      2915            mov     a,#__str_5
0CE2 C0E0      2916            push    acc
0CE4 74D5      2917            mov     a,#(__str_5 >> 8)
0CE6 C0E0      2918            push    acc
0CE8 7480      2919            mov     a,#0x80
0CEA C0E0      2920            push    acc
0CEC 7480      2921            mov     a,#__str_4
0CEE C0E0      2922            push    acc
0CF0 74D5      2923            mov     a,#(__str_4 >> 8)
0CF2 C0E0      2924            push    acc
0CF4 7480      2925            mov     a,#0x80
0CF6 C0E0      2926            push    acc
0CF8 74C0      2927            mov     a,#__str_3
0CFA C0E0      2928            push    acc
0CFC 74D5      2929            mov     a,#(__str_3 >> 8)
0CFE C0E0      2930            push    acc
0D00 7480      2931            mov     a,#0x80
0D02 C0E0      2932            push    acc
0D04 120000    2933            lcall   _printf
0D07 E581      2934            mov     a,sp
0D09 24F4      2935            add     a,#0xf4
0D0B F581      2936            mov     sp,a
0D0D           2937   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:696: printf("\r\nJDY-40 test\r\n");
0D0D 7400      2938            mov     a,#__str_7
0D0F C0E0      2939            push    acc
0D11 74D6      2940            mov     a,#(__str_7 >> 8)
0D13 C0E0      2941            push    acc
0D15 7480      2942            mov     a,#0x80
0D17 C0E0      2943            push    acc
0D19 120000    2944            lcall   _printf
0D1C 1581      2945            dec     sp
0D1E 1581      2946            dec     sp
0D20 1581      2947            dec     sp
0D22           2948   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:697: UART1_Init(9600);
0D22 902580    2949            mov     dptr,#0x2580
0D25 E4        2950            clr     a
0D26 F5F0      2951            mov     b,a
0D28 120000    2952            lcall   _UART1_Init
0D2B           2953   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:699: InitPinADC(1, 4); // Configure P1.4 as analog input
0D2B 75B004    2954            mov     _InitPinADC_PARM_2,#0x04
0D2E 758201    2955            mov     dpl,#0x01
0D31 120000    2956            lcall   _InitPinADC
0D34           2957   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:700: InitPinADC(1, 5); // Configure P1.5 as analog input
0D34 75B005    2958            mov     _InitPinADC_PARM_2,#0x05
0D37 758201    2959            mov     dpl,#0x01
0D3A 120000    2960            lcall   _InitPinADC
0D3D           2961   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:701: InitADC();
0D3D 120000    2962            lcall   _InitADC
0D40           2963   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:719: SendATCommand("AT+DVIDA0A0\r\n");  
0D40 90D640    2964            mov     dptr,#__str_8
0D43 75F080    2965            mov     b,#0x80
0D46 120000    2966            lcall   _SendATCommand
0D49           2967   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:722: SendATCommand("AT+VER\r\n");
0D49 90D680    2968            mov     dptr,#__str_9
0D4C 75F080    2969            mov     b,#0x80
0D4F 120000    2970            lcall   _SendATCommand
0D52           2971   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:723: SendATCommand("AT+BAUD\r\n");
0D52 90D6C0    2972            mov     dptr,#__str_10
0D55 75F080    2973            mov     b,#0x80
0D58 120000    2974            lcall   _SendATCommand
0D5B           2975   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:724: SendATCommand("AT+RFID\r\n");
0D5B 90D700    2976            mov     dptr,#__str_11
0D5E 75F080    2977            mov     b,#0x80
0D61 120000    2978            lcall   _SendATCommand
0D64           2979   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:725: SendATCommand("AT+DVID\r\n");
0D64 90D740    2980            mov     dptr,#__str_12
0D67 75F080    2981            mov     b,#0x80
0D6A 120000    2982            lcall   _SendATCommand
0D6D           2983   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:726: SendATCommand("AT+RFC\r\n");
0D6D 90D780    2984            mov     dptr,#__str_13
0D70 75F080    2985            mov     b,#0x80
0D73 120000    2986            lcall   _SendATCommand
0D76           2987   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:727: SendATCommand("AT+POWE\r\n");
0D76 90D7C0    2988            mov     dptr,#__str_14
0D79 75F080    2989            mov     b,#0x80
0D7C 120000    2990            lcall   _SendATCommand
0D7F           2991   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:728: SendATCommand("AT+CLSS\r\n");
0D7F 90D800    2992            mov     dptr,#__str_15
0D82 75F080    2993            mov     b,#0x80
0D85 120000    2994            lcall   _SendATCommand
0D88           2995   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:734: mid[0]=2.17;
0D88 751848    2996            mov     _main_mid_1_167,#0x48
0D8B 7519E1    2997            mov     (_main_mid_1_167 + 1),#0xE1
0D8E 751A0A    2998            mov     (_main_mid_1_167 + 2),#0x0A
0D91 751B40    2999            mov     (_main_mid_1_167 + 3),#0x40
0D94           3000   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:735: mid[1]=2.30;
0D94 751C33    3001            mov     (_main_mid_1_167 + 0x0004),#0x33
0D97 751D33    3002            mov     ((_main_mid_1_167 + 0x0004) + 1),#0x33
0D9A 751E13    3003            mov     ((_main_mid_1_167 + 0x0004) + 2),#0x13
0D9D 751F40    3004            mov     ((_main_mid_1_167 + 0x0004) + 3),#0x40
0DA0           3005   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:740: while(1)
0DA0           3006   L033011?:
0DA0           3007   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:742: waitms(50);
0DA0 900032    3008            mov     dptr,#0x0032
0DA3 120000    3009            lcall   _waitms
0DA6           3010   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:745: v[0] = Volts_at_Pin(XPOS_PIN) ;
0DA6 75820A    3011            mov     dpl,#0x0A
0DA9 120000    3012            lcall   _Volts_at_Pin
0DAC AA82      3013            mov     r2,dpl
0DAE AB83      3014            mov     r3,dph
0DB0 ACF0      3015            mov     r4,b
0DB2 FD        3016            mov     r5,a
0DB3 8A88      3017            mov     _main_v_1_167,r2
0DB5 8B89      3018            mov     (_main_v_1_167 + 1),r3
0DB7 8C8A      3019            mov     (_main_v_1_167 + 2),r4
0DB9 8D8B      3020            mov     (_main_v_1_167 + 3),r5
0DBB           3021   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:746: v[1] = Volts_at_Pin(YPOS_PIN) ;
0DBB 75820B    3022            mov     dpl,#0x0B
0DBE 120000    3023            lcall   _Volts_at_Pin
0DC1 AA82      3024            mov     r2,dpl
0DC3 AB83      3025            mov     r3,dph
0DC5 ACF0      3026            mov     r4,b
0DC7 FD        3027            mov     r5,a
0DC8 8A8C      3028            mov     (_main_v_1_167 + 0x0004),r2
0DCA 8B8D      3029            mov     ((_main_v_1_167 + 0x0004) + 1),r3
0DCC 8C8E      3030            mov     ((_main_v_1_167 + 0x0004) + 2),r4
0DCE 8D8F      3031            mov     ((_main_v_1_167 + 0x0004) + 3),r5
0DD0           3032   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:753: GetPosition2(v, xy_pos);
0DD0 7558D8    3033            mov     _GetPosition2_PARM_2,#_main_xy_pos_1_167
0DD3 755900    3034            mov     (_GetPosition2_PARM_2 + 1),#0x00
0DD6 755A40    3035            mov     (_GetPosition2_PARM_2 + 2),#0x40
0DD9 90BB88    3036            mov     dptr,#_main_v_1_167
0DDC 75F040    3037            mov     b,#0x40
0DDF 120000    3038            lcall   _GetPosition2
0DE2           3039   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:755: mapped_dir = matchRange((int) xy_pos[0], (int) xy_pos[1]);
0DE2 85D882    3040            mov     dpl,_main_xy_pos_1_167
0DE5 85D983    3041            mov     dph,(_main_xy_pos_1_167 + 1)
0DE8 85DAF0    3042            mov     b,(_main_xy_pos_1_167 + 2)
0DEB E5DB      3043            mov     a,(_main_xy_pos_1_167 + 3)
0DED 120000    3044            lcall   ___fs2sint
0DF0 AA82      3045            mov     r2,dpl
0DF2 AB83      3046            mov     r3,dph
0DF4 85DC82    3047            mov     dpl,(_main_xy_pos_1_167 + 0x0004)
0DF7 85DD83    3048            mov     dph,((_main_xy_pos_1_167 + 0x0004) + 1)
0DFA 85DEF0    3049            mov     b,((_main_xy_pos_1_167 + 0x0004) + 2)
0DFD E5DF      3050            mov     a,((_main_xy_pos_1_167 + 0x0004) + 3)
0DFF C002      3051            push    ar2
0E01 C003      3052            push    ar3
0E03 120000    3053            lcall   ___fs2sint
0E06 858260    3054            mov     _matchRange_PARM_2,dpl
0E09 858361    3055            mov     (_matchRange_PARM_2 + 1),dph
0E0C D003      3056            pop     ar3
0E0E D002      3057            pop     ar2
0E10 8A82      3058            mov     dpl,r2
0E12 8B83      3059            mov     dph,r3
0E14 120000    3060            lcall   _matchRange
0E17           3061   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:762: printf("x=%.4f y=%.4f pos=%c\r\n", xy_pos[0], xy_pos[1], mapped_dir);
0E17 E582      3062            mov     a,dpl
0E19 FA        3063            mov     r2,a
0E1A 33        3064            rlc     a
0E1B 95E0      3065            subb    a,acc
0E1D FB        3066            mov     r3,a
0E1E C002      3067            push    ar2
0E20 C003      3068            push    ar3
0E22 C002      3069            push    ar2
0E24 C003      3070            push    ar3
0E26 C0DC      3071            push    (_main_xy_pos_1_167 + 0x0004)
0E28 C0DD      3072            push    ((_main_xy_pos_1_167 + 0x0004) + 1)
0E2A C0DE      3073            push    ((_main_xy_pos_1_167 + 0x0004) + 2)
0E2C C0DF      3074            push    ((_main_xy_pos_1_167 + 0x0004) + 3)
0E2E C0D8      3075            push    _main_xy_pos_1_167
0E30 C0D9      3076            push    (_main_xy_pos_1_167 + 1)
0E32 C0DA      3077            push    (_main_xy_pos_1_167 + 2)
0E34 C0DB      3078            push    (_main_xy_pos_1_167 + 3)
0E36 74C0      3079            mov     a,#__str_16
0E38 C0E0      3080            push    acc
0E3A 74D8      3081            mov     a,#(__str_16 >> 8)
0E3C C0E0      3082            push    acc
0E3E 7480      3083            mov     a,#0x80
0E40 C0E0      3084            push    acc
0E42 120000    3085            lcall   _printf
0E45 E581      3086            mov     a,sp
0E47 24F3      3087            add     a,#0xf3
0E49 F581      3088            mov     sp,a
0E4B           3089   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:776: sprintf(temp_buff, "%c\r\n", mapped_dir);
0E4B 7400      3090            mov     a,#__str_17
0E4D C0E0      3091            push    acc
0E4F 74D9      3092            mov     a,#(__str_17 >> 8)
0E51 C0E0      3093            push    acc
0E53 7480      3094            mov     a,#0x80
0E55 C0E0      3095            push    acc
0E57 7468      3096            mov     a,#_main_temp_buff_1_167
0E59 C0E0      3097            push    acc
0E5B 74BC      3098            mov     a,#(_main_temp_buff_1_167 >> 8)
0E5D C0E0      3099            push    acc
0E5F E4        3100            clr     a
0E60 C0E0      3101            push    acc
0E62 120000    3102            lcall   _sprintf
0E65 E581      3103            mov     a,sp
0E67 24F8      3104            add     a,#0xf8
0E69 F581      3105            mov     sp,a
0E6B           3106   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:777: sendstr1(temp_buff);
0E6B 90BC68    3107            mov     dptr,#_main_temp_buff_1_167
0E6E 75F000    3108            mov     b,#0x00
0E71 120000    3109            lcall   _sendstr1
0E74           3110   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:779: waitms(200);
0E74 9000C8    3111            mov     dptr,#0x00C8
0E77 120000    3112            lcall   _waitms
0E7A           3113   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:782: sendstr1("m\r\n");
0E7A 90D980    3114            mov     dptr,#__str_18
0E7D 75F080    3115            mov     b,#0x80
0E80 120000    3116            lcall   _sendstr1
0E83           3117   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:783: putchar('.');
0E83 75822E    3118            mov     dpl,#0x2E
0E86 120000    3119            lcall   _putchar
0E89           3120   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:786: while (1) 
0E89 7A00      3121            mov     r2,#0x00
0E8B 7B00      3122            mov     r3,#0x00
0E8D           3123   L033006?:
0E8D           3124   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:788: if (RXU1()) break;
0E8D C002      3125            push    ar2
0E8F C003      3126            push    ar3
0E91 120000    3127            lcall   _RXU1
0E94 D003      3128            pop     ar3
0E96 D002      3129            pop     ar2
0E98 4000      3130            jc      L033007?
0E9A           3131   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:789: waitms_or_RI1(1);
0E9A 900001    3132            mov     dptr,#0x0001
0E9D C002      3133            push    ar2
0E9F C003      3134            push    ar3
0EA1 120000    3135            lcall   _waitms_or_RI1
0EA4 D003      3136            pop     ar3
0EA6 D002      3137            pop     ar2
0EA8           3138   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:790: timeout_cnt++;
0EA8 0A        3139            inc     r2
0EA9 BA0080    3140            cjne    r2,#0x00,L033021?
0EAC 0B        3141            inc     r3
0EAD           3142   L033021?:
0EAD           3143   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:791: if (timeout_cnt>=500){
0EAD C3        3144            clr     c
0EAE EA        3145            mov     a,r2
0EAF 94F4      3146            subb    a,#0xF4
0EB1 EB        3147            mov     a,r3
0EB2 6480      3148            xrl     a,#0x80
0EB4 9481      3149            subb    a,#0x81
0EB6 4000      3150            jc      L033006?
0EB8           3151   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:792: printf("timeout \r\n");
0EB8 74C0      3152            mov     a,#__str_19
0EBA C0E0      3153            push    acc
0EBC 74DA      3154            mov     a,#(__str_19 >> 8)
0EBE C0E0      3155            push    acc
0EC0 7480      3156            mov     a,#0x80
0EC2 C0E0      3157            push    acc
0EC4 120000    3158            lcall   _printf
0EC7 1581      3159            dec     sp
0EC9 1581      3160            dec     sp
0ECB 1581      3161            dec     sp
0ECD           3162   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:793: break;
0ECD           3163   L033007?:
0ECD           3164   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:796: if (RXU1()) 
0ECD 120000    3165            lcall   _RXU1
0ED0 4000      3166            jc      L033023?
0ED2 020000    3167            ljmp    L033011?
0ED5           3168   L033023?:
0ED5           3169   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:798: getstr1(buff);
0ED5 904B68    3170            mov     dptr,#_buff
0ED8 75F040    3171            mov     b,#0x40
0EDB 120000    3172            lcall   _getstr1
0EDE           3173   ;        C:\Users\rohan\Documents\Elec 291\Project 2\Project2ELEC291\integrated_files\EFM8integration.c:799: printf("%s\r\n", buff);
0EDE 7468      3174            mov     a,#_buff
0EE0 C0E0      3175            push    acc
0EE2 744B      3176            mov     a,#(_buff >> 8)
0EE4 C0E0      3177            push    acc
0EE6 7440      3178            mov     a,#0x40
0EE8 C0E0      3179            push    acc
0EEA 7440      3180            mov     a,#__str_20
0EEC C0E0      3181            push    acc
0EEE 74DB      3182            mov     a,#(__str_20 >> 8)
0EF0 C0E0      3183            push    acc
0EF2 7480      3184            mov     a,#0x80
0EF4 C0E0      3185            push    acc
0EF6 120000    3186            lcall   _printf
0EF9 E581      3187            mov     a,sp
0EFB 24FA      3188            add     a,#0xfa
0EFD F581      3189            mov     sp,a
0EFF 020000    3190            ljmp    L033011?
0F02           3191            rseg R_CSEG
0F02           3192   
0000           3193            rseg R_XINIT
0000           3194   
0000           3195            rseg R_CONST
0000           3196   __str_0:
0000 436F6D6D  3197            db 'Command: %s'
     616E643A
     202573
000B 00        3198            db 0x00
000C           3199   __str_1:
000C 52657370  3200            db 'Response: %s'
     6F6E7365
     3A202573
0018 0D        3201            db 0x0D
0019 0A        3202            db 0x0A
001A 00        3203            db 0x00
001B           3204   __str_2:
001B 1B        3205            db 0x1B
001C 5B324A    3206            db '[2J'
001F 00        3207            db 0x00
0020           3208   __str_3:
0020 41444320  3209            db 'ADC test program'
     74657374
     2070726F
     6772616D
0030 0A        3210            db 0x0A
0031 46696C65  3211            db 'File: %s'
     3A202573
0039 0A        3212            db 0x0A
003A 436F6D70  3213            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
004A 0A        3214            db 0x0A
004B 0A        3215            db 0x0A
004C 00        3216            db 0x00
004D           3217   __str_4:
004D 433A      3218            db 'C:'
004F 5C        3219            db 0x5C
0050 55736572  3220            db 'Users'
     73
0055 5C        3221            db 0x5C
0056 726F6861  3222            db 'rohan'
     6E
005B 5C        3223            db 0x5C
005C 446F6375  3224            db 'Documents'
     6D656E74
     73
0065 5C        3225            db 0x5C
0066 456C6563  3226            db 'Elec 291'
     20323931
006E 5C        3227            db 0x5C
006F 50726F6A  3228            db 'Project 2'
     65637420
     32
0078 5C        3229            db 0x5C
0079 50726F6A  3230            db 'Project2ELEC291'
     65637432
     454C4543
     323931
0088 5C        3231            db 0x5C
0089 696E7465  3232            db 'integrated_files'
     67726174
     65645F66
     696C6573
0099 5C        3233            db 0x5C
009A 45464D38  3234            db 'EFM8integration.c'
     696E7465
     67726174
     696F6E2E
     63
00AB 00        3235            db 0x00
00AC           3236   __str_5:
00AC 4D617220  3237            db 'Mar 31 2024'
     33312032
     303234
00B7 00        3238            db 0x00
00B8           3239   __str_6:
00B8 31373A35  3240            db '17:52:15'
     323A3135
00C0 00        3241            db 0x00
00C1           3242   __str_7:
00C1 0D        3243            db 0x0D
00C2 0A        3244            db 0x0A
00C3 4A44592D  3245            db 'JDY-40 test'
     34302074
     657374
00CE 0D        3246            db 0x0D
00CF 0A        3247            db 0x0A
00D0 00        3248            db 0x00
00D1           3249   __str_8:
00D1 41542B44  3250            db 'AT+DVIDA0A0'
     56494441
     304130
00DC 0D        3251            db 0x0D
00DD 0A        3252            db 0x0A
00DE 00        3253            db 0x00
00DF           3254   __str_9:
00DF 41542B56  3255            db 'AT+VER'
     4552
00E5 0D        3256            db 0x0D
00E6 0A        3257            db 0x0A
00E7 00        3258            db 0x00
00E8           3259   __str_10:
00E8 41542B42  3260            db 'AT+BAUD'
     415544
00EF 0D        3261            db 0x0D
00F0 0A        3262            db 0x0A
00F1 00        3263            db 0x00
00F2           3264   __str_11:
00F2 41542B52  3265            db 'AT+RFID'
     464944
00F9 0D        3266            db 0x0D
00FA 0A        3267            db 0x0A
00FB 00        3268            db 0x00
00FC           3269   __str_12:
00FC 41542B44  3270            db 'AT+DVID'
     564944
0103 0D        3271            db 0x0D
0104 0A        3272            db 0x0A
0105 00        3273            db 0x00
0106           3274   __str_13:
0106 41542B52  3275            db 'AT+RFC'
     4643
010C 0D        3276            db 0x0D
010D 0A        3277            db 0x0A
010E 00        3278            db 0x00
010F           3279   __str_14:
010F 41542B50  3280            db 'AT+POWE'
     4F5745
0116 0D        3281            db 0x0D
0117 0A        3282            db 0x0A
0118 00        3283            db 0x00
0119           3284   __str_15:
0119 41542B43  3285            db 'AT+CLSS'
     4C5353
0120 0D        3286            db 0x0D
0121 0A        3287            db 0x0A
0122 00        3288            db 0x00
0123           3289   __str_16:
0123 783D252E  3290            db 'x=%.4f y=%.4f pos=%c'
     34662079
     3D252E34
     6620706F
     733D2563
0137 0D        3291            db 0x0D
0138 0A        3292            db 0x0A
0139 00        3293            db 0x00
013A           3294   __str_17:
013A 2563      3295            db '%c'
013C 0D        3296            db 0x0D
013D 0A        3297            db 0x0A
013E 00        3298            db 0x00
013F           3299   __str_18:
013F 6D        3300            db 'm'
0140 0D        3301            db 0x0D
0141 0A        3302            db 0x0A
0142 00        3303            db 0x00
0143           3304   __str_19:
0143 74696D65  3305            db 'timeout '
     6F757420
014B 0D        3306            db 0x0D
014C 0A        3307            db 0x0A
014D 00        3308            db 0x00
014E           3309   __str_20:
014E 2573      3310            db '%s'
0150 0D        3311            db 0x0D
0151 0A        3312            db 0x0A
0152 00        3313            db 0x00
0153           3314   
002E           3315            CSEG
002E           3316   
002E           3317   end
