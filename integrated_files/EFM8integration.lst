0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Tue Apr 02 10:26:35 2024
0000              5   ;--------------------------------------------------------
                  5   $name EFM8integration
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _matchRange_PARM_2
0000             28            public _InitPinADC_PARM_2
0000             29            public _main
0000             30            public _matchRange
0000             31            public _loadTimer2
0000             32            public _SendATCommand
0000             33            public _waitms_or_RI1
0000             34            public _RXU1
0000             35            public _getstr1
0000             36            public _getchar1_with_timeout
0000             37            public _getchar1
0000             38            public _sendstr1
0000             39            public _putchar1
0000             40            public _UART1_Init
0000             41            public _GetPosition2
0000             42            public _map2
0000             43            public _LCDprint
0000             44            public _LCD_4BIT
0000             45            public _WriteCommand
0000             46            public _WriteData
0000             47            public _LCD_byte
0000             48            public _LCD_pulse
0000             49            public _Volts_at_Pin
0000             50            public _Get_ADC
0000             51            public _ADC_at_Pin
0000             52            public _TIMER0_Init
0000             53            public _InitPinADC
0000             54            public _waitms
0000             55            public _Timer3us
0000             56            public _InitADC
0000             57            public _Timer2_ISR
0000             58            public __c51_external_startup
0000             59            public _LCDprint_PARM_3
0000             60            public _buff
0000             61            public _GetPosition2_PARM_3
0000             62            public _GetPosition2_PARM_2
0000             63            public _map2_PARM_5
0000             64            public _map2_PARM_4
0000             65            public _map2_PARM_3
0000             66            public _map2_PARM_2
0000             67            public _LCDprint_PARM_2
0000             68            public _overflow_count
0000             69   ;--------------------------------------------------------
0000             70   ; Special Function Registers
0000             71   ;--------------------------------------------------------
0000             72   _ACC            DATA 0xe0
0000             73   _ADC0ASAH       DATA 0xb6
0000             74   _ADC0ASAL       DATA 0xb5
0000             75   _ADC0ASCF       DATA 0xa1
0000             76   _ADC0ASCT       DATA 0xc7
0000             77   _ADC0CF0        DATA 0xbc
0000             78   _ADC0CF1        DATA 0xb9
0000             79   _ADC0CF2        DATA 0xdf
0000             80   _ADC0CN0        DATA 0xe8
0000             81   _ADC0CN1        DATA 0xb2
0000             82   _ADC0CN2        DATA 0xb3
0000             83   _ADC0GTH        DATA 0xc4
0000             84   _ADC0GTL        DATA 0xc3
0000             85   _ADC0H          DATA 0xbe
0000             86   _ADC0L          DATA 0xbd
0000             87   _ADC0LTH        DATA 0xc6
0000             88   _ADC0LTL        DATA 0xc5
0000             89   _ADC0MX         DATA 0xbb
0000             90   _B              DATA 0xf0
0000             91   _CKCON0         DATA 0x8e
0000             92   _CKCON1         DATA 0xa6
0000             93   _CLEN0          DATA 0xc6
0000             94   _CLIE0          DATA 0xc7
0000             95   _CLIF0          DATA 0xe8
0000             96   _CLKSEL         DATA 0xa9
0000             97   _CLOUT0         DATA 0xd1
0000             98   _CLU0CF         DATA 0xb1
0000             99   _CLU0FN         DATA 0xaf
0000            100   _CLU0MX         DATA 0x84
0000            101   _CLU1CF         DATA 0xb3
0000            102   _CLU1FN         DATA 0xb2
0000            103   _CLU1MX         DATA 0x85
0000            104   _CLU2CF         DATA 0xb6
0000            105   _CLU2FN         DATA 0xb5
0000            106   _CLU2MX         DATA 0x91
0000            107   _CLU3CF         DATA 0xbf
0000            108   _CLU3FN         DATA 0xbe
0000            109   _CLU3MX         DATA 0xae
0000            110   _CMP0CN0        DATA 0x9b
0000            111   _CMP0CN1        DATA 0x99
0000            112   _CMP0MD         DATA 0x9d
0000            113   _CMP0MX         DATA 0x9f
0000            114   _CMP1CN0        DATA 0xbf
0000            115   _CMP1CN1        DATA 0xac
0000            116   _CMP1MD         DATA 0xab
0000            117   _CMP1MX         DATA 0xaa
0000            118   _CRC0CN0        DATA 0xce
0000            119   _CRC0CN1        DATA 0x86
0000            120   _CRC0CNT        DATA 0xd3
0000            121   _CRC0DAT        DATA 0xcb
0000            122   _CRC0FLIP       DATA 0xcf
0000            123   _CRC0IN         DATA 0xca
0000            124   _CRC0ST         DATA 0xd2
0000            125   _DAC0CF0        DATA 0x91
0000            126   _DAC0CF1        DATA 0x92
0000            127   _DAC0H          DATA 0x85
0000            128   _DAC0L          DATA 0x84
0000            129   _DAC1CF0        DATA 0x93
0000            130   _DAC1CF1        DATA 0x94
0000            131   _DAC1H          DATA 0x8a
0000            132   _DAC1L          DATA 0x89
0000            133   _DAC2CF0        DATA 0x95
0000            134   _DAC2CF1        DATA 0x96
0000            135   _DAC2H          DATA 0x8c
0000            136   _DAC2L          DATA 0x8b
0000            137   _DAC3CF0        DATA 0x9a
0000            138   _DAC3CF1        DATA 0x9c
0000            139   _DAC3H          DATA 0x8e
0000            140   _DAC3L          DATA 0x8d
0000            141   _DACGCF0        DATA 0x88
0000            142   _DACGCF1        DATA 0x98
0000            143   _DACGCF2        DATA 0xa2
0000            144   _DERIVID        DATA 0xad
0000            145   _DEVICEID       DATA 0xb5
0000            146   _DPH            DATA 0x83
0000            147   _DPL            DATA 0x82
0000            148   _EIE1           DATA 0xe6
0000            149   _EIE2           DATA 0xf3
0000            150   _EIP1           DATA 0xbb
0000            151   _EIP1H          DATA 0xee
0000            152   _EIP2           DATA 0xed
0000            153   _EIP2H          DATA 0xf6
0000            154   _EMI0CN         DATA 0xe7
0000            155   _FLKEY          DATA 0xb7
0000            156   _HFO0CAL        DATA 0xc7
0000            157   _HFO1CAL        DATA 0xd6
0000            158   _HFOCN          DATA 0xef
0000            159   _I2C0ADM        DATA 0xff
0000            160   _I2C0CN0        DATA 0xba
0000            161   _I2C0DIN        DATA 0xbc
0000            162   _I2C0DOUT       DATA 0xbb
0000            163   _I2C0FCN0       DATA 0xad
0000            164   _I2C0FCN1       DATA 0xab
0000            165   _I2C0FCT        DATA 0xf5
0000            166   _I2C0SLAD       DATA 0xbd
0000            167   _I2C0STAT       DATA 0xb9
0000            168   _IE             DATA 0xa8
0000            169   _IP             DATA 0xb8
0000            170   _IPH            DATA 0xf2
0000            171   _IT01CF         DATA 0xe4
0000            172   _LFO0CN         DATA 0xb1
0000            173   _P0             DATA 0x80
0000            174   _P0MASK         DATA 0xfe
0000            175   _P0MAT          DATA 0xfd
0000            176   _P0MDIN         DATA 0xf1
0000            177   _P0MDOUT        DATA 0xa4
0000            178   _P0SKIP         DATA 0xd4
0000            179   _P1             DATA 0x90
0000            180   _P1MASK         DATA 0xee
0000            181   _P1MAT          DATA 0xed
0000            182   _P1MDIN         DATA 0xf2
0000            183   _P1MDOUT        DATA 0xa5
0000            184   _P1SKIP         DATA 0xd5
0000            185   _P2             DATA 0xa0
0000            186   _P2MASK         DATA 0xfc
0000            187   _P2MAT          DATA 0xfb
0000            188   _P2MDIN         DATA 0xf3
0000            189   _P2MDOUT        DATA 0xa6
0000            190   _P2SKIP         DATA 0xcc
0000            191   _P3             DATA 0xb0
0000            192   _P3MDIN         DATA 0xf4
0000            193   _P3MDOUT        DATA 0x9c
0000            194   _PCA0CENT       DATA 0x9e
0000            195   _PCA0CLR        DATA 0x9c
0000            196   _PCA0CN0        DATA 0xd8
0000            197   _PCA0CPH0       DATA 0xfc
0000            198   _PCA0CPH1       DATA 0xea
0000            199   _PCA0CPH2       DATA 0xec
0000            200   _PCA0CPH3       DATA 0xf5
0000            201   _PCA0CPH4       DATA 0x85
0000            202   _PCA0CPH5       DATA 0xde
0000            203   _PCA0CPL0       DATA 0xfb
0000            204   _PCA0CPL1       DATA 0xe9
0000            205   _PCA0CPL2       DATA 0xeb
0000            206   _PCA0CPL3       DATA 0xf4
0000            207   _PCA0CPL4       DATA 0x84
0000            208   _PCA0CPL5       DATA 0xdd
0000            209   _PCA0CPM0       DATA 0xda
0000            210   _PCA0CPM1       DATA 0xdb
0000            211   _PCA0CPM2       DATA 0xdc
0000            212   _PCA0CPM3       DATA 0xae
0000            213   _PCA0CPM4       DATA 0xaf
0000            214   _PCA0CPM5       DATA 0xcc
0000            215   _PCA0H          DATA 0xfa
0000            216   _PCA0L          DATA 0xf9
0000            217   _PCA0MD         DATA 0xd9
0000            218   _PCA0POL        DATA 0x96
0000            219   _PCA0PWM        DATA 0xf7
0000            220   _PCON0          DATA 0x87
0000            221   _PCON1          DATA 0xcd
0000            222   _PFE0CN         DATA 0xc1
0000            223   _PRTDRV         DATA 0xf6
0000            224   _PSCTL          DATA 0x8f
0000            225   _PSTAT0         DATA 0xaa
0000            226   _PSW            DATA 0xd0
0000            227   _REF0CN         DATA 0xd1
0000            228   _REG0CN         DATA 0xc9
0000            229   _REVID          DATA 0xb6
0000            230   _RSTSRC         DATA 0xef
0000            231   _SBCON1         DATA 0x94
0000            232   _SBRLH1         DATA 0x96
0000            233   _SBRLL1         DATA 0x95
0000            234   _SBUF           DATA 0x99
0000            235   _SBUF0          DATA 0x99
0000            236   _SBUF1          DATA 0x92
0000            237   _SCON           DATA 0x98
0000            238   _SCON0          DATA 0x98
0000            239   _SCON1          DATA 0xc8
0000            240   _SFRPAGE        DATA 0xa7
0000            241   _SFRPGCN        DATA 0xbc
0000            242   _SFRSTACK       DATA 0xd7
0000            243   _SMB0ADM        DATA 0xd6
0000            244   _SMB0ADR        DATA 0xd7
0000            245   _SMB0CF         DATA 0xc1
0000            246   _SMB0CN0        DATA 0xc0
0000            247   _SMB0DAT        DATA 0xc2
0000            248   _SMB0FCN0       DATA 0xc3
0000            249   _SMB0FCN1       DATA 0xc4
0000            250   _SMB0FCT        DATA 0xef
0000            251   _SMB0RXLN       DATA 0xc5
0000            252   _SMB0TC         DATA 0xac
0000            253   _SMOD1          DATA 0x93
0000            254   _SP             DATA 0x81
0000            255   _SPI0CFG        DATA 0xa1
0000            256   _SPI0CKR        DATA 0xa2
0000            257   _SPI0CN0        DATA 0xf8
0000            258   _SPI0DAT        DATA 0xa3
0000            259   _SPI0FCN0       DATA 0x9a
0000            260   _SPI0FCN1       DATA 0x9b
0000            261   _SPI0FCT        DATA 0xf7
0000            262   _SPI0PCF        DATA 0xdf
0000            263   _TCON           DATA 0x88
0000            264   _TH0            DATA 0x8c
0000            265   _TH1            DATA 0x8d
0000            266   _TL0            DATA 0x8a
0000            267   _TL1            DATA 0x8b
0000            268   _TMOD           DATA 0x89
0000            269   _TMR2CN0        DATA 0xc8
0000            270   _TMR2CN1        DATA 0xfd
0000            271   _TMR2H          DATA 0xcf
0000            272   _TMR2L          DATA 0xce
0000            273   _TMR2RLH        DATA 0xcb
0000            274   _TMR2RLL        DATA 0xca
0000            275   _TMR3CN0        DATA 0x91
0000            276   _TMR3CN1        DATA 0xfe
0000            277   _TMR3H          DATA 0x95
0000            278   _TMR3L          DATA 0x94
0000            279   _TMR3RLH        DATA 0x93
0000            280   _TMR3RLL        DATA 0x92
0000            281   _TMR4CN0        DATA 0x98
0000            282   _TMR4CN1        DATA 0xff
0000            283   _TMR4H          DATA 0xa5
0000            284   _TMR4L          DATA 0xa4
0000            285   _TMR4RLH        DATA 0xa3
0000            286   _TMR4RLL        DATA 0xa2
0000            287   _TMR5CN0        DATA 0xc0
0000            288   _TMR5CN1        DATA 0xf1
0000            289   _TMR5H          DATA 0xd5
0000            290   _TMR5L          DATA 0xd4
0000            291   _TMR5RLH        DATA 0xd3
0000            292   _TMR5RLL        DATA 0xd2
0000            293   _UART0PCF       DATA 0xd9
0000            294   _UART1FCN0      DATA 0x9d
0000            295   _UART1FCN1      DATA 0xd8
0000            296   _UART1FCT       DATA 0xfa
0000            297   _UART1LIN       DATA 0x9e
0000            298   _UART1PCF       DATA 0xda
0000            299   _VDM0CN         DATA 0xff
0000            300   _WDTCN          DATA 0x97
0000            301   _XBR0           DATA 0xe1
0000            302   _XBR1           DATA 0xe2
0000            303   _XBR2           DATA 0xe3
0000            304   _XOSC0CN        DATA 0x86
0000            305   _DPTR           DATA 0x8382
0000            306   _TMR2RL         DATA 0xcbca
0000            307   _TMR3RL         DATA 0x9392
0000            308   _TMR4RL         DATA 0xa3a2
0000            309   _TMR5RL         DATA 0xd3d2
0000            310   _TMR0           DATA 0x8c8a
0000            311   _TMR1           DATA 0x8d8b
0000            312   _TMR2           DATA 0xcfce
0000            313   _TMR3           DATA 0x9594
0000            314   _TMR4           DATA 0xa5a4
0000            315   _TMR5           DATA 0xd5d4
0000            316   _SBRL1          DATA 0x9695
0000            317   _PCA0           DATA 0xfaf9
0000            318   _PCA0CP0        DATA 0xfcfb
0000            319   _PCA0CP1        DATA 0xeae9
0000            320   _PCA0CP2        DATA 0xeceb
0000            321   _PCA0CP3        DATA 0xf5f4
0000            322   _PCA0CP4        DATA 0x8584
0000            323   _PCA0CP5        DATA 0xdedd
0000            324   _ADC0ASA        DATA 0xb6b5
0000            325   _ADC0GT         DATA 0xc4c3
0000            326   _ADC0           DATA 0xbebd
0000            327   _ADC0LT         DATA 0xc6c5
0000            328   _DAC0           DATA 0x8584
0000            329   _DAC1           DATA 0x8a89
0000            330   _DAC2           DATA 0x8c8b
0000            331   _DAC3           DATA 0x8e8d
0000            332   ;--------------------------------------------------------
0000            333   ; special function bits
0000            334   ;--------------------------------------------------------
0000            335   _ACC_0          BIT 0xe0
0000            336   _ACC_1          BIT 0xe1
0000            337   _ACC_2          BIT 0xe2
0000            338   _ACC_3          BIT 0xe3
0000            339   _ACC_4          BIT 0xe4
0000            340   _ACC_5          BIT 0xe5
0000            341   _ACC_6          BIT 0xe6
0000            342   _ACC_7          BIT 0xe7
0000            343   _TEMPE          BIT 0xe8
0000            344   _ADGN0          BIT 0xe9
0000            345   _ADGN1          BIT 0xea
0000            346   _ADWINT         BIT 0xeb
0000            347   _ADBUSY         BIT 0xec
0000            348   _ADINT          BIT 0xed
0000            349   _IPOEN          BIT 0xee
0000            350   _ADEN           BIT 0xef
0000            351   _B_0            BIT 0xf0
0000            352   _B_1            BIT 0xf1
0000            353   _B_2            BIT 0xf2
0000            354   _B_3            BIT 0xf3
0000            355   _B_4            BIT 0xf4
0000            356   _B_5            BIT 0xf5
0000            357   _B_6            BIT 0xf6
0000            358   _B_7            BIT 0xf7
0000            359   _C0FIF          BIT 0xe8
0000            360   _C0RIF          BIT 0xe9
0000            361   _C1FIF          BIT 0xea
0000            362   _C1RIF          BIT 0xeb
0000            363   _C2FIF          BIT 0xec
0000            364   _C2RIF          BIT 0xed
0000            365   _C3FIF          BIT 0xee
0000            366   _C3RIF          BIT 0xef
0000            367   _D1SRC0         BIT 0x88
0000            368   _D1SRC1         BIT 0x89
0000            369   _D1AMEN         BIT 0x8a
0000            370   _D01REFSL       BIT 0x8b
0000            371   _D3SRC0         BIT 0x8c
0000            372   _D3SRC1         BIT 0x8d
0000            373   _D3AMEN         BIT 0x8e
0000            374   _D23REFSL       BIT 0x8f
0000            375   _D0UDIS         BIT 0x98
0000            376   _D1UDIS         BIT 0x99
0000            377   _D2UDIS         BIT 0x9a
0000            378   _D3UDIS         BIT 0x9b
0000            379   _EX0            BIT 0xa8
0000            380   _ET0            BIT 0xa9
0000            381   _EX1            BIT 0xaa
0000            382   _ET1            BIT 0xab
0000            383   _ES0            BIT 0xac
0000            384   _ET2            BIT 0xad
0000            385   _ESPI0          BIT 0xae
0000            386   _EA             BIT 0xaf
0000            387   _PX0            BIT 0xb8
0000            388   _PT0            BIT 0xb9
0000            389   _PX1            BIT 0xba
0000            390   _PT1            BIT 0xbb
0000            391   _PS0            BIT 0xbc
0000            392   _PT2            BIT 0xbd
0000            393   _PSPI0          BIT 0xbe
0000            394   _P0_0           BIT 0x80
0000            395   _P0_1           BIT 0x81
0000            396   _P0_2           BIT 0x82
0000            397   _P0_3           BIT 0x83
0000            398   _P0_4           BIT 0x84
0000            399   _P0_5           BIT 0x85
0000            400   _P0_6           BIT 0x86
0000            401   _P0_7           BIT 0x87
0000            402   _P1_0           BIT 0x90
0000            403   _P1_1           BIT 0x91
0000            404   _P1_2           BIT 0x92
0000            405   _P1_3           BIT 0x93
0000            406   _P1_4           BIT 0x94
0000            407   _P1_5           BIT 0x95
0000            408   _P1_6           BIT 0x96
0000            409   _P1_7           BIT 0x97
0000            410   _P2_0           BIT 0xa0
0000            411   _P2_1           BIT 0xa1
0000            412   _P2_2           BIT 0xa2
0000            413   _P2_3           BIT 0xa3
0000            414   _P2_4           BIT 0xa4
0000            415   _P2_5           BIT 0xa5
0000            416   _P2_6           BIT 0xa6
0000            417   _P3_0           BIT 0xb0
0000            418   _P3_1           BIT 0xb1
0000            419   _P3_2           BIT 0xb2
0000            420   _P3_3           BIT 0xb3
0000            421   _P3_4           BIT 0xb4
0000            422   _P3_7           BIT 0xb7
0000            423   _CCF0           BIT 0xd8
0000            424   _CCF1           BIT 0xd9
0000            425   _CCF2           BIT 0xda
0000            426   _CCF3           BIT 0xdb
0000            427   _CCF4           BIT 0xdc
0000            428   _CCF5           BIT 0xdd
0000            429   _CR             BIT 0xde
0000            430   _CF             BIT 0xdf
0000            431   _PARITY         BIT 0xd0
0000            432   _F1             BIT 0xd1
0000            433   _OV             BIT 0xd2
0000            434   _RS0            BIT 0xd3
0000            435   _RS1            BIT 0xd4
0000            436   _F0             BIT 0xd5
0000            437   _AC             BIT 0xd6
0000            438   _CY             BIT 0xd7
0000            439   _RI             BIT 0x98
0000            440   _TI             BIT 0x99
0000            441   _RB8            BIT 0x9a
0000            442   _TB8            BIT 0x9b
0000            443   _REN            BIT 0x9c
0000            444   _CE             BIT 0x9d
0000            445   _SMODE          BIT 0x9e
0000            446   _RI1            BIT 0xc8
0000            447   _TI1            BIT 0xc9
0000            448   _RBX1           BIT 0xca
0000            449   _TBX1           BIT 0xcb
0000            450   _REN1           BIT 0xcc
0000            451   _PERR1          BIT 0xcd
0000            452   _OVR1           BIT 0xce
0000            453   _SI             BIT 0xc0
0000            454   _ACK            BIT 0xc1
0000            455   _ARBLOST        BIT 0xc2
0000            456   _ACKRQ          BIT 0xc3
0000            457   _STO            BIT 0xc4
0000            458   _STA            BIT 0xc5
0000            459   _TXMODE         BIT 0xc6
0000            460   _MASTER         BIT 0xc7
0000            461   _SPIEN          BIT 0xf8
0000            462   _TXNF           BIT 0xf9
0000            463   _NSSMD0         BIT 0xfa
0000            464   _NSSMD1         BIT 0xfb
0000            465   _RXOVRN         BIT 0xfc
0000            466   _MODF           BIT 0xfd
0000            467   _WCOL           BIT 0xfe
0000            468   _SPIF           BIT 0xff
0000            469   _IT0            BIT 0x88
0000            470   _IE0            BIT 0x89
0000            471   _IT1            BIT 0x8a
0000            472   _IE1            BIT 0x8b
0000            473   _TR0            BIT 0x8c
0000            474   _TF0            BIT 0x8d
0000            475   _TR1            BIT 0x8e
0000            476   _TF1            BIT 0x8f
0000            477   _T2XCLK0        BIT 0xc8
0000            478   _T2XCLK1        BIT 0xc9
0000            479   _TR2            BIT 0xca
0000            480   _T2SPLIT        BIT 0xcb
0000            481   _TF2CEN         BIT 0xcc
0000            482   _TF2LEN         BIT 0xcd
0000            483   _TF2L           BIT 0xce
0000            484   _TF2H           BIT 0xcf
0000            485   _T4XCLK0        BIT 0x98
0000            486   _T4XCLK1        BIT 0x99
0000            487   _TR4            BIT 0x9a
0000            488   _T4SPLIT        BIT 0x9b
0000            489   _TF4CEN         BIT 0x9c
0000            490   _TF4LEN         BIT 0x9d
0000            491   _TF4L           BIT 0x9e
0000            492   _TF4H           BIT 0x9f
0000            493   _T5XCLK0        BIT 0xc0
0000            494   _T5XCLK1        BIT 0xc1
0000            495   _TR5            BIT 0xc2
0000            496   _T5SPLIT        BIT 0xc3
0000            497   _TF5CEN         BIT 0xc4
0000            498   _TF5LEN         BIT 0xc5
0000            499   _TF5L           BIT 0xc6
0000            500   _TF5H           BIT 0xc7
0000            501   _RIE            BIT 0xd8
0000            502   _RXTO0          BIT 0xd9
0000            503   _RXTO1          BIT 0xda
0000            504   _RFRQ           BIT 0xdb
0000            505   _TIE            BIT 0xdc
0000            506   _TXHOLD         BIT 0xdd
0000            507   _TXNF1          BIT 0xde
0000            508   _TFRQ           BIT 0xdf
0000            509   ;--------------------------------------------------------
0000            510   ; overlayable register banks
0000            511   ;--------------------------------------------------------
0000            512            rbank0 segment data overlay
0000            513   ;--------------------------------------------------------
0000            514   ; internal ram data
0000            515   ;--------------------------------------------------------
0000            516            rseg R_DSEG
0000            517   _overflow_count:
0000            518            ds 1
0001            519   _LCDprint_PARM_2:
0001            520            ds 1
0002            521   _map2_PARM_2:
0002            522            ds 4
0006            523   _map2_PARM_3:
0006            524            ds 4
000A            525   _map2_PARM_4:
000A            526            ds 4
000E            527   _map2_PARM_5:
000E            528            ds 4
0012            529   _GetPosition2_PARM_2:
0012            530            ds 3
0015            531   _GetPosition2_PARM_3:
0015            532            ds 3
0018            533   _GetPosition2_volts_1_119:
0018            534            ds 3
001B            535   _GetPosition2_mid_x_1_120:
001B            536            ds 4
001F            537   _GetPosition2_mid_y_1_120:
001F            538            ds 4
0023            539   _GetPosition2_vx_1_120:
0023            540            ds 4
0027            541   _GetPosition2_vy_1_120:
0027            542            ds 4
002B            543   _main_v_1_161:
002B            544            ds 8
0033            545   _main_xy_pos_1_161:
0033            546            ds 8
003B            547   _main_mid_1_161:
003B            548            ds 8
0043            549   ;--------------------------------------------------------
0043            550   ; overlayable items in internal ram 
0043            551   ;--------------------------------------------------------
0000            552            rseg    R_OSEG
0000            553            rseg    R_OSEG
0000            554   _InitPinADC_PARM_2:
0000            555            ds 1
0001            556            rseg    R_OSEG
0001            557            rseg    R_OSEG
0001            558            rseg    R_OSEG
0001            559            rseg    R_OSEG
0001            560   _matchRange_PARM_2:
0001            561            ds 2
0003            562   ;--------------------------------------------------------
0003            563   ; indirectly addressable internal ram data
0003            564   ;--------------------------------------------------------
0000            565            rseg R_ISEG
0000            566   _buff:
0000            567            ds 20
0014            568   ;--------------------------------------------------------
0014            569   ; absolute internal ram data
0014            570   ;--------------------------------------------------------
0000            571            DSEG
0000            572   ;--------------------------------------------------------
0000            573   ; bit data
0000            574   ;--------------------------------------------------------
0000            575            rseg R_BSEG
0000            576   _LCDprint_PARM_3:
0000            577            DBIT    1
0001            578   ;--------------------------------------------------------
0001            579   ; paged external ram data
0001            580   ;--------------------------------------------------------
0000            581            rseg R_PSEG
0000            582   ;--------------------------------------------------------
0000            583   ; external ram data
0000            584   ;--------------------------------------------------------
0000            585            rseg R_XSEG
0000            586   _main_buff_x_1_161:
0000            587            ds 17
0011            588   _main_buff_y_1_161:
0011            589            ds 17
0022            590   _main_temp_buff_1_161:
0022            591            ds 4
0026            592   ;--------------------------------------------------------
0026            593   ; absolute external ram data
0026            594   ;--------------------------------------------------------
0000            595            XSEG
0000            596   ;--------------------------------------------------------
0000            597   ; external initialized ram data
0000            598   ;--------------------------------------------------------
0000            599            rseg R_IXSEG
0000            600            rseg R_HOME
0000            601            rseg R_GSINIT
0000            602            rseg R_CSEG
0000            603   ;--------------------------------------------------------
0000            604   ; Reset entry point and interrupt vectors
0000            605   ;--------------------------------------------------------
0000            606            CSEG at 0x0000
0000 020000     607            ljmp    _crt0
002B            608            CSEG at 0x002b
002B 020000     609            ljmp    _Timer2_ISR
002E            610   ;--------------------------------------------------------
002E            611   ; global & static initialisations
002E            612   ;--------------------------------------------------------
0000            613            rseg R_HOME
0000            614            rseg R_GSINIT
0000            615            rseg R_GSINIT
0000            616   ;--------------------------------------------------------
0000            617   ; data variables initialization
0000            618   ;--------------------------------------------------------
0000            619            rseg R_DINIT
0000            620            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            621   ;--------------------------------------------------------
0000            622   ; code
0000            623   ;--------------------------------------------------------
0000            624            rseg R_CSEG
0000            625   ;------------------------------------------------------------
0000            626   ;Allocation info for local variables in function '_c51_external_startup'
0000            627   ;------------------------------------------------------------
0000            628   ;------------------------------------------------------------
0000            629   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:50: char _c51_external_startup (void)
0000            630   ;        -----------------------------------------
0000            631   ;         function _c51_external_startup
0000            632   ;        -----------------------------------------
0000            633   __c51_external_startup:
0000            634            using   0
0000            635   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:53: SFRPAGE = 0x00;
0000 75A700     636            mov     _SFRPAGE,#0x00
0003            637   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:54: WDTCN = 0xDE; //First key
0003 7597DE     638            mov     _WDTCN,#0xDE
0006            639   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:55: WDTCN = 0xAD; //Second key
0006 7597AD     640            mov     _WDTCN,#0xAD
0009            641   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:57: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     642            mov     _VDM0CN,#0x80
000C            643   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:58: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     644            mov     _RSTSRC,#0x06
000F            645   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:65: SFRPAGE = 0x10;
000F 75A710     646            mov     _SFRPAGE,#0x10
0012            647   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:66: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     648            mov     _PFE0CN,#0x20
0015            649   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:67: SFRPAGE = 0x00;
0015 75A700     650            mov     _SFRPAGE,#0x00
0018            651   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:88: CLKSEL = 0x00;
0018 75A900     652            mov     _CLKSEL,#0x00
001B            653   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:89: CLKSEL = 0x00;
001B 75A900     654            mov     _CLKSEL,#0x00
001E            655   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:90: while ((CLKSEL & 0x80) == 0);
001E            656   L002001?:
001E E5A9       657            mov     a,_CLKSEL
0020 30E740     658            jnb     acc.7,L002001?
0023            659   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:91: CLKSEL = 0x03;
0023 75A903     660            mov     _CLKSEL,#0x03
0026            661   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:92: CLKSEL = 0x03;
0026 75A903     662            mov     _CLKSEL,#0x03
0029            663   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:93: while ((CLKSEL & 0x80) == 0);
0029            664   L002004?:
0029 E5A9       665            mov     a,_CLKSEL
002B 30E7C0     666            jnb     acc.7,L002004?
002E            667   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:98: P0MDOUT |= 0x11; // Enable UART0 TX (P0.4) and UART1 TX (P0.0) as push-pull outputs
002E 43A411     668            orl     _P0MDOUT,#0x11
0031            669   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:99: P2MDOUT |= 0x01; // P2.0 in push-pull mode
0031 43A601     670            orl     _P2MDOUT,#0x01
0034            671   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:100: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0034 75E101     672            mov     _XBR0,#0x01
0037            673   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:101: XBR1     = 0X00;
0037 75E200     674            mov     _XBR1,#0x00
003A            675   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:102: XBR2     = 0x41; // Enable crossbar and uart 1
003A 75E341     676            mov     _XBR2,#0x41
003D            677   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:108: SCON0 = 0x10;
003D 759810     678            mov     _SCON0,#0x10
0040            679   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:109: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     680            mov     _TH1,#0xE6
0043            681   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:110: TL1 = TH1;      // Init Timer1
0043 858D8B     682            mov     _TL1,_TH1
0046            683   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:111: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     684            anl     _TMOD,#0x0F
0049            685   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:112: TMOD |=  0x20;                       
0049 438920     686            orl     _TMOD,#0x20
004C            687   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:113: TR1 = 1; // START Timer1
004C D28E       688            setb    _TR1
004E            689   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:114: TI = 1;  // Indicate TX0 ready
004E D299       690            setb    _TI
0050            691   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:118: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
0050 75C800     692            mov     _TMR2CN0,#0x00
0053            693   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:119: CKCON0|=0b_0001_0000;
0053 438E10     694            orl     _CKCON0,#0x10
0056            695   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:120: TMR2RL=(-(SYSCLK/(2*DEFAULT_F))); // Initialize reload value
0056 75CAEE     696            mov     _TMR2RL,#0xEE
0059 75CBF6     697            mov     (_TMR2RL >> 8),#0xF6
005C            698   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:121: TMR2=0xffff;   // Set to reload immediately
005C 75CEFF     699            mov     _TMR2,#0xFF
005F 75CFFF     700            mov     (_TMR2 >> 8),#0xFF
0062            701   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:122: ET2=1;         // Enable Timer2 interrupts
0062 D2AD       702            setb    _ET2
0064            703   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:123: TR2=1;         // Start Timer2
0064 D2CA       704            setb    _TR2
0066            705   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:124: EA=1; // Global interrupt enable
0066 D2AF       706            setb    _EA
0068            707   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:126: return 0;
0068 758200     708            mov     dpl,#0x00
006B 22         709            ret
006C            710   ;------------------------------------------------------------
006C            711   ;Allocation info for local variables in function 'Timer2_ISR'
006C            712   ;------------------------------------------------------------
006C            713   ;------------------------------------------------------------
006C            714   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:129: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
006C            715   ;        -----------------------------------------
006C            716   ;         function Timer2_ISR
006C            717   ;        -----------------------------------------
006C            718   _Timer2_ISR:
006C            719   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:131: TF2H = 0; // Clear Timer2 interrupt flag
006C C2CF       720            clr     _TF2H
006E            721   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:132: BUZZER_OUT=!BUZZER_OUT; // complements the value of BUZZER_OUT to generate a square wave
006E B282       722            cpl     _P0_2
0070 32         723            reti
0071            724   ;        eliminated unneeded push/pop psw
0071            725   ;        eliminated unneeded push/pop dpl
0071            726   ;        eliminated unneeded push/pop dph
0071            727   ;        eliminated unneeded push/pop b
0071            728   ;        eliminated unneeded push/pop acc
0071            729   ;------------------------------------------------------------
0071            730   ;Allocation info for local variables in function 'InitADC'
0071            731   ;------------------------------------------------------------
0071            732   ;------------------------------------------------------------
0071            733   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:136: void InitADC (void)
0071            734   ;        -----------------------------------------
0071            735   ;         function InitADC
0071            736   ;        -----------------------------------------
0071            737   _InitADC:
0071            738   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:138: SFRPAGE = 0x00;
0071 75A700     739            mov     _SFRPAGE,#0x00
0074            740   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:139: ADEN=0; // Disable ADC
0074 C2EF       741            clr     _ADEN
0076            742   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:144: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0076 75B280     743            mov     _ADC0CN1,#0x80
0079            744   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:148: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0079 75BC20     745            mov     _ADC0CF0,#0x20
007C            746   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:152: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
007C 75B91E     747            mov     _ADC0CF1,#0x1E
007F            748   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:161: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
007F 75E800     749            mov     _ADC0CN0,#0x00
0082            750   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:166: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0082 75DF3F     751            mov     _ADC0CF2,#0x3F
0085            752   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:170: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0085 75B300     753            mov     _ADC0CN2,#0x00
0088            754   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:172: ADEN=1; // Enable ADC
0088 D2EF       755            setb    _ADEN
008A 22         756            ret
008B            757   ;------------------------------------------------------------
008B            758   ;Allocation info for local variables in function 'Timer3us'
008B            759   ;------------------------------------------------------------
008B            760   ;us                        Allocated to registers r2 
008B            761   ;i                         Allocated to registers r3 
008B            762   ;------------------------------------------------------------
008B            763   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:176: void Timer3us(unsigned char us)
008B            764   ;        -----------------------------------------
008B            765   ;         function Timer3us
008B            766   ;        -----------------------------------------
008B            767   _Timer3us:
008B AA82       768            mov     r2,dpl
008D            769   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:181: CKCON0|=0b_0100_0000;
008D 438E40     770            orl     _CKCON0,#0x40
0090            771   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:183: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0090 7592B8     772            mov     _TMR3RL,#0xB8
0093 7593FF     773            mov     (_TMR3RL >> 8),#0xFF
0096            774   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:184: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0096 859294     775            mov     _TMR3,_TMR3RL
0099 859395     776            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
009C            777   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:186: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
009C 759104     778            mov     _TMR3CN0,#0x04
009F            779   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:187: for (i = 0; i < us; i++)       // Count <us> overflows
009F 7B00       780            mov     r3,#0x00
00A1            781   L005004?:
00A1 C3         782            clr     c
00A2 EB         783            mov     a,r3
00A3 9A         784            subb    a,r2
00A4 5000       785            jnc     L005007?
00A6            786   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:189: while (!(TMR3CN0 & 0x80));  // Wait for overflow
00A6            787   L005001?:
00A6 E591       788            mov     a,_TMR3CN0
00A8 30E7C0     789            jnb     acc.7,L005001?
00AB            790   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:190: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
00AB 53917F     791            anl     _TMR3CN0,#0x7F
00AE            792   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:187: for (i = 0; i < us; i++)       // Count <us> overflows
00AE 0B         793            inc     r3
00AF 8000       794            sjmp    L005004?
00B1            795   L005007?:
00B1            796   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:192: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
00B1 759100     797            mov     _TMR3CN0,#0x00
00B4 22         798            ret
00B5            799   ;------------------------------------------------------------
00B5            800   ;Allocation info for local variables in function 'waitms'
00B5            801   ;------------------------------------------------------------
00B5            802   ;ms                        Allocated to registers r2 r3 
00B5            803   ;j                         Allocated to registers r4 r5 
00B5            804   ;k                         Allocated to registers r6 
00B5            805   ;------------------------------------------------------------
00B5            806   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:195: void waitms (unsigned int ms)
00B5            807   ;        -----------------------------------------
00B5            808   ;         function waitms
00B5            809   ;        -----------------------------------------
00B5            810   _waitms:
00B5 AA82       811            mov     r2,dpl
00B7 AB83       812            mov     r3,dph
00B9            813   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:199: for(j=0; j<ms; j++)
00B9 7C00       814            mov     r4,#0x00
00BB 7D00       815            mov     r5,#0x00
00BD            816   L006005?:
00BD C3         817            clr     c
00BE EC         818            mov     a,r4
00BF 9A         819            subb    a,r2
00C0 ED         820            mov     a,r5
00C1 9B         821            subb    a,r3
00C2 5000       822            jnc     L006009?
00C4            823   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:200: for (k=0; k<4; k++) Timer3us(250);
00C4 7E00       824            mov     r6,#0x00
00C6            825   L006001?:
00C6 BE0400     826            cjne    r6,#0x04,L006018?
00C9            827   L006018?:
00C9 5000       828            jnc     L006007?
00CB 7582FA     829            mov     dpl,#0xFA
00CE C002       830            push    ar2
00D0 C003       831            push    ar3
00D2 C004       832            push    ar4
00D4 C005       833            push    ar5
00D6 C006       834            push    ar6
00D8 120000     835            lcall   _Timer3us
00DB D006       836            pop     ar6
00DD D005       837            pop     ar5
00DF D004       838            pop     ar4
00E1 D003       839            pop     ar3
00E3 D002       840            pop     ar2
00E5 0E         841            inc     r6
00E6 8000       842            sjmp    L006001?
00E8            843   L006007?:
00E8            844   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:199: for(j=0; j<ms; j++)
00E8 0C         845            inc     r4
00E9 BC0040     846            cjne    r4,#0x00,L006005?
00EC 0D         847            inc     r5
00ED 8000       848            sjmp    L006005?
00EF            849   L006009?:
00EF 22         850            ret
00F0            851   ;------------------------------------------------------------
00F0            852   ;Allocation info for local variables in function 'InitPinADC'
00F0            853   ;------------------------------------------------------------
00F0            854   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00F0            855   ;portno                    Allocated to registers r2 
00F0            856   ;mask                      Allocated to registers r3 
00F0            857   ;------------------------------------------------------------
00F0            858   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:205: void InitPinADC (unsigned char portno, unsigned char pinno)
00F0            859   ;        -----------------------------------------
00F0            860   ;         function InitPinADC
00F0            861   ;        -----------------------------------------
00F0            862   _InitPinADC:
00F0 AA82       863            mov     r2,dpl
00F2            864   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:209: mask=1<<pinno;
00F2 8550F0     865            mov     b,_InitPinADC_PARM_2
00F5 05F0       866            inc     b
00F7 7401       867            mov     a,#0x01
00F9 8000       868            sjmp    L007013?
00FB            869   L007011?:
00FB 25E0       870            add     a,acc
00FD            871   L007013?:
00FD D5F000     872            djnz    b,L007011?
0100 FB         873            mov     r3,a
0101            874   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:211: SFRPAGE = 0x20;
0101 75A720     875            mov     _SFRPAGE,#0x20
0104            876   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:212: switch (portno)
0104 BA0040     877            cjne    r2,#0x00,L007014?
0107 8000       878            sjmp    L007001?
0109            879   L007014?:
0109 BA01C0     880            cjne    r2,#0x01,L007015?
010C 8000       881            sjmp    L007002?
010E            882   L007015?:
010E            883   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:214: case 0:
010E BA0240     884            cjne    r2,#0x02,L007005?
0111 8000       885            sjmp    L007003?
0113            886   L007001?:
0113            887   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:215: P0MDIN &= (~mask); // Set pin as analog input
0113 EB         888            mov     a,r3
0114 F4         889            cpl     a
0115 FA         890            mov     r2,a
0116 52F1       891            anl     _P0MDIN,a
0118            892   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:216: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0118 EB         893            mov     a,r3
0119 42D4       894            orl     _P0SKIP,a
011B            895   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:217: break;
011B            896   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:218: case 1:
011B 8000       897            sjmp    L007005?
011D            898   L007002?:
011D            899   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:219: P1MDIN &= (~mask); // Set pin as analog input
011D EB         900            mov     a,r3
011E F4         901            cpl     a
011F FA         902            mov     r2,a
0120 52F2       903            anl     _P1MDIN,a
0122            904   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:220: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0122 EB         905            mov     a,r3
0123 42D5       906            orl     _P1SKIP,a
0125            907   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:221: break;
0125            908   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:222: case 2:
0125 8000       909            sjmp    L007005?
0127            910   L007003?:
0127            911   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:223: P2MDIN &= (~mask); // Set pin as analog input
0127 EB         912            mov     a,r3
0128 F4         913            cpl     a
0129 FA         914            mov     r2,a
012A 52F3       915            anl     _P2MDIN,a
012C            916   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:224: P2SKIP |= mask; // Skip Crossbar decoding for this pin
012C EB         917            mov     a,r3
012D 42CC       918            orl     _P2SKIP,a
012F            919   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:228: }
012F            920   L007005?:
012F            921   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:229: SFRPAGE = 0x00;
012F 75A700     922            mov     _SFRPAGE,#0x00
0132 22         923            ret
0133            924   ;------------------------------------------------------------
0133            925   ;Allocation info for local variables in function 'TIMER0_Init'
0133            926   ;------------------------------------------------------------
0133            927   ;------------------------------------------------------------
0133            928   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:232: void TIMER0_Init(void)
0133            929   ;        -----------------------------------------
0133            930   ;         function TIMER0_Init
0133            931   ;        -----------------------------------------
0133            932   _TIMER0_Init:
0133            933   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:234: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0133 5389F0     934            anl     _TMOD,#0xF0
0136            935   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:235: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0136 438901     936            orl     _TMOD,#0x01
0139            937   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:236: TR0=0; // Stop Timer/Counter 0
0139 C28C       938            clr     _TR0
013B 22         939            ret
013C            940   ;------------------------------------------------------------
013C            941   ;Allocation info for local variables in function 'ADC_at_Pin'
013C            942   ;------------------------------------------------------------
013C            943   ;pin                       Allocated to registers 
013C            944   ;------------------------------------------------------------
013C            945   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:239: unsigned int ADC_at_Pin(unsigned char pin)
013C            946   ;        -----------------------------------------
013C            947   ;         function ADC_at_Pin
013C            948   ;        -----------------------------------------
013C            949   _ADC_at_Pin:
013C 8582BB     950            mov     _ADC0MX,dpl
013F            951   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:242: ADINT = 0;
013F C2ED       952            clr     _ADINT
0141            953   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:243: ADBUSY = 1;     // Convert voltage at the pin
0141 D2EC       954            setb    _ADBUSY
0143            955   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:244: while (!ADINT); // Wait for conversion to complete
0143            956   L009001?:
0143 30EDC0     957            jnb     _ADINT,L009001?
0146            958   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:245: return (ADC0);
0146 85BD82     959            mov     dpl,_ADC0
0149 85BE83     960            mov     dph,(_ADC0 >> 8)
014C 22         961            ret
014D            962   ;------------------------------------------------------------
014D            963   ;Allocation info for local variables in function 'Get_ADC'
014D            964   ;------------------------------------------------------------
014D            965   ;------------------------------------------------------------
014D            966   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:248: unsigned int Get_ADC (void)
014D            967   ;        -----------------------------------------
014D            968   ;         function Get_ADC
014D            969   ;        -----------------------------------------
014D            970   _Get_ADC:
014D            971   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:250: ADINT = 0;
014D C2ED       972            clr     _ADINT
014F            973   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:251: ADBUSY = 1;
014F D2EC       974            setb    _ADBUSY
0151            975   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:252: while (!ADINT); // Wait for conversion to complete
0151            976   L010001?:
0151 30ED00     977            jnb     _ADINT,L010001?
0154            978   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:253: return (ADC0);
0154 85BD82     979            mov     dpl,_ADC0
0157 85BE83     980            mov     dph,(_ADC0 >> 8)
015A 22         981            ret
015B            982   ;------------------------------------------------------------
015B            983   ;Allocation info for local variables in function 'Volts_at_Pin'
015B            984   ;------------------------------------------------------------
015B            985   ;pin                       Allocated to registers r2 
015B            986   ;------------------------------------------------------------
015B            987   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:257: float Volts_at_Pin(unsigned char pin)
015B            988   ;        -----------------------------------------
015B            989   ;         function Volts_at_Pin
015B            990   ;        -----------------------------------------
015B            991   _Volts_at_Pin:
015B            992   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:259: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
015B 120000     993            lcall   _ADC_at_Pin
015E 120000     994            lcall   ___uint2fs
0161 AA82       995            mov     r2,dpl
0163 AB83       996            mov     r3,dph
0165 ACF0       997            mov     r4,b
0167 FD         998            mov     r5,a
0168 C002       999            push    ar2
016A C003      1000            push    ar3
016C C004      1001            push    ar4
016E C005      1002            push    ar5
0170 906C8B    1003            mov     dptr,#0x6C8B
0173 75F053    1004            mov     b,#0x53
0176 7440      1005            mov     a,#0x40
0178 120000    1006            lcall   ___fsmul
017B AA82      1007            mov     r2,dpl
017D AB83      1008            mov     r3,dph
017F ACF0      1009            mov     r4,b
0181 FD        1010            mov     r5,a
0182 E581      1011            mov     a,sp
0184 24FC      1012            add     a,#0xfc
0186 F581      1013            mov     sp,a
0188 E4        1014            clr     a
0189 C0E0      1015            push    acc
018B 74FC      1016            mov     a,#0xFC
018D C0E0      1017            push    acc
018F 747F      1018            mov     a,#0x7F
0191 C0E0      1019            push    acc
0193 7446      1020            mov     a,#0x46
0195 C0E0      1021            push    acc
0197 8A82      1022            mov     dpl,r2
0199 8B83      1023            mov     dph,r3
019B 8CF0      1024            mov     b,r4
019D ED        1025            mov     a,r5
019E 120000    1026            lcall   ___fsdiv
01A1 AA82      1027            mov     r2,dpl
01A3 AB83      1028            mov     r3,dph
01A5 ACF0      1029            mov     r4,b
01A7 FD        1030            mov     r5,a
01A8 E581      1031            mov     a,sp
01AA 24FC      1032            add     a,#0xfc
01AC F581      1033            mov     sp,a
01AE 8A82      1034            mov     dpl,r2
01B0 8B83      1035            mov     dph,r3
01B2 8CF0      1036            mov     b,r4
01B4 ED        1037            mov     a,r5
01B5 22        1038            ret
01B6           1039   ;------------------------------------------------------------
01B6           1040   ;Allocation info for local variables in function 'LCD_pulse'
01B6           1041   ;------------------------------------------------------------
01B6           1042   ;------------------------------------------------------------
01B6           1043   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:263: void LCD_pulse (void)
01B6           1044   ;        -----------------------------------------
01B6           1045   ;         function LCD_pulse
01B6           1046   ;        -----------------------------------------
01B6           1047   _LCD_pulse:
01B6           1048   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:265: LCD_E=1;
01B6 D296      1049            setb    _P1_6
01B8           1050   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:266: Timer3us(40);
01B8 758228    1051            mov     dpl,#0x28
01BB 120000    1052            lcall   _Timer3us
01BE           1053   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:267: LCD_E=0;
01BE C296      1054            clr     _P1_6
01C0 22        1055            ret
01C1           1056   ;------------------------------------------------------------
01C1           1057   ;Allocation info for local variables in function 'LCD_byte'
01C1           1058   ;------------------------------------------------------------
01C1           1059   ;x                         Allocated to registers r2 
01C1           1060   ;------------------------------------------------------------
01C1           1061   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:270: void LCD_byte (unsigned char x)
01C1           1062   ;        -----------------------------------------
01C1           1063   ;         function LCD_byte
01C1           1064   ;        -----------------------------------------
01C1           1065   _LCD_byte:
01C1 AA82      1066            mov     r2,dpl
01C3           1067   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:273: ACC=x; //Send high nible
01C3 8AE0      1068            mov     _ACC,r2
01C5           1069   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:274: LCD_D7=ACC_7;
01C5 A2E7      1070            mov     c,_ACC_7
01C7 9290      1071            mov     _P1_0,c
01C9           1072   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:275: LCD_D6=ACC_6;
01C9 A2E6      1073            mov     c,_ACC_6
01CB 9291      1074            mov     _P1_1,c
01CD           1075   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:276: LCD_D5=ACC_5;
01CD A2E5      1076            mov     c,_ACC_5
01CF 9292      1077            mov     _P1_2,c
01D1           1078   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:277: LCD_D4=ACC_4;
01D1 A2E4      1079            mov     c,_ACC_4
01D3 9293      1080            mov     _P1_3,c
01D5           1081   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:278: LCD_pulse();
01D5 C002      1082            push    ar2
01D7 120000    1083            lcall   _LCD_pulse
01DA           1084   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:279: Timer3us(40);
01DA 758228    1085            mov     dpl,#0x28
01DD 120000    1086            lcall   _Timer3us
01E0 D002      1087            pop     ar2
01E2           1088   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:280: ACC=x; //Send low nible
01E2 8AE0      1089            mov     _ACC,r2
01E4           1090   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:281: LCD_D7=ACC_3;
01E4 A2E3      1091            mov     c,_ACC_3
01E6 9290      1092            mov     _P1_0,c
01E8           1093   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:282: LCD_D6=ACC_2;
01E8 A2E2      1094            mov     c,_ACC_2
01EA 9291      1095            mov     _P1_1,c
01EC           1096   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:283: LCD_D5=ACC_1;
01EC A2E1      1097            mov     c,_ACC_1
01EE 9292      1098            mov     _P1_2,c
01F0           1099   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:284: LCD_D4=ACC_0;
01F0 A2E0      1100            mov     c,_ACC_0
01F2 9293      1101            mov     _P1_3,c
01F4           1102   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:285: LCD_pulse();
01F4 020000    1103            ljmp    _LCD_pulse
01F7           1104   ;------------------------------------------------------------
01F7           1105   ;Allocation info for local variables in function 'WriteData'
01F7           1106   ;------------------------------------------------------------
01F7           1107   ;x                         Allocated to registers r2 
01F7           1108   ;------------------------------------------------------------
01F7           1109   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:289: void WriteData (unsigned char x)
01F7           1110   ;        -----------------------------------------
01F7           1111   ;         function WriteData
01F7           1112   ;        -----------------------------------------
01F7           1113   _WriteData:
01F7 AA82      1114            mov     r2,dpl
01F9           1115   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:291: LCD_RS=1;
01F9 D297      1116            setb    _P1_7
01FB           1117   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:292: LCD_byte(x);
01FB 8A82      1118            mov     dpl,r2
01FD 120000    1119            lcall   _LCD_byte
0200           1120   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:293: waitms(2);
0200 900002    1121            mov     dptr,#0x0002
0203 020000    1122            ljmp    _waitms
0206           1123   ;------------------------------------------------------------
0206           1124   ;Allocation info for local variables in function 'WriteCommand'
0206           1125   ;------------------------------------------------------------
0206           1126   ;x                         Allocated to registers r2 
0206           1127   ;------------------------------------------------------------
0206           1128   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:296: void WriteCommand (unsigned char x)
0206           1129   ;        -----------------------------------------
0206           1130   ;         function WriteCommand
0206           1131   ;        -----------------------------------------
0206           1132   _WriteCommand:
0206 AA82      1133            mov     r2,dpl
0208           1134   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:298: LCD_RS=0;
0208 C297      1135            clr     _P1_7
020A           1136   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:299: LCD_byte(x);
020A 8A82      1137            mov     dpl,r2
020C 120000    1138            lcall   _LCD_byte
020F           1139   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:300: waitms(5);
020F 900005    1140            mov     dptr,#0x0005
0212 020000    1141            ljmp    _waitms
0215           1142   ;------------------------------------------------------------
0215           1143   ;Allocation info for local variables in function 'LCD_4BIT'
0215           1144   ;------------------------------------------------------------
0215           1145   ;------------------------------------------------------------
0215           1146   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:303: void LCD_4BIT (void)
0215           1147   ;        -----------------------------------------
0215           1148   ;         function LCD_4BIT
0215           1149   ;        -----------------------------------------
0215           1150   _LCD_4BIT:
0215           1151   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:305: LCD_E=0; // Resting state of LCD's enable is zero
0215 C296      1152            clr     _P1_6
0217           1153   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:307: waitms(20);
0217 900014    1154            mov     dptr,#0x0014
021A 120000    1155            lcall   _waitms
021D           1156   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:309: WriteCommand(0x33);
021D 758233    1157            mov     dpl,#0x33
0220 120000    1158            lcall   _WriteCommand
0223           1159   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:310: WriteCommand(0x33);
0223 758233    1160            mov     dpl,#0x33
0226 120000    1161            lcall   _WriteCommand
0229           1162   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:311: WriteCommand(0x32); // Change to 4-bit mode
0229 758232    1163            mov     dpl,#0x32
022C 120000    1164            lcall   _WriteCommand
022F           1165   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:313: WriteCommand(0x28);
022F 758228    1166            mov     dpl,#0x28
0232 120000    1167            lcall   _WriteCommand
0235           1168   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:314: WriteCommand(0x0c);
0235 75820C    1169            mov     dpl,#0x0C
0238 120000    1170            lcall   _WriteCommand
023B           1171   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:315: WriteCommand(0x01); // Clear screen command (takes some time)
023B 758201    1172            mov     dpl,#0x01
023E 120000    1173            lcall   _WriteCommand
0241           1174   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:316: waitms(20); // Wait for clear screen command to finsih.
0241 900014    1175            mov     dptr,#0x0014
0244 020000    1176            ljmp    _waitms
0247           1177   ;------------------------------------------------------------
0247           1178   ;Allocation info for local variables in function 'LCDprint'
0247           1179   ;------------------------------------------------------------
0247           1180   ;line                      Allocated with name '_LCDprint_PARM_2'
0247           1181   ;string                    Allocated to registers r2 r3 r4 
0247           1182   ;j                         Allocated to registers r5 r6 
0247           1183   ;------------------------------------------------------------
0247           1184   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:319: void LCDprint(char * string, unsigned char line, bit clear)
0247           1185   ;        -----------------------------------------
0247           1186   ;         function LCDprint
0247           1187   ;        -----------------------------------------
0247           1188   _LCDprint:
0247 AA82      1189            mov     r2,dpl
0249 AB83      1190            mov     r3,dph
024B ACF0      1191            mov     r4,b
024D           1192   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:322: WriteCommand(line==2?0xc0:0x80);
024D 7402      1193            mov     a,#0x02
024F B57040    1194            cjne    a,_LCDprint_PARM_2,L017013?
0252 7DC0      1195            mov     r5,#0xC0
0254 8000      1196            sjmp    L017014?
0256           1197   L017013?:
0256 7D80      1198            mov     r5,#0x80
0258           1199   L017014?:
0258 8D82      1200            mov     dpl,r5
025A C002      1201            push    ar2
025C C003      1202            push    ar3
025E C004      1203            push    ar4
0260 120000    1204            lcall   _WriteCommand
0263           1205   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:323: waitms(5);
0263 900005    1206            mov     dptr,#0x0005
0266 120000    1207            lcall   _waitms
0269 D004      1208            pop     ar4
026B D003      1209            pop     ar3
026D D002      1210            pop     ar2
026F           1211   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:324: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
026F 7D00      1212            mov     r5,#0x00
0271 7E00      1213            mov     r6,#0x00
0273           1214   L017003?:
0273 ED        1215            mov     a,r5
0274 2A        1216            add     a,r2
0275 FF        1217            mov     r7,a
0276 EE        1218            mov     a,r6
0277 3B        1219            addc    a,r3
0278 F8        1220            mov     r0,a
0279 8C01      1221            mov     ar1,r4
027B 8F82      1222            mov     dpl,r7
027D 8883      1223            mov     dph,r0
027F 89F0      1224            mov     b,r1
0281 120000    1225            lcall   __gptrget
0284 FF        1226            mov     r7,a
0285 6000      1227            jz      L017006?
0287 8F82      1228            mov     dpl,r7
0289 C002      1229            push    ar2
028B C003      1230            push    ar3
028D C004      1231            push    ar4
028F C005      1232            push    ar5
0291 C006      1233            push    ar6
0293 120000    1234            lcall   _WriteData
0296 D006      1235            pop     ar6
0298 D005      1236            pop     ar5
029A D004      1237            pop     ar4
029C D003      1238            pop     ar3
029E D002      1239            pop     ar2
02A0 0D        1240            inc     r5
02A1 BD00C0    1241            cjne    r5,#0x00,L017003?
02A4 0E        1242            inc     r6
02A5 8000      1243            sjmp    L017003?
02A7           1244   L017006?:
02A7           1245   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:325: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest ofthe line
02A7 304080    1246            jnb     _LCDprint_PARM_3,L017011?
02AA 8D02      1247            mov     ar2,r5
02AC 8E03      1248            mov     ar3,r6
02AE           1249   L017007?:
02AE C3        1250            clr     c
02AF EA        1251            mov     a,r2
02B0 9410      1252            subb    a,#0x10
02B2 EB        1253            mov     a,r3
02B3 6480      1254            xrl     a,#0x80
02B5 9480      1255            subb    a,#0x80
02B7 5000      1256            jnc     L017011?
02B9 758220    1257            mov     dpl,#0x20
02BC C002      1258            push    ar2
02BE C003      1259            push    ar3
02C0 120000    1260            lcall   _WriteData
02C3 D003      1261            pop     ar3
02C5 D002      1262            pop     ar2
02C7 0A        1263            inc     r2
02C8 BA00C0    1264            cjne    r2,#0x00,L017007?
02CB 0B        1265            inc     r3
02CC 8000      1266            sjmp    L017007?
02CE           1267   L017011?:
02CE 22        1268            ret
02CF           1269   ;------------------------------------------------------------
02CF           1270   ;Allocation info for local variables in function 'map2'
02CF           1271   ;------------------------------------------------------------
02CF           1272   ;in_min                    Allocated with name '_map2_PARM_2'
02CF           1273   ;in_max                    Allocated with name '_map2_PARM_3'
02CF           1274   ;out_min                   Allocated with name '_map2_PARM_4'
02CF           1275   ;out_max                   Allocated with name '_map2_PARM_5'
02CF           1276   ;x                         Allocated to registers r2 r3 r4 r5 
02CF           1277   ;value                     Allocated to registers r2 r3 r4 r5 
02CF           1278   ;------------------------------------------------------------
02CF           1279   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:328: float map2(float x, float in_min, float in_max, float out_min, float out_max)
02CF           1280   ;        -----------------------------------------
02CF           1281   ;         function map2
02CF           1282   ;        -----------------------------------------
02CF           1283   _map2:
02CF AA82      1284            mov     r2,dpl
02D1 AB83      1285            mov     r3,dph
02D3 ACF0      1286            mov     r4,b
02D5 FD        1287            mov     r5,a
02D6           1288   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:330: float value =  (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
02D6 C020      1289            push    _map2_PARM_2
02D8 C021      1290            push    (_map2_PARM_2 + 1)
02DA C022      1291            push    (_map2_PARM_2 + 2)
02DC C023      1292            push    (_map2_PARM_2 + 3)
02DE 8A82      1293            mov     dpl,r2
02E0 8B83      1294            mov     dph,r3
02E2 8CF0      1295            mov     b,r4
02E4 ED        1296            mov     a,r5
02E5 120000    1297            lcall   ___fssub
02E8 AA82      1298            mov     r2,dpl
02EA AB83      1299            mov     r3,dph
02EC ACF0      1300            mov     r4,b
02EE FD        1301            mov     r5,a
02EF E581      1302            mov     a,sp
02F1 24FC      1303            add     a,#0xfc
02F3 F581      1304            mov     sp,a
02F5 C002      1305            push    ar2
02F7 C003      1306            push    ar3
02F9 C004      1307            push    ar4
02FB C005      1308            push    ar5
02FD C0A0      1309            push    _map2_PARM_4
02FF C0A1      1310            push    (_map2_PARM_4 + 1)
0301 C0A2      1311            push    (_map2_PARM_4 + 2)
0303 C0A3      1312            push    (_map2_PARM_4 + 3)
0305 856082    1313            mov     dpl,_map2_PARM_5
0308 856183    1314            mov     dph,(_map2_PARM_5 + 1)
030B 8562F0    1315            mov     b,(_map2_PARM_5 + 2)
030E E563      1316            mov     a,(_map2_PARM_5 + 3)
0310 120000    1317            lcall   ___fssub
0313 AE82      1318            mov     r6,dpl
0315 AF83      1319            mov     r7,dph
0317 A8F0      1320            mov     r0,b
0319 F9        1321            mov     r1,a
031A E581      1322            mov     a,sp
031C 24FC      1323            add     a,#0xfc
031E F581      1324            mov     sp,a
0320 D005      1325            pop     ar5
0322 D004      1326            pop     ar4
0324 D003      1327            pop     ar3
0326 D002      1328            pop     ar2
0328 C006      1329            push    ar6
032A C007      1330            push    ar7
032C C000      1331            push    ar0
032E C001      1332            push    ar1
0330 8A82      1333            mov     dpl,r2
0332 8B83      1334            mov     dph,r3
0334 8CF0      1335            mov     b,r4
0336 ED        1336            mov     a,r5
0337 120000    1337            lcall   ___fsmul
033A AA82      1338            mov     r2,dpl
033C AB83      1339            mov     r3,dph
033E ACF0      1340            mov     r4,b
0340 FD        1341            mov     r5,a
0341 E581      1342            mov     a,sp
0343 24FC      1343            add     a,#0xfc
0345 F581      1344            mov     sp,a
0347 C002      1345            push    ar2
0349 C003      1346            push    ar3
034B C004      1347            push    ar4
034D C005      1348            push    ar5
034F C020      1349            push    _map2_PARM_2
0351 C021      1350            push    (_map2_PARM_2 + 1)
0353 C022      1351            push    (_map2_PARM_2 + 2)
0355 C023      1352            push    (_map2_PARM_2 + 3)
0357 85E082    1353            mov     dpl,_map2_PARM_3
035A 85E183    1354            mov     dph,(_map2_PARM_3 + 1)
035D 85E2F0    1355            mov     b,(_map2_PARM_3 + 2)
0360 E5E3      1356            mov     a,(_map2_PARM_3 + 3)
0362 120000    1357            lcall   ___fssub
0365 AE82      1358            mov     r6,dpl
0367 AF83      1359            mov     r7,dph
0369 A8F0      1360            mov     r0,b
036B F9        1361            mov     r1,a
036C E581      1362            mov     a,sp
036E 24FC      1363            add     a,#0xfc
0370 F581      1364            mov     sp,a
0372 D005      1365            pop     ar5
0374 D004      1366            pop     ar4
0376 D003      1367            pop     ar3
0378 D002      1368            pop     ar2
037A C006      1369            push    ar6
037C C007      1370            push    ar7
037E C000      1371            push    ar0
0380 C001      1372            push    ar1
0382 8A82      1373            mov     dpl,r2
0384 8B83      1374            mov     dph,r3
0386 8CF0      1375            mov     b,r4
0388 ED        1376            mov     a,r5
0389 120000    1377            lcall   ___fsdiv
038C AA82      1378            mov     r2,dpl
038E AB83      1379            mov     r3,dph
0390 ACF0      1380            mov     r4,b
0392 FD        1381            mov     r5,a
0393 E581      1382            mov     a,sp
0395 24FC      1383            add     a,#0xfc
0397 F581      1384            mov     sp,a
0399 C0A0      1385            push    _map2_PARM_4
039B C0A1      1386            push    (_map2_PARM_4 + 1)
039D C0A2      1387            push    (_map2_PARM_4 + 2)
039F C0A3      1388            push    (_map2_PARM_4 + 3)
03A1 8A82      1389            mov     dpl,r2
03A3 8B83      1390            mov     dph,r3
03A5 8CF0      1391            mov     b,r4
03A7 ED        1392            mov     a,r5
03A8 120000    1393            lcall   ___fsadd
03AB AA82      1394            mov     r2,dpl
03AD AB83      1395            mov     r3,dph
03AF ACF0      1396            mov     r4,b
03B1 FD        1397            mov     r5,a
03B2 E581      1398            mov     a,sp
03B4 24FC      1399            add     a,#0xfc
03B6 F581      1400            mov     sp,a
03B8           1401   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:331: return value;
03B8 8A82      1402            mov     dpl,r2
03BA 8B83      1403            mov     dph,r3
03BC 8CF0      1404            mov     b,r4
03BE ED        1405            mov     a,r5
03BF 22        1406            ret
03C0           1407   ;------------------------------------------------------------
03C0           1408   ;Allocation info for local variables in function 'GetPosition2'
03C0           1409   ;------------------------------------------------------------
03C0           1410   ;pos                       Allocated with name '_GetPosition2_PARM_2'
03C0           1411   ;mid                       Allocated with name '_GetPosition2_PARM_3'
03C0           1412   ;volts                     Allocated with name '_GetPosition2_volts_1_119'
03C0           1413   ;mid_x                     Allocated with name '_GetPosition2_mid_x_1_120'
03C0           1414   ;mid_y                     Allocated with name '_GetPosition2_mid_y_1_120'
03C0           1415   ;vx                        Allocated with name '_GetPosition2_vx_1_120'
03C0           1416   ;vy                        Allocated with name '_GetPosition2_vy_1_120'
03C0           1417   ;max                       Allocated to registers 
03C0           1418   ;min                       Allocated to registers 
03C0           1419   ;------------------------------------------------------------
03C0           1420   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:334: void GetPosition2 (float volts[2], float pos[2], float mid[2]) {
03C0           1421   ;        -----------------------------------------
03C0           1422   ;         function GetPosition2
03C0           1423   ;        -----------------------------------------
03C0           1424   _GetPosition2:
03C0 8582C0    1425            mov     _GetPosition2_volts_1_119,dpl
03C3 8583C1    1426            mov     (_GetPosition2_volts_1_119 + 1),dph
03C6 85F0C2    1427            mov     (_GetPosition2_volts_1_119 + 2),b
03C9           1428   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:336: float mid_x = mid[0];
03C9 ADD0      1429            mov     r5,_GetPosition2_PARM_3
03CB AED1      1430            mov     r6,(_GetPosition2_PARM_3 + 1)
03CD AFD2      1431            mov     r7,(_GetPosition2_PARM_3 + 2)
03CF 8D82      1432            mov     dpl,r5
03D1 8E83      1433            mov     dph,r6
03D3 8FF0      1434            mov     b,r7
03D5 120000    1435            lcall   __gptrget
03D8 F510      1436            mov     _GetPosition2_mid_x_1_120,a
03DA A3        1437            inc     dptr
03DB 120000    1438            lcall   __gptrget
03DE F511      1439            mov     (_GetPosition2_mid_x_1_120 + 1),a
03E0 A3        1440            inc     dptr
03E1 120000    1441            lcall   __gptrget
03E4 F512      1442            mov     (_GetPosition2_mid_x_1_120 + 2),a
03E6 A3        1443            inc     dptr
03E7 120000    1444            lcall   __gptrget
03EA F513      1445            mov     (_GetPosition2_mid_x_1_120 + 3),a
03EC           1446   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:337: float mid_y = mid[1];
03EC 7404      1447            mov     a,#0x04
03EE 2D        1448            add     a,r5
03EF FD        1449            mov     r5,a
03F0 E4        1450            clr     a
03F1 3E        1451            addc    a,r6
03F2 FE        1452            mov     r6,a
03F3 8D82      1453            mov     dpl,r5
03F5 8E83      1454            mov     dph,r6
03F7 8FF0      1455            mov     b,r7
03F9 120000    1456            lcall   __gptrget
03FC F560      1457            mov     _GetPosition2_mid_y_1_120,a
03FE A3        1458            inc     dptr
03FF 120000    1459            lcall   __gptrget
0402 F561      1460            mov     (_GetPosition2_mid_y_1_120 + 1),a
0404 A3        1461            inc     dptr
0405 120000    1462            lcall   __gptrget
0408 F562      1463            mov     (_GetPosition2_mid_y_1_120 + 2),a
040A A3        1464            inc     dptr
040B 120000    1465            lcall   __gptrget
040E F563      1466            mov     (_GetPosition2_mid_y_1_120 + 3),a
0410           1467   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:339: float vx = volts[0];
0410 85C082    1468            mov     dpl,_GetPosition2_volts_1_119
0413 85C183    1469            mov     dph,(_GetPosition2_volts_1_119 + 1)
0416 85C2F0    1470            mov     b,(_GetPosition2_volts_1_119 + 2)
0419 120000    1471            lcall   __gptrget
041C F5B0      1472            mov     _GetPosition2_vx_1_120,a
041E A3        1473            inc     dptr
041F 120000    1474            lcall   __gptrget
0422 F5B1      1475            mov     (_GetPosition2_vx_1_120 + 1),a
0424 A3        1476            inc     dptr
0425 120000    1477            lcall   __gptrget
0428 F5B2      1478            mov     (_GetPosition2_vx_1_120 + 2),a
042A A3        1479            inc     dptr
042B 120000    1480            lcall   __gptrget
042E F5B3      1481            mov     (_GetPosition2_vx_1_120 + 3),a
0430           1482   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:340: float vy = volts[1];
0430 7404      1483            mov     a,#0x04
0432 25C0      1484            add     a,_GetPosition2_volts_1_119
0434 FC        1485            mov     r4,a
0435 E4        1486            clr     a
0436 35C1      1487            addc    a,(_GetPosition2_volts_1_119 + 1)
0438 FD        1488            mov     r5,a
0439 AEC2      1489            mov     r6,(_GetPosition2_volts_1_119 + 2)
043B 8C82      1490            mov     dpl,r4
043D 8D83      1491            mov     dph,r5
043F 8EF0      1492            mov     b,r6
0441 120000    1493            lcall   __gptrget
0444 F500      1494            mov     _GetPosition2_vy_1_120,a
0446 A3        1495            inc     dptr
0447 120000    1496            lcall   __gptrget
044A F501      1497            mov     (_GetPosition2_vy_1_120 + 1),a
044C A3        1498            inc     dptr
044D 120000    1499            lcall   __gptrget
0450 F502      1500            mov     (_GetPosition2_vy_1_120 + 2),a
0452 A3        1501            inc     dptr
0453 120000    1502            lcall   __gptrget
0456 F503      1503            mov     (_GetPosition2_vy_1_120 + 3),a
0458           1504   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:345: if (pos[0] < mid_x) {
0458 AC20      1505            mov     r4,_GetPosition2_PARM_2
045A AD21      1506            mov     r5,(_GetPosition2_PARM_2 + 1)
045C AE22      1507            mov     r6,(_GetPosition2_PARM_2 + 2)
045E 8C82      1508            mov     dpl,r4
0460 8D83      1509            mov     dph,r5
0462 8EF0      1510            mov     b,r6
0464 120000    1511            lcall   __gptrget
0467 FF        1512            mov     r7,a
0468 A3        1513            inc     dptr
0469 120000    1514            lcall   __gptrget
046C FA        1515            mov     r2,a
046D A3        1516            inc     dptr
046E 120000    1517            lcall   __gptrget
0471 FB        1518            mov     r3,a
0472 A3        1519            inc     dptr
0473 120000    1520            lcall   __gptrget
0476 F8        1521            mov     r0,a
0477 C004      1522            push    ar4
0479 C005      1523            push    ar5
047B C006      1524            push    ar6
047D C010      1525            push    _GetPosition2_mid_x_1_120
047F C011      1526            push    (_GetPosition2_mid_x_1_120 + 1)
0481 C012      1527            push    (_GetPosition2_mid_x_1_120 + 2)
0483 C013      1528            push    (_GetPosition2_mid_x_1_120 + 3)
0485 8F82      1529            mov     dpl,r7
0487 8A83      1530            mov     dph,r2
0489 8BF0      1531            mov     b,r3
048B E8        1532            mov     a,r0
048C 120000    1533            lcall   ___fslt
048F AA82      1534            mov     r2,dpl
0491 E581      1535            mov     a,sp
0493 24FC      1536            add     a,#0xfc
0495 F581      1537            mov     sp,a
0497 D006      1538            pop     ar6
0499 D005      1539            pop     ar5
049B D004      1540            pop     ar4
049D EA        1541            mov     a,r2
049E 6000      1542            jz      L019002?
04A0           1543   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:346: pos[0] = map2(vx, min, mid_x, -50.0, 0);
04A0 752000    1544            mov     _map2_PARM_2,#0x00
04A3 752100    1545            mov     (_map2_PARM_2 + 1),#0x00
04A6 752200    1546            mov     (_map2_PARM_2 + 2),#0x00
04A9 752300    1547            mov     (_map2_PARM_2 + 3),#0x00
04AC 8510E0    1548            mov     _map2_PARM_3,_GetPosition2_mid_x_1_120
04AF 8511E1    1549            mov     (_map2_PARM_3 + 1),(_GetPosition2_mid_x_1_120 + 1)
04B2 8512E2    1550            mov     (_map2_PARM_3 + 2),(_GetPosition2_mid_x_1_120 + 2)
04B5 8513E3    1551            mov     (_map2_PARM_3 + 3),(_GetPosition2_mid_x_1_120 + 3)
04B8 75A000    1552            mov     _map2_PARM_4,#0x00
04BB 75A100    1553            mov     (_map2_PARM_4 + 1),#0x00
04BE 75A248    1554            mov     (_map2_PARM_4 + 2),#0x48
04C1 75A3C2    1555            mov     (_map2_PARM_4 + 3),#0xC2
04C4 756000    1556            mov     _map2_PARM_5,#0x00
04C7 756100    1557            mov     (_map2_PARM_5 + 1),#0x00
04CA 756200    1558            mov     (_map2_PARM_5 + 2),#0x00
04CD 756300    1559            mov     (_map2_PARM_5 + 3),#0x00
04D0 85B082    1560            mov     dpl,_GetPosition2_vx_1_120
04D3 85B183    1561            mov     dph,(_GetPosition2_vx_1_120 + 1)
04D6 85B2F0    1562            mov     b,(_GetPosition2_vx_1_120 + 2)
04D9 E5B3      1563            mov     a,(_GetPosition2_vx_1_120 + 3)
04DB C004      1564            push    ar4
04DD C005      1565            push    ar5
04DF C006      1566            push    ar6
04E1 120000    1567            lcall   _map2
04E4 AA82      1568            mov     r2,dpl
04E6 AB83      1569            mov     r3,dph
04E8 AFF0      1570            mov     r7,b
04EA F8        1571            mov     r0,a
04EB D006      1572            pop     ar6
04ED D005      1573            pop     ar5
04EF D004      1574            pop     ar4
04F1 8C82      1575            mov     dpl,r4
04F3 8D83      1576            mov     dph,r5
04F5 8EF0      1577            mov     b,r6
04F7 EA        1578            mov     a,r2
04F8 120000    1579            lcall   __gptrput
04FB A3        1580            inc     dptr
04FC EB        1581            mov     a,r3
04FD 120000    1582            lcall   __gptrput
0500 A3        1583            inc     dptr
0501 EF        1584            mov     a,r7
0502 120000    1585            lcall   __gptrput
0505 A3        1586            inc     dptr
0506 E8        1587            mov     a,r0
0507 120000    1588            lcall   __gptrput
050A 8000      1589            sjmp    L019003?
050C           1590   L019002?:
050C           1591   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:349: pos[0] = map2(vx, mid_x, max, 0.0, 50.0);
050C 851020    1592            mov     _map2_PARM_2,_GetPosition2_mid_x_1_120
050F 851121    1593            mov     (_map2_PARM_2 + 1),(_GetPosition2_mid_x_1_120 + 1)
0512 851222    1594            mov     (_map2_PARM_2 + 2),(_GetPosition2_mid_x_1_120 + 2)
0515 851323    1595            mov     (_map2_PARM_2 + 3),(_GetPosition2_mid_x_1_120 + 3)
0518 75E033    1596            mov     _map2_PARM_3,#0x33
051B 75E133    1597            mov     (_map2_PARM_3 + 1),#0x33
051E 75E253    1598            mov     (_map2_PARM_3 + 2),#0x53
0521 75E340    1599            mov     (_map2_PARM_3 + 3),#0x40
0524 75A000    1600            mov     _map2_PARM_4,#0x00
0527 75A100    1601            mov     (_map2_PARM_4 + 1),#0x00
052A 75A200    1602            mov     (_map2_PARM_4 + 2),#0x00
052D 75A300    1603            mov     (_map2_PARM_4 + 3),#0x00
0530 756000    1604            mov     _map2_PARM_5,#0x00
0533 756100    1605            mov     (_map2_PARM_5 + 1),#0x00
0536 756248    1606            mov     (_map2_PARM_5 + 2),#0x48
0539 756342    1607            mov     (_map2_PARM_5 + 3),#0x42
053C 85B082    1608            mov     dpl,_GetPosition2_vx_1_120
053F 85B183    1609            mov     dph,(_GetPosition2_vx_1_120 + 1)
0542 85B2F0    1610            mov     b,(_GetPosition2_vx_1_120 + 2)
0545 E5B3      1611            mov     a,(_GetPosition2_vx_1_120 + 3)
0547 C004      1612            push    ar4
0549 C005      1613            push    ar5
054B C006      1614            push    ar6
054D 120000    1615            lcall   _map2
0550 AA82      1616            mov     r2,dpl
0552 AB83      1617            mov     r3,dph
0554 AFF0      1618            mov     r7,b
0556 F8        1619            mov     r0,a
0557 D006      1620            pop     ar6
0559 D005      1621            pop     ar5
055B D004      1622            pop     ar4
055D 8C82      1623            mov     dpl,r4
055F 8D83      1624            mov     dph,r5
0561 8EF0      1625            mov     b,r6
0563 EA        1626            mov     a,r2
0564 120000    1627            lcall   __gptrput
0567 A3        1628            inc     dptr
0568 EB        1629            mov     a,r3
0569 120000    1630            lcall   __gptrput
056C A3        1631            inc     dptr
056D EF        1632            mov     a,r7
056E 120000    1633            lcall   __gptrput
0571 A3        1634            inc     dptr
0572 E8        1635            mov     a,r0
0573 120000    1636            lcall   __gptrput
0576           1637   L019003?:
0576           1638   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:352: if (pos[1] < mid_y) {
0576 7404      1639            mov     a,#0x04
0578 2C        1640            add     a,r4
0579 FC        1641            mov     r4,a
057A E4        1642            clr     a
057B 3D        1643            addc    a,r5
057C FB        1644            mov     r3,a
057D 8E02      1645            mov     ar2,r6
057F 8C82      1646            mov     dpl,r4
0581 8B83      1647            mov     dph,r3
0583 8AF0      1648            mov     b,r2
0585 120000    1649            lcall   __gptrget
0588 FD        1650            mov     r5,a
0589 A3        1651            inc     dptr
058A 120000    1652            lcall   __gptrget
058D FE        1653            mov     r6,a
058E A3        1654            inc     dptr
058F 120000    1655            lcall   __gptrget
0592 FF        1656            mov     r7,a
0593 A3        1657            inc     dptr
0594 120000    1658            lcall   __gptrget
0597 F8        1659            mov     r0,a
0598 C002      1660            push    ar2
059A C003      1661            push    ar3
059C C004      1662            push    ar4
059E C060      1663            push    _GetPosition2_mid_y_1_120
05A0 C061      1664            push    (_GetPosition2_mid_y_1_120 + 1)
05A2 C062      1665            push    (_GetPosition2_mid_y_1_120 + 2)
05A4 C063      1666            push    (_GetPosition2_mid_y_1_120 + 3)
05A6 8D82      1667            mov     dpl,r5
05A8 8E83      1668            mov     dph,r6
05AA 8FF0      1669            mov     b,r7
05AC E8        1670            mov     a,r0
05AD 120000    1671            lcall   ___fslt
05B0 AD82      1672            mov     r5,dpl
05B2 E581      1673            mov     a,sp
05B4 24FC      1674            add     a,#0xfc
05B6 F581      1675            mov     sp,a
05B8 D004      1676            pop     ar4
05BA D003      1677            pop     ar3
05BC D002      1678            pop     ar2
05BE ED        1679            mov     a,r5
05BF 6000      1680            jz      L019005?
05C1           1681   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:353: pos[1] = map2(vy, min, mid_y, -50.0, 0.0);
05C1 752000    1682            mov     _map2_PARM_2,#0x00
05C4 752100    1683            mov     (_map2_PARM_2 + 1),#0x00
05C7 752200    1684            mov     (_map2_PARM_2 + 2),#0x00
05CA 752300    1685            mov     (_map2_PARM_2 + 3),#0x00
05CD 8560E0    1686            mov     _map2_PARM_3,_GetPosition2_mid_y_1_120
05D0 8561E1    1687            mov     (_map2_PARM_3 + 1),(_GetPosition2_mid_y_1_120 + 1)
05D3 8562E2    1688            mov     (_map2_PARM_3 + 2),(_GetPosition2_mid_y_1_120 + 2)
05D6 8563E3    1689            mov     (_map2_PARM_3 + 3),(_GetPosition2_mid_y_1_120 + 3)
05D9 75A000    1690            mov     _map2_PARM_4,#0x00
05DC 75A100    1691            mov     (_map2_PARM_4 + 1),#0x00
05DF 75A248    1692            mov     (_map2_PARM_4 + 2),#0x48
05E2 75A3C2    1693            mov     (_map2_PARM_4 + 3),#0xC2
05E5 756000    1694            mov     _map2_PARM_5,#0x00
05E8 756100    1695            mov     (_map2_PARM_5 + 1),#0x00
05EB 756200    1696            mov     (_map2_PARM_5 + 2),#0x00
05EE 756300    1697            mov     (_map2_PARM_5 + 3),#0x00
05F1 850082    1698            mov     dpl,_GetPosition2_vy_1_120
05F4 850183    1699            mov     dph,(_GetPosition2_vy_1_120 + 1)
05F7 8502F0    1700            mov     b,(_GetPosition2_vy_1_120 + 2)
05FA E503      1701            mov     a,(_GetPosition2_vy_1_120 + 3)
05FC C002      1702            push    ar2
05FE C003      1703            push    ar3
0600 C004      1704            push    ar4
0602 120000    1705            lcall   _map2
0605 AD82      1706            mov     r5,dpl
0607 AE83      1707            mov     r6,dph
0609 AFF0      1708            mov     r7,b
060B F8        1709            mov     r0,a
060C D004      1710            pop     ar4
060E D003      1711            pop     ar3
0610 D002      1712            pop     ar2
0612 8C82      1713            mov     dpl,r4
0614 8B83      1714            mov     dph,r3
0616 8AF0      1715            mov     b,r2
0618 ED        1716            mov     a,r5
0619 120000    1717            lcall   __gptrput
061C A3        1718            inc     dptr
061D EE        1719            mov     a,r6
061E 120000    1720            lcall   __gptrput
0621 A3        1721            inc     dptr
0622 EF        1722            mov     a,r7
0623 120000    1723            lcall   __gptrput
0626 A3        1724            inc     dptr
0627 E8        1725            mov     a,r0
0628 020000    1726            ljmp    __gptrput
062B           1727   L019005?:
062B           1728   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:356: pos[1] = map2(vy, mid_y, max, 0.0, 50.0);
062B 856020    1729            mov     _map2_PARM_2,_GetPosition2_mid_y_1_120
062E 856121    1730            mov     (_map2_PARM_2 + 1),(_GetPosition2_mid_y_1_120 + 1)
0631 856222    1731            mov     (_map2_PARM_2 + 2),(_GetPosition2_mid_y_1_120 + 2)
0634 856323    1732            mov     (_map2_PARM_2 + 3),(_GetPosition2_mid_y_1_120 + 3)
0637 75E033    1733            mov     _map2_PARM_3,#0x33
063A 75E133    1734            mov     (_map2_PARM_3 + 1),#0x33
063D 75E253    1735            mov     (_map2_PARM_3 + 2),#0x53
0640 75E340    1736            mov     (_map2_PARM_3 + 3),#0x40
0643 75A000    1737            mov     _map2_PARM_4,#0x00
0646 75A100    1738            mov     (_map2_PARM_4 + 1),#0x00
0649 75A200    1739            mov     (_map2_PARM_4 + 2),#0x00
064C 75A300    1740            mov     (_map2_PARM_4 + 3),#0x00
064F 756000    1741            mov     _map2_PARM_5,#0x00
0652 756100    1742            mov     (_map2_PARM_5 + 1),#0x00
0655 756248    1743            mov     (_map2_PARM_5 + 2),#0x48
0658 756342    1744            mov     (_map2_PARM_5 + 3),#0x42
065B 850082    1745            mov     dpl,_GetPosition2_vy_1_120
065E 850183    1746            mov     dph,(_GetPosition2_vy_1_120 + 1)
0661 8502F0    1747            mov     b,(_GetPosition2_vy_1_120 + 2)
0664 E503      1748            mov     a,(_GetPosition2_vy_1_120 + 3)
0666 C002      1749            push    ar2
0668 C003      1750            push    ar3
066A C004      1751            push    ar4
066C 120000    1752            lcall   _map2
066F AD82      1753            mov     r5,dpl
0671 AE83      1754            mov     r6,dph
0673 AFF0      1755            mov     r7,b
0675 F8        1756            mov     r0,a
0676 D004      1757            pop     ar4
0678 D003      1758            pop     ar3
067A D002      1759            pop     ar2
067C 8C82      1760            mov     dpl,r4
067E 8B83      1761            mov     dph,r3
0680 8AF0      1762            mov     b,r2
0682 ED        1763            mov     a,r5
0683 120000    1764            lcall   __gptrput
0686 A3        1765            inc     dptr
0687 EE        1766            mov     a,r6
0688 120000    1767            lcall   __gptrput
068B A3        1768            inc     dptr
068C EF        1769            mov     a,r7
068D 120000    1770            lcall   __gptrput
0690 A3        1771            inc     dptr
0691 E8        1772            mov     a,r0
0692 020000    1773            ljmp    __gptrput
0695           1774   ;------------------------------------------------------------
0695           1775   ;Allocation info for local variables in function 'UART1_Init'
0695           1776   ;------------------------------------------------------------
0695           1777   ;baudrate                  Allocated to registers r2 r3 r4 r5 
0695           1778   ;------------------------------------------------------------
0695           1779   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:360: void UART1_Init (unsigned long baudrate)
0695           1780   ;        -----------------------------------------
0695           1781   ;         function UART1_Init
0695           1782   ;        -----------------------------------------
0695           1783   _UART1_Init:
0695 AA82      1784            mov     r2,dpl
0697 AB83      1785            mov     r3,dph
0699 ACF0      1786            mov     r4,b
069B FD        1787            mov     r5,a
069C           1788   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:362: SFRPAGE = 0x20;
069C 75A720    1789            mov     _SFRPAGE,#0x20
069F           1790   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:363: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
069F 75930C    1791            mov     _SMOD1,#0x0C
06A2           1792   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:364: SCON1 = 0x10;
06A2 75C810    1793            mov     _SCON1,#0x10
06A5           1794   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:365: SBCON1 =0x00;   // disable baud rate generator
06A5 759400    1795            mov     _SBCON1,#0x00
06A8           1796   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:366: SBRL1 = 0x10000L-((SYSCLK/baudrate)/(12L*2L));
06A8 8A00      1797            mov     __divulong_PARM_2,r2
06AA 8B01      1798            mov     (__divulong_PARM_2 + 1),r3
06AC 8C02      1799            mov     (__divulong_PARM_2 + 2),r4
06AE 8D03      1800            mov     (__divulong_PARM_2 + 3),r5
06B0 90A200    1801            mov     dptr,#0xA200
06B3 75F04A    1802            mov     b,#0x4A
06B6 7404      1803            mov     a,#0x04
06B8 120000    1804            lcall   __divulong
06BB AA82      1805            mov     r2,dpl
06BD AB83      1806            mov     r3,dph
06BF ACF0      1807            mov     r4,b
06C1 FD        1808            mov     r5,a
06C2 750018    1809            mov     __divulong_PARM_2,#0x18
06C5 E4        1810            clr     a
06C6 F501      1811            mov     (__divulong_PARM_2 + 1),a
06C8 F502      1812            mov     (__divulong_PARM_2 + 2),a
06CA F503      1813            mov     (__divulong_PARM_2 + 3),a
06CC 8A82      1814            mov     dpl,r2
06CE 8B83      1815            mov     dph,r3
06D0 8CF0      1816            mov     b,r4
06D2 ED        1817            mov     a,r5
06D3 120000    1818            lcall   __divulong
06D6 AA82      1819            mov     r2,dpl
06D8 AB83      1820            mov     r3,dph
06DA ACF0      1821            mov     r4,b
06DC FD        1822            mov     r5,a
06DD E4        1823            clr     a
06DE C3        1824            clr     c
06DF 9A        1825            subb    a,r2
06E0 FA        1826            mov     r2,a
06E1 E4        1827            clr     a
06E2 9B        1828            subb    a,r3
06E3 FB        1829            mov     r3,a
06E4 7401      1830            mov     a,#0x01
06E6 9C        1831            subb    a,r4
06E7 E4        1832            clr     a
06E8 9D        1833            subb    a,r5
06E9 8A95      1834            mov     _SBRL1,r2
06EB 8B96      1835            mov     (_SBRL1 >> 8),r3
06ED           1836   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:367: TI1 = 1; // indicate ready for TX
06ED D2C9      1837            setb    _TI1
06EF           1838   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:368: SBCON1 |= 0x40;   // enable baud rate generator
06EF 439440    1839            orl     _SBCON1,#0x40
06F2           1840   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:369: SFRPAGE = 0x00;
06F2 75A700    1841            mov     _SFRPAGE,#0x00
06F5 22        1842            ret
06F6           1843   ;------------------------------------------------------------
06F6           1844   ;Allocation info for local variables in function 'putchar1'
06F6           1845   ;------------------------------------------------------------
06F6           1846   ;c                         Allocated to registers r2 
06F6           1847   ;------------------------------------------------------------
06F6           1848   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:372: void putchar1 (char c) 
06F6           1849   ;        -----------------------------------------
06F6           1850   ;         function putchar1
06F6           1851   ;        -----------------------------------------
06F6           1852   _putchar1:
06F6 AA82      1853            mov     r2,dpl
06F8           1854   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:374: SFRPAGE = 0x20;
06F8 75A720    1855            mov     _SFRPAGE,#0x20
06FB           1856   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:375: while (!TI1);
06FB           1857   L021001?:
06FB           1858   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:376: TI1=0;
06FB 10C990    1859            jbc     _TI1,L021008?
06FE 8000      1860            sjmp    L021001?
0700           1861   L021008?:
0700           1862   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:377: SBUF1 = c;
0700 8A92      1863            mov     _SBUF1,r2
0702           1864   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:378: SFRPAGE = 0x00;
0702 75A700    1865            mov     _SFRPAGE,#0x00
0705 22        1866            ret
0706           1867   ;------------------------------------------------------------
0706           1868   ;Allocation info for local variables in function 'sendstr1'
0706           1869   ;------------------------------------------------------------
0706           1870   ;s                         Allocated to registers r2 r3 r4 
0706           1871   ;------------------------------------------------------------
0706           1872   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:381: void sendstr1 (char * s)
0706           1873   ;        -----------------------------------------
0706           1874   ;         function sendstr1
0706           1875   ;        -----------------------------------------
0706           1876   _sendstr1:
0706 AA82      1877            mov     r2,dpl
0708 AB83      1878            mov     r3,dph
070A ACF0      1879            mov     r4,b
070C           1880   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:383: while(*s)
070C           1881   L022001?:
070C 8A82      1882            mov     dpl,r2
070E 8B83      1883            mov     dph,r3
0710 8CF0      1884            mov     b,r4
0712 120000    1885            lcall   __gptrget
0715 FD        1886            mov     r5,a
0716 6000      1887            jz      L022004?
0718           1888   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:385: putchar1(*s);
0718 8D82      1889            mov     dpl,r5
071A C002      1890            push    ar2
071C C003      1891            push    ar3
071E C004      1892            push    ar4
0720 120000    1893            lcall   _putchar1
0723 D004      1894            pop     ar4
0725 D003      1895            pop     ar3
0727 D002      1896            pop     ar2
0729           1897   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:386: s++;    
0729 0A        1898            inc     r2
072A BA00D0    1899            cjne    r2,#0x00,L022001?
072D 0B        1900            inc     r3
072E 8000      1901            sjmp    L022001?
0730           1902   L022004?:
0730 22        1903            ret
0731           1904   ;------------------------------------------------------------
0731           1905   ;Allocation info for local variables in function 'getchar1'
0731           1906   ;------------------------------------------------------------
0731           1907   ;c                         Allocated to registers 
0731           1908   ;------------------------------------------------------------
0731           1909   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:390: char getchar1 (void)
0731           1910   ;        -----------------------------------------
0731           1911   ;         function getchar1
0731           1912   ;        -----------------------------------------
0731           1913   _getchar1:
0731           1914   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:393: SFRPAGE = 0x20;
0731 75A720    1915            mov     _SFRPAGE,#0x20
0734           1916   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:394: while (!RI1);
0734           1917   L023001?:
0734           1918   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:395: RI1=0;
0734 10C890    1919            jbc     _RI1,L023008?
0737 8000      1920            sjmp    L023001?
0739           1921   L023008?:
0739           1922   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:397: SCON1&=0b_0011_1111;
0739 53C83F    1923            anl     _SCON1,#0x3F
073C           1924   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:398: c = SBUF1;
073C 859282    1925            mov     dpl,_SBUF1
073F           1926   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:399: SFRPAGE = 0x00;
073F 75A700    1927            mov     _SFRPAGE,#0x00
0742           1928   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:400: return (c);
0742 22        1929            ret
0743           1930   ;------------------------------------------------------------
0743           1931   ;Allocation info for local variables in function 'getchar1_with_timeout'
0743           1932   ;------------------------------------------------------------
0743           1933   ;c                         Allocated to registers 
0743           1934   ;timeout                   Allocated to registers r2 r3 
0743           1935   ;------------------------------------------------------------
0743           1936   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:403: char getchar1_with_timeout (void)
0743           1937   ;        -----------------------------------------
0743           1938   ;         function getchar1_with_timeout
0743           1939   ;        -----------------------------------------
0743           1940   _getchar1_with_timeout:
0743           1941   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:407: SFRPAGE = 0x20;
0743 75A720    1942            mov     _SFRPAGE,#0x20
0746           1943   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:409: while (!RI1)
0746 7A00      1944            mov     r2,#0x00
0748 7B00      1945            mov     r3,#0x00
074A           1946   L024003?:
074A 20C810    1947            jb      _RI1,L024005?
074D           1948   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:411: SFRPAGE = 0x00;
074D 75A700    1949            mov     _SFRPAGE,#0x00
0750           1950   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:412: Timer3us(20);
0750 758214    1951            mov     dpl,#0x14
0753 C002      1952            push    ar2
0755 C003      1953            push    ar3
0757 120000    1954            lcall   _Timer3us
075A D003      1955            pop     ar3
075C D002      1956            pop     ar2
075E           1957   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:413: SFRPAGE = 0x20;
075E 75A720    1958            mov     _SFRPAGE,#0x20
0761           1959   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:414: timeout++;
0761 0A        1960            inc     r2
0762 BA0050    1961            cjne    r2,#0x00,L024012?
0765 0B        1962            inc     r3
0766           1963   L024012?:
0766           1964   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:415: if(timeout==25000)
0766 BAA8D0    1965            cjne    r2,#0xA8,L024003?
0769 BB61D0    1966            cjne    r3,#0x61,L024003?
076C           1967   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:417: SFRPAGE = 0x00;
076C 75A700    1968            mov     _SFRPAGE,#0x00
076F           1969   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:418: return ('\n'); // Timeout after half second
076F 75820A    1970            mov     dpl,#0x0A
0772 22        1971            ret
0773           1972   L024005?:
0773           1973   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:421: RI1=0;
0773 C2C8      1974            clr     _RI1
0775           1975   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:423: SCON1&=0b_0011_1111;
0775 53C83F    1976            anl     _SCON1,#0x3F
0778           1977   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:424: c = SBUF1;
0778 859282    1978            mov     dpl,_SBUF1
077B           1979   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:425: SFRPAGE = 0x00;
077B 75A700    1980            mov     _SFRPAGE,#0x00
077E           1981   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:426: return (c);
077E 22        1982            ret
077F           1983   ;------------------------------------------------------------
077F           1984   ;Allocation info for local variables in function 'getstr1'
077F           1985   ;------------------------------------------------------------
077F           1986   ;s                         Allocated to registers r2 r3 r4 
077F           1987   ;c                         Allocated to registers r5 
077F           1988   ;------------------------------------------------------------
077F           1989   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:430: void getstr1 (char * s)
077F           1990   ;        -----------------------------------------
077F           1991   ;         function getstr1
077F           1992   ;        -----------------------------------------
077F           1993   _getstr1:
077F AA82      1994            mov     r2,dpl
0781 AB83      1995            mov     r3,dph
0783 ACF0      1996            mov     r4,b
0785           1997   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:434: while(1)
0785           1998   L025004?:
0785           1999   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:436: c=getchar1_with_timeout();
0785 C002      2000            push    ar2
0787 C003      2001            push    ar3
0789 C004      2002            push    ar4
078B 120000    2003            lcall   _getchar1_with_timeout
078E AD82      2004            mov     r5,dpl
0790 D004      2005            pop     ar4
0792 D003      2006            pop     ar3
0794 D002      2007            pop     ar2
0796           2008   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:437: if(c=='\n')
0796 BD0AD0    2009            cjne    r5,#0x0A,L025002?
0799           2010   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:439: *s=0;
0799 8A82      2011            mov     dpl,r2
079B 8B83      2012            mov     dph,r3
079D 8CF0      2013            mov     b,r4
079F E4        2014            clr     a
07A0           2015   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:440: return;
07A0 020000    2016            ljmp    __gptrput
07A3           2017   L025002?:
07A3           2018   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:442: *s=c;
07A3 8A82      2019            mov     dpl,r2
07A5 8B83      2020            mov     dph,r3
07A7 8CF0      2021            mov     b,r4
07A9 ED        2022            mov     a,r5
07AA 120000    2023            lcall   __gptrput
07AD A3        2024            inc     dptr
07AE AA82      2025            mov     r2,dpl
07B0 AB83      2026            mov     r3,dph
07B2           2027   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:443: s++;
07B2 8000      2028            sjmp    L025004?
07B4           2029   ;------------------------------------------------------------
07B4           2030   ;Allocation info for local variables in function 'RXU1'
07B4           2031   ;------------------------------------------------------------
07B4           2032   ;------------------------------------------------------------
07B4           2033   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:448: bit RXU1 (void)
07B4           2034   ;        -----------------------------------------
07B4           2035   ;         function RXU1
07B4           2036   ;        -----------------------------------------
07B4           2037   _RXU1:
07B4           2038   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:451: SFRPAGE = 0x20;
07B4 75A720    2039            mov     _SFRPAGE,#0x20
07B7           2040   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:452: mybit=RI1;
07B7 A2C8      2041            mov     c,_RI1
07B9           2042   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:453: SFRPAGE = 0x00;
07B9 75A700    2043            mov     _SFRPAGE,#0x00
07BC           2044   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:454: return mybit;
07BC 22        2045            ret
07BD           2046   ;------------------------------------------------------------
07BD           2047   ;Allocation info for local variables in function 'waitms_or_RI1'
07BD           2048   ;------------------------------------------------------------
07BD           2049   ;ms                        Allocated to registers r2 r3 
07BD           2050   ;j                         Allocated to registers r4 r5 
07BD           2051   ;k                         Allocated to registers r6 
07BD           2052   ;------------------------------------------------------------
07BD           2053   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:457: void waitms_or_RI1 (unsigned int ms)
07BD           2054   ;        -----------------------------------------
07BD           2055   ;         function waitms_or_RI1
07BD           2056   ;        -----------------------------------------
07BD           2057   _waitms_or_RI1:
07BD AA82      2058            mov     r2,dpl
07BF AB83      2059            mov     r3,dph
07C1           2060   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:461: for(j=0; j<ms; j++)
07C1 7C00      2061            mov     r4,#0x00
07C3 7D00      2062            mov     r5,#0x00
07C5           2063   L027007?:
07C5 C3        2064            clr     c
07C6 EC        2065            mov     a,r4
07C7 9A        2066            subb    a,r2
07C8 ED        2067            mov     a,r5
07C9 9B        2068            subb    a,r3
07CA 5000      2069            jnc     L027011?
07CC           2070   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:463: for (k=0; k<4; k++)
07CC 7E00      2071            mov     r6,#0x00
07CE           2072   L027003?:
07CE BE04D0    2073            cjne    r6,#0x04,L027019?
07D1           2074   L027019?:
07D1 5000      2075            jnc     L027009?
07D3           2076   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:465: if(RXU1()) return;
07D3 C002      2077            push    ar2
07D5 C003      2078            push    ar3
07D7 C004      2079            push    ar4
07D9 C005      2080            push    ar5
07DB C006      2081            push    ar6
07DD 120000    2082            lcall   _RXU1
07E0 E4        2083            clr     a
07E1 33        2084            rlc     a
07E2 D006      2085            pop     ar6
07E4 D005      2086            pop     ar5
07E6 D004      2087            pop     ar4
07E8 D003      2088            pop     ar3
07EA D002      2089            pop     ar2
07EC 6000      2090            jz      L027002?
07EE 22        2091            ret
07EF           2092   L027002?:
07EF           2093   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:466: Timer3us(250);
07EF 7582FA    2094            mov     dpl,#0xFA
07F2 C002      2095            push    ar2
07F4 C003      2096            push    ar3
07F6 C004      2097            push    ar4
07F8 C005      2098            push    ar5
07FA C006      2099            push    ar6
07FC 120000    2100            lcall   _Timer3us
07FF D006      2101            pop     ar6
0801 D005      2102            pop     ar5
0803 D004      2103            pop     ar4
0805 D003      2104            pop     ar3
0807 D002      2105            pop     ar2
0809           2106   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:463: for (k=0; k<4; k++)
0809 0E        2107            inc     r6
080A 8000      2108            sjmp    L027003?
080C           2109   L027009?:
080C           2110   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:461: for(j=0; j<ms; j++)
080C 0C        2111            inc     r4
080D BC0010    2112            cjne    r4,#0x00,L027007?
0810 0D        2113            inc     r5
0811 8000      2114            sjmp    L027007?
0813           2115   L027011?:
0813 22        2116            ret
0814           2117   ;------------------------------------------------------------
0814           2118   ;Allocation info for local variables in function 'SendATCommand'
0814           2119   ;------------------------------------------------------------
0814           2120   ;s                         Allocated to registers r2 r3 r4 
0814           2121   ;------------------------------------------------------------
0814           2122   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:471: void SendATCommand (char * s)
0814           2123   ;        -----------------------------------------
0814           2124   ;         function SendATCommand
0814           2125   ;        -----------------------------------------
0814           2126   _SendATCommand:
0814 AA82      2127            mov     r2,dpl
0816 AB83      2128            mov     r3,dph
0818 ACF0      2129            mov     r4,b
081A           2130   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:473: printf("Command: %s", s);
081A C002      2131            push    ar2
081C C003      2132            push    ar3
081E C004      2133            push    ar4
0820 C002      2134            push    ar2
0822 C003      2135            push    ar3
0824 C004      2136            push    ar4
0826 7490      2137            mov     a,#__str_0
0828 C0E0      2138            push    acc
082A 74CA      2139            mov     a,#(__str_0 >> 8)
082C C0E0      2140            push    acc
082E 7480      2141            mov     a,#0x80
0830 C0E0      2142            push    acc
0832 120000    2143            lcall   _printf
0835 E581      2144            mov     a,sp
0837 24FA      2145            add     a,#0xfa
0839 F581      2146            mov     sp,a
083B           2147   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:474: P2_0=0; // 'set' pin to 0 is 'AT' mode.
083B C2A0      2148            clr     _P2_0
083D           2149   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:475: waitms(5);
083D 900005    2150            mov     dptr,#0x0005
0840 120000    2151            lcall   _waitms
0843 D004      2152            pop     ar4
0845 D003      2153            pop     ar3
0847 D002      2154            pop     ar2
0849           2155   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:476: sendstr1(s);
0849 8A82      2156            mov     dpl,r2
084B 8B83      2157            mov     dph,r3
084D 8CF0      2158            mov     b,r4
084F 120000    2159            lcall   _sendstr1
0852           2160   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:477: getstr1(buff);
0852 904880    2161            mov     dptr,#_buff
0855 75F040    2162            mov     b,#0x40
0858 120000    2163            lcall   _getstr1
085B           2164   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:478: waitms(10);
085B 90000A    2165            mov     dptr,#0x000A
085E 120000    2166            lcall   _waitms
0861           2167   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:479: P2_0=1; // 'set' pin to 1 is normal operation mode.
0861 D2A0      2168            setb    _P2_0
0863           2169   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:480: printf("Response: %s\r\n", buff);
0863 7480      2170            mov     a,#_buff
0865 C0E0      2171            push    acc
0867 7448      2172            mov     a,#(_buff >> 8)
0869 C0E0      2173            push    acc
086B 7440      2174            mov     a,#0x40
086D C0E0      2175            push    acc
086F 7410      2176            mov     a,#__str_1
0871 C0E0      2177            push    acc
0873 74CB      2178            mov     a,#(__str_1 >> 8)
0875 C0E0      2179            push    acc
0877 7480      2180            mov     a,#0x80
0879 C0E0      2181            push    acc
087B 120000    2182            lcall   _printf
087E E581      2183            mov     a,sp
0880 24FA      2184            add     a,#0xfa
0882 F581      2185            mov     sp,a
0884 22        2186            ret
0885           2187   ;------------------------------------------------------------
0885           2188   ;Allocation info for local variables in function 'loadTimer2'
0885           2189   ;------------------------------------------------------------
0885           2190   ;freq                      Allocated to registers r2 r3 r4 r5 
0885           2191   ;x                         Allocated to registers r2 r3 r4 r5 
0885           2192   ;------------------------------------------------------------
0885           2193   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:485: void loadTimer2(unsigned long int freq) {
0885           2194   ;        -----------------------------------------
0885           2195   ;         function loadTimer2
0885           2196   ;        -----------------------------------------
0885           2197   _loadTimer2:
0885 AA82      2198            mov     r2,dpl
0887 AB83      2199            mov     r3,dph
0889 ACF0      2200            mov     r4,b
088B FD        2201            mov     r5,a
088C           2202   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:486: unsigned long int x=(SYSCLK/(2L*freq));
088C EA        2203            mov     a,r2
088D 2A        2204            add     a,r2
088E F500      2205            mov     __divulong_PARM_2,a
0890 EB        2206            mov     a,r3
0891 33        2207            rlc     a
0892 F501      2208            mov     (__divulong_PARM_2 + 1),a
0894 EC        2209            mov     a,r4
0895 33        2210            rlc     a
0896 F502      2211            mov     (__divulong_PARM_2 + 2),a
0898 ED        2212            mov     a,r5
0899 33        2213            rlc     a
089A F503      2214            mov     (__divulong_PARM_2 + 3),a
089C 90A200    2215            mov     dptr,#0xA200
089F 75F04A    2216            mov     b,#0x4A
08A2 7404      2217            mov     a,#0x04
08A4 120000    2218            lcall   __divulong
08A7 AA82      2219            mov     r2,dpl
08A9 AB83      2220            mov     r3,dph
08AB ACF0      2221            mov     r4,b
08AD FD        2222            mov     r5,a
08AE           2223   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:488: TR2=0; // Stop timer 2
08AE C2CA      2224            clr     _TR2
08B0           2225   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:489: TMR2RL=0x10000L-x; // Change reload value for new frequency
08B0 E4        2226            clr     a
08B1 C3        2227            clr     c
08B2 9A        2228            subb    a,r2
08B3 FA        2229            mov     r2,a
08B4 E4        2230            clr     a
08B5 9B        2231            subb    a,r3
08B6 FB        2232            mov     r3,a
08B7 7401      2233            mov     a,#0x01
08B9 9C        2234            subb    a,r4
08BA E4        2235            clr     a
08BB 9D        2236            subb    a,r5
08BC 8ACA      2237            mov     _TMR2RL,r2
08BE 8BCB      2238            mov     (_TMR2RL >> 8),r3
08C0           2239   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:490: TR2=1; // Start timer 2
08C0 D2CA      2240            setb    _TR2
08C2 22        2241            ret
08C3           2242   ;------------------------------------------------------------
08C3           2243   ;Allocation info for local variables in function 'matchRange'
08C3           2244   ;------------------------------------------------------------
08C3           2245   ;y                         Allocated with name '_matchRange_PARM_2'
08C3           2246   ;x                         Allocated to registers r2 r3 
08C3           2247   ;result                    Allocated to registers r4 
08C3           2248   ;------------------------------------------------------------
08C3           2249   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:507: char matchRange(int x, int y) {
08C3           2250   ;        -----------------------------------------
08C3           2251   ;         function matchRange
08C3           2252   ;        -----------------------------------------
08C3           2253   _matchRange:
08C3 AA82      2254            mov     r2,dpl
08C5 AB83      2255            mov     r3,dph
08C7           2256   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:511: if (x >= -5 && x <= 5) {
08C7 C3        2257            clr     c
08C8 EA        2258            mov     a,r2
08C9 94FB      2259            subb    a,#0xFB
08CB EB        2260            mov     a,r3
08CC 6480      2261            xrl     a,#0x80
08CE 947F      2262            subb    a,#0x7f
08D0 5000      2263            jnc     L030121?
08D2 020000    2264            ljmp    L030081?
08D5           2265   L030121?:
08D5 C3        2266            clr     c
08D6 7405      2267            mov     a,#0x05
08D8 9A        2268            subb    a,r2
08D9 E4        2269            clr     a
08DA 6480      2270            xrl     a,#0x80
08DC 8BF0      2271            mov     b,r3
08DE 63F080    2272            xrl     b,#0x80
08E1 95F0      2273            subb    a,b
08E3 5000      2274            jnc     L030122?
08E5 020000    2275            ljmp    L030081?
08E8           2276   L030122?:
08E8           2277   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:512: if (y >= 45)
08E8 C3        2278            clr     c
08E9 E500      2279            mov     a,_matchRange_PARM_2
08EB 942D      2280            subb    a,#0x2D
08ED E501      2281            mov     a,(_matchRange_PARM_2 + 1)
08EF 6480      2282            xrl     a,#0x80
08F1 9480      2283            subb    a,#0x80
08F3 4000      2284            jc      L030021?
08F5           2285   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:513: result = 'A';
08F5 7C41      2286            mov     r4,#0x41
08F7 020000    2287            ljmp    L030082?
08FA           2288   L030021?:
08FA           2289   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:514: else if (y >= 30 && y <= 45)
08FA C3        2290            clr     c
08FB E500      2291            mov     a,_matchRange_PARM_2
08FD 941E      2292            subb    a,#0x1E
08FF E501      2293            mov     a,(_matchRange_PARM_2 + 1)
0901 6480      2294            xrl     a,#0x80
0903 9480      2295            subb    a,#0x80
0905 4000      2296            jc      L030017?
0907 742D      2297            mov     a,#0x2D
0909 9500      2298            subb    a,_matchRange_PARM_2
090B E4        2299            clr     a
090C 6480      2300            xrl     a,#0x80
090E 8501F0    2301            mov     b,(_matchRange_PARM_2 + 1)
0911 63F080    2302            xrl     b,#0x80
0914 95F0      2303            subb    a,b
0916 4000      2304            jc      L030017?
0918           2305   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:515: result = 'B';
0918 7C42      2306            mov     r4,#0x42
091A 020000    2307            ljmp    L030082?
091D           2308   L030017?:
091D           2309   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:516: else if (y >= 5 && y <= 30)
091D C3        2310            clr     c
091E E500      2311            mov     a,_matchRange_PARM_2
0920 9405      2312            subb    a,#0x05
0922 E501      2313            mov     a,(_matchRange_PARM_2 + 1)
0924 6480      2314            xrl     a,#0x80
0926 9480      2315            subb    a,#0x80
0928 4000      2316            jc      L030013?
092A 741E      2317            mov     a,#0x1E
092C 9500      2318            subb    a,_matchRange_PARM_2
092E E4        2319            clr     a
092F 6480      2320            xrl     a,#0x80
0931 8501F0    2321            mov     b,(_matchRange_PARM_2 + 1)
0934 63F080    2322            xrl     b,#0x80
0937 95F0      2323            subb    a,b
0939 4000      2324            jc      L030013?
093B           2325   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:517: result = 'C';
093B 7C43      2326            mov     r4,#0x43
093D 020000    2327            ljmp    L030082?
0940           2328   L030013?:
0940           2329   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:518: else if (y <= -45)
0940 C3        2330            clr     c
0941 74D3      2331            mov     a,#0xD3
0943 9500      2332            subb    a,_matchRange_PARM_2
0945 747F      2333            mov     a,#(0xFF ^ 0x80)
0947 8501F0    2334            mov     b,(_matchRange_PARM_2 + 1)
094A 63F080    2335            xrl     b,#0x80
094D 95F0      2336            subb    a,b
094F 4000      2337            jc      L030010?
0951           2338   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:519: result = 'D';
0951 7C44      2339            mov     r4,#0x44
0953 020000    2340            ljmp    L030082?
0956           2341   L030010?:
0956           2342   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:520: else if (y >= -45 && y <= -30)
0956 C3        2343            clr     c
0957 E500      2344            mov     a,_matchRange_PARM_2
0959 94D3      2345            subb    a,#0xD3
095B E501      2346            mov     a,(_matchRange_PARM_2 + 1)
095D 6480      2347            xrl     a,#0x80
095F 947F      2348            subb    a,#0x7f
0961 4000      2349            jc      L030006?
0963 74E2      2350            mov     a,#0xE2
0965 9500      2351            subb    a,_matchRange_PARM_2
0967 747F      2352            mov     a,#(0xFF ^ 0x80)
0969 8501F0    2353            mov     b,(_matchRange_PARM_2 + 1)
096C 63F080    2354            xrl     b,#0x80
096F 95F0      2355            subb    a,b
0971 4000      2356            jc      L030006?
0973           2357   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:521: result = 'E';
0973 7C45      2358            mov     r4,#0x45
0975 020000    2359            ljmp    L030082?
0978           2360   L030006?:
0978           2361   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:522: else if (y >= -30 && y <= -5)
0978 C3        2362            clr     c
0979 E500      2363            mov     a,_matchRange_PARM_2
097B 94E2      2364            subb    a,#0xE2
097D E501      2365            mov     a,(_matchRange_PARM_2 + 1)
097F 6480      2366            xrl     a,#0x80
0981 947F      2367            subb    a,#0x7f
0983 4000      2368            jc      L030002?
0985 74FB      2369            mov     a,#0xFB
0987 9500      2370            subb    a,_matchRange_PARM_2
0989 747F      2371            mov     a,#(0xFF ^ 0x80)
098B 8501F0    2372            mov     b,(_matchRange_PARM_2 + 1)
098E 63F080    2373            xrl     b,#0x80
0991 95F0      2374            subb    a,b
0993 4000      2375            jc      L030002?
0995           2376   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:523: result = 'F';
0995 7C46      2377            mov     r4,#0x46
0997 020000    2378            ljmp    L030082?
099A           2379   L030002?:
099A           2380   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:525: result = 'Z'; // Default case if Y doesn't match any range
099A 7C5A      2381            mov     r4,#0x5A
099C 020000    2382            ljmp    L030082?
099F           2383   L030081?:
099F           2384   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:527: else if (x >= 40) {
099F C3        2385            clr     c
09A0 EA        2386            mov     a,r2
09A1 9428      2387            subb    a,#0x28
09A3 EB        2388            mov     a,r3
09A4 6480      2389            xrl     a,#0x80
09A6 9480      2390            subb    a,#0x80
09A8           2391   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:529: if (y >= 5) 
09A8 4000      2392            jc      L030078?
09AA E500      2393            mov     a,_matchRange_PARM_2
09AC 9405      2394            subb    a,#0x05
09AE E501      2395            mov     a,(_matchRange_PARM_2 + 1)
09B0 6480      2396            xrl     a,#0x80
09B2 9480      2397            subb    a,#0x80
09B4 4000      2398            jc      L030031?
09B6           2399   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:530: result = 'K';
09B6 7C4B      2400            mov     r4,#0x4B
09B8 020000    2401            ljmp    L030082?
09BB           2402   L030031?:
09BB           2403   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:531: else if (y <= -5)
09BB C3        2404            clr     c
09BC 74FB      2405            mov     a,#0xFB
09BE 9500      2406            subb    a,_matchRange_PARM_2
09C0 747F      2407            mov     a,#(0xFF ^ 0x80)
09C2 8501F0    2408            mov     b,(_matchRange_PARM_2 + 1)
09C5 63F080    2409            xrl     b,#0x80
09C8 95F0      2410            subb    a,b
09CA 4000      2411            jc      L030028?
09CC           2412   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:532: result = 'M';
09CC 7C4D      2413            mov     r4,#0x4D
09CE 020000    2414            ljmp    L030082?
09D1           2415   L030028?:
09D1           2416   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:533: else if (y >= -5 && y <= 5)
09D1 C3        2417            clr     c
09D2 E500      2418            mov     a,_matchRange_PARM_2
09D4 94FB      2419            subb    a,#0xFB
09D6 E501      2420            mov     a,(_matchRange_PARM_2 + 1)
09D8 6480      2421            xrl     a,#0x80
09DA 947F      2422            subb    a,#0x7f
09DC 4000      2423            jc      L030024?
09DE 7405      2424            mov     a,#0x05
09E0 9500      2425            subb    a,_matchRange_PARM_2
09E2 E4        2426            clr     a
09E3 6480      2427            xrl     a,#0x80
09E5 8501F0    2428            mov     b,(_matchRange_PARM_2 + 1)
09E8 63F080    2429            xrl     b,#0x80
09EB 95F0      2430            subb    a,b
09ED 4000      2431            jc      L030024?
09EF           2432   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:534: result = 'G';
09EF 7C47      2433            mov     r4,#0x47
09F1 020000    2434            ljmp    L030082?
09F4           2435   L030024?:
09F4           2436   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:536: result = 'Z'; // Default case if Y doesn't match any range
09F4 7C5A      2437            mov     r4,#0x5A
09F6 020000    2438            ljmp    L030082?
09F9           2439   L030078?:
09F9           2440   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:538: else if (x <= -40) {
09F9 C3        2441            clr     c
09FA 74D8      2442            mov     a,#0xD8
09FC 9A        2443            subb    a,r2
09FD 747F      2444            mov     a,#(0xFF ^ 0x80)
09FF 8BF0      2445            mov     b,r3
0A01 63F080    2446            xrl     b,#0x80
0A04 95F0      2447            subb    a,b
0A06           2448   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:540: if (y <= -5)
0A06 4000      2449            jc      L030075?
0A08 74FB      2450            mov     a,#0xFB
0A0A 9500      2451            subb    a,_matchRange_PARM_2
0A0C 747F      2452            mov     a,#(0xFF ^ 0x80)
0A0E 8501F0    2453            mov     b,(_matchRange_PARM_2 + 1)
0A11 63F080    2454            xrl     b,#0x80
0A14 95F0      2455            subb    a,b
0A16 E4        2456            clr     a
0A17 33        2457            rlc     a
0A18 FD        2458            mov     r5,a
0A19 7000      2459            jnz     L030044?
0A1B           2460   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:541: result = 'N';
0A1B 7C4E      2461            mov     r4,#0x4E
0A1D 020000    2462            ljmp    L030082?
0A20           2463   L030044?:
0A20           2464   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:542: else if (y >= 5)
0A20 C3        2465            clr     c
0A21 E500      2466            mov     a,_matchRange_PARM_2
0A23 9405      2467            subb    a,#0x05
0A25 E501      2468            mov     a,(_matchRange_PARM_2 + 1)
0A27 6480      2469            xrl     a,#0x80
0A29 9480      2470            subb    a,#0x80
0A2B 4000      2471            jc      L030041?
0A2D           2472   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:543: result = 'L';
0A2D 7C4C      2473            mov     r4,#0x4C
0A2F 020000    2474            ljmp    L030082?
0A32           2475   L030041?:
0A32           2476   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:544: else if (y <= -5)
0A32 ED        2477            mov     a,r5
0A33 7000      2478            jnz     L030038?
0A35           2479   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:545: result = 'N';
0A35 7C4E      2480            mov     r4,#0x4E
0A37 020000    2481            ljmp    L030082?
0A3A           2482   L030038?:
0A3A           2483   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:546: else if (y >= -5 && y <= 5)
0A3A C3        2484            clr     c
0A3B E500      2485            mov     a,_matchRange_PARM_2
0A3D 94FB      2486            subb    a,#0xFB
0A3F E501      2487            mov     a,(_matchRange_PARM_2 + 1)
0A41 6480      2488            xrl     a,#0x80
0A43 947F      2489            subb    a,#0x7f
0A45 4000      2490            jc      L030034?
0A47 7405      2491            mov     a,#0x05
0A49 9500      2492            subb    a,_matchRange_PARM_2
0A4B E4        2493            clr     a
0A4C 6480      2494            xrl     a,#0x80
0A4E 8501F0    2495            mov     b,(_matchRange_PARM_2 + 1)
0A51 63F080    2496            xrl     b,#0x80
0A54 95F0      2497            subb    a,b
0A56 4000      2498            jc      L030034?
0A58           2499   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:547: result = 'I';
0A58 7C49      2500            mov     r4,#0x49
0A5A 020000    2501            ljmp    L030082?
0A5D           2502   L030034?:
0A5D           2503   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:549: result = 'Z'; // Default case if Y doesn't match any range
0A5D 7C5A      2504            mov     r4,#0x5A
0A5F 020000    2505            ljmp    L030082?
0A62           2506   L030075?:
0A62           2507   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:551: else if (x >= 5 && x <= 40) {
0A62 C3        2508            clr     c
0A63 EA        2509            mov     a,r2
0A64 9405      2510            subb    a,#0x05
0A66 EB        2511            mov     a,r3
0A67 6480      2512            xrl     a,#0x80
0A69 9480      2513            subb    a,#0x80
0A6B 4000      2514            jc      L030071?
0A6D 7428      2515            mov     a,#0x28
0A6F 9A        2516            subb    a,r2
0A70 E4        2517            clr     a
0A71 6480      2518            xrl     a,#0x80
0A73 8BF0      2519            mov     b,r3
0A75 63F080    2520            xrl     b,#0x80
0A78 95F0      2521            subb    a,b
0A7A           2522   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:553: if (y >= -5 && y <= 5)
0A7A 4000      2523            jc      L030071?
0A7C E500      2524            mov     a,_matchRange_PARM_2
0A7E 94FB      2525            subb    a,#0xFB
0A80 E501      2526            mov     a,(_matchRange_PARM_2 + 1)
0A82 6480      2527            xrl     a,#0x80
0A84 947F      2528            subb    a,#0x7f
0A86 4000      2529            jc      L030053?
0A88 7405      2530            mov     a,#0x05
0A8A 9500      2531            subb    a,_matchRange_PARM_2
0A8C E4        2532            clr     a
0A8D 6480      2533            xrl     a,#0x80
0A8F 8501F0    2534            mov     b,(_matchRange_PARM_2 + 1)
0A92 63F080    2535            xrl     b,#0x80
0A95 95F0      2536            subb    a,b
0A97 4000      2537            jc      L030053?
0A99           2538   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:554: result = 'H';
0A99 7C48      2539            mov     r4,#0x48
0A9B 020000    2540            ljmp    L030082?
0A9E           2541   L030053?:
0A9E           2542   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:555: else if (y >= 5)
0A9E C3        2543            clr     c
0A9F E500      2544            mov     a,_matchRange_PARM_2
0AA1 9405      2545            subb    a,#0x05
0AA3 E501      2546            mov     a,(_matchRange_PARM_2 + 1)
0AA5 6480      2547            xrl     a,#0x80
0AA7 9480      2548            subb    a,#0x80
0AA9 4000      2549            jc      L030050?
0AAB           2550   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:556: result = 'K';
0AAB 7C4B      2551            mov     r4,#0x4B
0AAD 020000    2552            ljmp    L030082?
0AB0           2553   L030050?:
0AB0           2554   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:557: else if (y <= -5)
0AB0 C3        2555            clr     c
0AB1 74FB      2556            mov     a,#0xFB
0AB3 9500      2557            subb    a,_matchRange_PARM_2
0AB5 747F      2558            mov     a,#(0xFF ^ 0x80)
0AB7 8501F0    2559            mov     b,(_matchRange_PARM_2 + 1)
0ABA 63F080    2560            xrl     b,#0x80
0ABD 95F0      2561            subb    a,b
0ABF 4000      2562            jc      L030047?
0AC1           2563   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:558: result = 'M';
0AC1 7C4D      2564            mov     r4,#0x4D
0AC3 020000    2565            ljmp    L030082?
0AC6           2566   L030047?:
0AC6           2567   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:560: result = 'Z'; // Default case if Y doesn't match any range
0AC6 7C5A      2568            mov     r4,#0x5A
0AC8 020000    2569            ljmp    L030082?
0ACB           2570   L030071?:
0ACB           2571   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:562: else if (x >= -40 && x <= -5) {
0ACB C3        2572            clr     c
0ACC EA        2573            mov     a,r2
0ACD 94D8      2574            subb    a,#0xD8
0ACF EB        2575            mov     a,r3
0AD0 6480      2576            xrl     a,#0x80
0AD2 947F      2577            subb    a,#0x7f
0AD4 4000      2578            jc      L030067?
0AD6 74FB      2579            mov     a,#0xFB
0AD8 9A        2580            subb    a,r2
0AD9 747F      2581            mov     a,#(0xFF ^ 0x80)
0ADB 8BF0      2582            mov     b,r3
0ADD 63F080    2583            xrl     b,#0x80
0AE0 95F0      2584            subb    a,b
0AE2           2585   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:564: if (y >= -5 && y <= 5)
0AE2 4000      2586            jc      L030067?
0AE4 E500      2587            mov     a,_matchRange_PARM_2
0AE6 94FB      2588            subb    a,#0xFB
0AE8 E501      2589            mov     a,(_matchRange_PARM_2 + 1)
0AEA 6480      2590            xrl     a,#0x80
0AEC 947F      2591            subb    a,#0x7f
0AEE 4000      2592            jc      L030063?
0AF0 7405      2593            mov     a,#0x05
0AF2 9500      2594            subb    a,_matchRange_PARM_2
0AF4 E4        2595            clr     a
0AF5 6480      2596            xrl     a,#0x80
0AF7 8501F0    2597            mov     b,(_matchRange_PARM_2 + 1)
0AFA 63F080    2598            xrl     b,#0x80
0AFD 95F0      2599            subb    a,b
0AFF 4000      2600            jc      L030063?
0B01           2601   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:565: result = 'J';
0B01 7C4A      2602            mov     r4,#0x4A
0B03 8000      2603            sjmp    L030082?
0B05           2604   L030063?:
0B05           2605   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:566: else if (y >= 5)
0B05 C3        2606            clr     c
0B06 E500      2607            mov     a,_matchRange_PARM_2
0B08 9405      2608            subb    a,#0x05
0B0A E501      2609            mov     a,(_matchRange_PARM_2 + 1)
0B0C 6480      2610            xrl     a,#0x80
0B0E 9480      2611            subb    a,#0x80
0B10 4000      2612            jc      L030060?
0B12           2613   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:567: result = 'L';
0B12 7C4C      2614            mov     r4,#0x4C
0B14 8000      2615            sjmp    L030082?
0B16           2616   L030060?:
0B16           2617   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:568: else if (y <= -5)
0B16 C3        2618            clr     c
0B17 74FB      2619            mov     a,#0xFB
0B19 9500      2620            subb    a,_matchRange_PARM_2
0B1B 747F      2621            mov     a,#(0xFF ^ 0x80)
0B1D 8501F0    2622            mov     b,(_matchRange_PARM_2 + 1)
0B20 63F080    2623            xrl     b,#0x80
0B23 95F0      2624            subb    a,b
0B25 4000      2625            jc      L030057?
0B27           2626   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:569: result = 'N';
0B27 7C4E      2627            mov     r4,#0x4E
0B29 8000      2628            sjmp    L030082?
0B2B           2629   L030057?:
0B2B           2630   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:571: result = 'Z'; // Default case if Y doesn't match any range
0B2B 7C5A      2631            mov     r4,#0x5A
0B2D 8000      2632            sjmp    L030082?
0B2F           2633   L030067?:
0B2F           2634   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:574: result = 'Z'; // Default case if X doesn't match any range
0B2F 7C5A      2635            mov     r4,#0x5A
0B31           2636   L030082?:
0B31           2637   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:577: return result;
0B31 8C82      2638            mov     dpl,r4
0B33 22        2639            ret
0B34           2640   ;------------------------------------------------------------
0B34           2641   ;Allocation info for local variables in function 'main'
0B34           2642   ;------------------------------------------------------------
0B34           2643   ;timeout_cnt               Allocated to registers r4 r5 
0B34           2644   ;metal_lev                 Allocated to registers r2 r3 
0B34           2645   ;v                         Allocated with name '_main_v_1_161'
0B34           2646   ;xy_pos                    Allocated with name '_main_xy_pos_1_161'
0B34           2647   ;mid                       Allocated with name '_main_mid_1_161'
0B34           2648   ;mapped_dir                Allocated to registers r4 
0B34           2649   ;buff_x                    Allocated with name '_main_buff_x_1_161'
0B34           2650   ;buff_y                    Allocated with name '_main_buff_y_1_161'
0B34           2651   ;temp_buff                 Allocated with name '_main_temp_buff_1_161'
0B34           2652   ;------------------------------------------------------------
0B34           2653   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:581: void main(void)
0B34           2654   ;        -----------------------------------------
0B34           2655   ;         function main
0B34           2656   ;        -----------------------------------------
0B34           2657   _main:
0B34           2658   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:584: int metal_lev = 0;
0B34 7A00      2659            mov     r2,#0x00
0B36 7B00      2660            mov     r3,#0x00
0B38           2661   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:595: LCD_4BIT();
0B38 C002      2662            push    ar2
0B3A C003      2663            push    ar3
0B3C 120000    2664            lcall   _LCD_4BIT
0B3F           2665   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:597: waitms(500);
0B3F 9001F4    2666            mov     dptr,#0x01F4
0B42 120000    2667            lcall   _waitms
0B45           2668   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:598: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0B45 7410      2669            mov     a,#__str_2
0B47 C0E0      2670            push    acc
0B49 74D2      2671            mov     a,#(__str_2 >> 8)
0B4B C0E0      2672            push    acc
0B4D 7480      2673            mov     a,#0x80
0B4F C0E0      2674            push    acc
0B51 120000    2675            lcall   _printf
0B54 1581      2676            dec     sp
0B56 1581      2677            dec     sp
0B58 1581      2678            dec     sp
0B5A           2679   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:603: __FILE__, __DATE__, __TIME__);
0B5A           2680   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:602: "Compiled: %s, %s\n\n",
0B5A 7450      2681            mov     a,#__str_6
0B5C C0E0      2682            push    acc
0B5E 74D2      2683            mov     a,#(__str_6 >> 8)
0B60 C0E0      2684            push    acc
0B62 7480      2685            mov     a,#0x80
0B64 C0E0      2686            push    acc
0B66 7490      2687            mov     a,#__str_5
0B68 C0E0      2688            push    acc
0B6A 74D2      2689            mov     a,#(__str_5 >> 8)
0B6C C0E0      2690            push    acc
0B6E 7480      2691            mov     a,#0x80
0B70 C0E0      2692            push    acc
0B72 74D0      2693            mov     a,#__str_4
0B74 C0E0      2694            push    acc
0B76 74D2      2695            mov     a,#(__str_4 >> 8)
0B78 C0E0      2696            push    acc
0B7A 7480      2697            mov     a,#0x80
0B7C C0E0      2698            push    acc
0B7E 7410      2699            mov     a,#__str_3
0B80 C0E0      2700            push    acc
0B82 74D3      2701            mov     a,#(__str_3 >> 8)
0B84 C0E0      2702            push    acc
0B86 7480      2703            mov     a,#0x80
0B88 C0E0      2704            push    acc
0B8A 120000    2705            lcall   _printf
0B8D E581      2706            mov     a,sp
0B8F 24F4      2707            add     a,#0xf4
0B91 F581      2708            mov     sp,a
0B93           2709   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:604: UART1_Init(9600);
0B93 902580    2710            mov     dptr,#0x2580
0B96 E4        2711            clr     a
0B97 F5F0      2712            mov     b,a
0B99 120000    2713            lcall   _UART1_Init
0B9C           2714   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:606: InitPinADC(1, 4); // Configure P1.4 as analog input
0B9C 755004    2715            mov     _InitPinADC_PARM_2,#0x04
0B9F 758201    2716            mov     dpl,#0x01
0BA2 120000    2717            lcall   _InitPinADC
0BA5           2718   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:607: InitPinADC(1, 5); // Configure P1.5 as analog input
0BA5 755005    2719            mov     _InitPinADC_PARM_2,#0x05
0BA8 758201    2720            mov     dpl,#0x01
0BAB 120000    2721            lcall   _InitPinADC
0BAE           2722   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:608: InitADC();
0BAE 120000    2723            lcall   _InitADC
0BB1           2724   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:626: SendATCommand("AT+DVIDA0A0\r\n");  
0BB1 90D350    2725            mov     dptr,#__str_7
0BB4 75F080    2726            mov     b,#0x80
0BB7 120000    2727            lcall   _SendATCommand
0BBA           2728   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:629: SendATCommand("AT+VER\r\n");
0BBA 90D390    2729            mov     dptr,#__str_8
0BBD 75F080    2730            mov     b,#0x80
0BC0 120000    2731            lcall   _SendATCommand
0BC3           2732   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:630: SendATCommand("AT+BAUD\r\n");
0BC3 90D3D0    2733            mov     dptr,#__str_9
0BC6 75F080    2734            mov     b,#0x80
0BC9 120000    2735            lcall   _SendATCommand
0BCC           2736   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:631: SendATCommand("AT+RFID\r\n");
0BCC 90D410    2737            mov     dptr,#__str_10
0BCF 75F080    2738            mov     b,#0x80
0BD2 120000    2739            lcall   _SendATCommand
0BD5           2740   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:632: SendATCommand("AT+DVID\r\n");
0BD5 90D450    2741            mov     dptr,#__str_11
0BD8 75F080    2742            mov     b,#0x80
0BDB 120000    2743            lcall   _SendATCommand
0BDE           2744   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:633: SendATCommand("AT+RFC\r\n");
0BDE 90D490    2745            mov     dptr,#__str_12
0BE1 75F080    2746            mov     b,#0x80
0BE4 120000    2747            lcall   _SendATCommand
0BE7           2748   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:634: SendATCommand("AT+POWE\r\n");
0BE7 90D4D0    2749            mov     dptr,#__str_13
0BEA 75F080    2750            mov     b,#0x80
0BED 120000    2751            lcall   _SendATCommand
0BF0           2752   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:635: SendATCommand("AT+CLSS\r\n");
0BF0 90D510    2753            mov     dptr,#__str_14
0BF3 75F080    2754            mov     b,#0x80
0BF6 120000    2755            lcall   _SendATCommand
0BF9           2756   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:637: mid[0] = Volts_at_Pin(XPOS_PIN);;
0BF9 75820A    2757            mov     dpl,#0x0A
0BFC 120000    2758            lcall   _Volts_at_Pin
0BFF AC82      2759            mov     r4,dpl
0C01 AD83      2760            mov     r5,dph
0C03 AEF0      2761            mov     r6,b
0C05 FF        2762            mov     r7,a
0C06 8CD0      2763            mov     _main_mid_1_161,r4
0C08 8DD1      2764            mov     (_main_mid_1_161 + 1),r5
0C0A 8ED2      2765            mov     (_main_mid_1_161 + 2),r6
0C0C 8FD3      2766            mov     (_main_mid_1_161 + 3),r7
0C0E           2767   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:638: mid[1] = Volts_at_Pin(YPOS_PIN);;
0C0E 75820B    2768            mov     dpl,#0x0B
0C11 120000    2769            lcall   _Volts_at_Pin
0C14 AC82      2770            mov     r4,dpl
0C16 AD83      2771            mov     r5,dph
0C18 AEF0      2772            mov     r6,b
0C1A FF        2773            mov     r7,a
0C1B 8CD4      2774            mov     (_main_mid_1_161 + 0x0004),r4
0C1D 8DD5      2775            mov     ((_main_mid_1_161 + 0x0004) + 1),r5
0C1F 8ED6      2776            mov     ((_main_mid_1_161 + 0x0004) + 2),r6
0C21 8FD7      2777            mov     ((_main_mid_1_161 + 0x0004) + 3),r7
0C23           2778   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:640: printf("LED voltage ref: 1.7854, midXvolts: %f, midYvolts: %f \r\n", mid[1], mid[0]);
0C23 C0D0      2779            push    _main_mid_1_161
0C25 C0D1      2780            push    (_main_mid_1_161 + 1)
0C27 C0D2      2781            push    (_main_mid_1_161 + 2)
0C29 C0D3      2782            push    (_main_mid_1_161 + 3)
0C2B C004      2783            push    ar4
0C2D C005      2784            push    ar5
0C2F C006      2785            push    ar6
0C31 C007      2786            push    ar7
0C33 7450      2787            mov     a,#__str_15
0C35 C0E0      2788            push    acc
0C37 74D5      2789            mov     a,#(__str_15 >> 8)
0C39 C0E0      2790            push    acc
0C3B 7480      2791            mov     a,#0x80
0C3D C0E0      2792            push    acc
0C3F 120000    2793            lcall   _printf
0C42 E581      2794            mov     a,sp
0C44 24F5      2795            add     a,#0xf5
0C46 F581      2796            mov     sp,a
0C48 D003      2797            pop     ar3
0C4A D002      2798            pop     ar2
0C4C           2799   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:642: while(1)
0C4C           2800   L031037?:
0C4C           2801   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:644: waitms(50);
0C4C 900032    2802            mov     dptr,#0x0032
0C4F C002      2803            push    ar2
0C51 C003      2804            push    ar3
0C53 120000    2805            lcall   _waitms
0C56           2806   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:646: v[0] = Volts_at_Pin(XPOS_PIN) ;
0C56 75820A    2807            mov     dpl,#0x0A
0C59 120000    2808            lcall   _Volts_at_Pin
0C5C AC82      2809            mov     r4,dpl
0C5E AD83      2810            mov     r5,dph
0C60 AEF0      2811            mov     r6,b
0C62 FF        2812            mov     r7,a
0C63 8C40      2813            mov     _main_v_1_161,r4
0C65 8D41      2814            mov     (_main_v_1_161 + 1),r5
0C67 8E42      2815            mov     (_main_v_1_161 + 2),r6
0C69 8F43      2816            mov     (_main_v_1_161 + 3),r7
0C6B           2817   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:647: v[1] = Volts_at_Pin(YPOS_PIN) ;
0C6B 75820B    2818            mov     dpl,#0x0B
0C6E 120000    2819            lcall   _Volts_at_Pin
0C71 AC82      2820            mov     r4,dpl
0C73 AD83      2821            mov     r5,dph
0C75 AEF0      2822            mov     r6,b
0C77 FF        2823            mov     r7,a
0C78 8C44      2824            mov     (_main_v_1_161 + 0x0004),r4
0C7A 8D45      2825            mov     ((_main_v_1_161 + 0x0004) + 1),r5
0C7C 8E46      2826            mov     ((_main_v_1_161 + 0x0004) + 2),r6
0C7E 8F47      2827            mov     ((_main_v_1_161 + 0x0004) + 3),r7
0C80           2828   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:649: GetPosition2(v, xy_pos, mid);
0C80 752090    2829            mov     _GetPosition2_PARM_2,#_main_xy_pos_1_161
0C83 752100    2830            mov     (_GetPosition2_PARM_2 + 1),#0x00
0C86 752240    2831            mov     (_GetPosition2_PARM_2 + 2),#0x40
0C89 75D0D0    2832            mov     _GetPosition2_PARM_3,#_main_mid_1_161
0C8C 75D100    2833            mov     (_GetPosition2_PARM_3 + 1),#0x00
0C8F 75D240    2834            mov     (_GetPosition2_PARM_3 + 2),#0x40
0C92 90B940    2835            mov     dptr,#_main_v_1_161
0C95 75F040    2836            mov     b,#0x40
0C98 120000    2837            lcall   _GetPosition2
0C9B           2838   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:651: mapped_dir = matchRange((int) xy_pos[0], (int) xy_pos[1]);
0C9B 859082    2839            mov     dpl,_main_xy_pos_1_161
0C9E 859183    2840            mov     dph,(_main_xy_pos_1_161 + 1)
0CA1 8592F0    2841            mov     b,(_main_xy_pos_1_161 + 2)
0CA4 E593      2842            mov     a,(_main_xy_pos_1_161 + 3)
0CA6 120000    2843            lcall   ___fs2sint
0CA9 AC82      2844            mov     r4,dpl
0CAB AD83      2845            mov     r5,dph
0CAD 859482    2846            mov     dpl,(_main_xy_pos_1_161 + 0x0004)
0CB0 859583    2847            mov     dph,((_main_xy_pos_1_161 + 0x0004) + 1)
0CB3 8596F0    2848            mov     b,((_main_xy_pos_1_161 + 0x0004) + 2)
0CB6 E597      2849            mov     a,((_main_xy_pos_1_161 + 0x0004) + 3)
0CB8 C004      2850            push    ar4
0CBA C005      2851            push    ar5
0CBC 120000    2852            lcall   ___fs2sint
0CBF 858200    2853            mov     _matchRange_PARM_2,dpl
0CC2 858301    2854            mov     (_matchRange_PARM_2 + 1),dph
0CC5 D005      2855            pop     ar5
0CC7 D004      2856            pop     ar4
0CC9 8C82      2857            mov     dpl,r4
0CCB 8D83      2858            mov     dph,r5
0CCD 120000    2859            lcall   _matchRange
0CD0 AC82      2860            mov     r4,dpl
0CD2 D003      2861            pop     ar3
0CD4 D002      2862            pop     ar2
0CD6           2863   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:662: sprintf(buff_x, "x=%.2f, Mlev:%d", xy_pos[0], metal_lev);
0CD6 C002      2864            push    ar2
0CD8 C003      2865            push    ar3
0CDA C004      2866            push    ar4
0CDC C002      2867            push    ar2
0CDE C003      2868            push    ar3
0CE0 C090      2869            push    _main_xy_pos_1_161
0CE2 C091      2870            push    (_main_xy_pos_1_161 + 1)
0CE4 C092      2871            push    (_main_xy_pos_1_161 + 2)
0CE6 C093      2872            push    (_main_xy_pos_1_161 + 3)
0CE8 7410      2873            mov     a,#__str_16
0CEA C0E0      2874            push    acc
0CEC 74D6      2875            mov     a,#(__str_16 >> 8)
0CEE C0E0      2876            push    acc
0CF0 7480      2877            mov     a,#0x80
0CF2 C0E0      2878            push    acc
0CF4 7420      2879            mov     a,#_main_buff_x_1_161
0CF6 C0E0      2880            push    acc
0CF8 74BA      2881            mov     a,#(_main_buff_x_1_161 >> 8)
0CFA C0E0      2882            push    acc
0CFC E4        2883            clr     a
0CFD C0E0      2884            push    acc
0CFF 120000    2885            lcall   _sprintf
0D02 E581      2886            mov     a,sp
0D04 24F4      2887            add     a,#0xf4
0D06 F581      2888            mov     sp,a
0D08           2889   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:663: LCDprint(buff_x, 1, 1);
0D08 757001    2890            mov     _LCDprint_PARM_2,#0x01
0D0B D240      2891            setb    _LCDprint_PARM_3
0D0D 90BA20    2892            mov     dptr,#_main_buff_x_1_161
0D10 75F000    2893            mov     b,#0x00
0D13 120000    2894            lcall   _LCDprint
0D16 D004      2895            pop     ar4
0D18           2896   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:664: sprintf(buff_y, "y=%.2f,pos=%c", xy_pos[1], mapped_dir);
0D18 EC        2897            mov     a,r4
0D19 33        2898            rlc     a
0D1A 95E0      2899            subb    a,acc
0D1C FD        2900            mov     r5,a
0D1D C004      2901            push    ar4
0D1F C005      2902            push    ar5
0D21 C004      2903            push    ar4
0D23 C005      2904            push    ar5
0D25 C094      2905            push    (_main_xy_pos_1_161 + 0x0004)
0D27 C095      2906            push    ((_main_xy_pos_1_161 + 0x0004) + 1)
0D29 C096      2907            push    ((_main_xy_pos_1_161 + 0x0004) + 2)
0D2B C097      2908            push    ((_main_xy_pos_1_161 + 0x0004) + 3)
0D2D 7490      2909            mov     a,#__str_17
0D2F C0E0      2910            push    acc
0D31 74D6      2911            mov     a,#(__str_17 >> 8)
0D33 C0E0      2912            push    acc
0D35 7480      2913            mov     a,#0x80
0D37 C0E0      2914            push    acc
0D39 7470      2915            mov     a,#_main_buff_y_1_161
0D3B C0E0      2916            push    acc
0D3D 74BA      2917            mov     a,#(_main_buff_y_1_161 >> 8)
0D3F C0E0      2918            push    acc
0D41 E4        2919            clr     a
0D42 C0E0      2920            push    acc
0D44 120000    2921            lcall   _sprintf
0D47 E581      2922            mov     a,sp
0D49 24F4      2923            add     a,#0xf4
0D4B F581      2924            mov     sp,a
0D4D           2925   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:665: LCDprint(buff_y, 2, 1);
0D4D 757002    2926            mov     _LCDprint_PARM_2,#0x02
0D50 D240      2927            setb    _LCDprint_PARM_3
0D52 90BA70    2928            mov     dptr,#_main_buff_y_1_161
0D55 75F000    2929            mov     b,#0x00
0D58 120000    2930            lcall   _LCDprint
0D5B           2931   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:667: sprintf(temp_buff, "%c\r\n", mapped_dir);
0D5B 74D0      2932            mov     a,#__str_18
0D5D C0E0      2933            push    acc
0D5F 74D6      2934            mov     a,#(__str_18 >> 8)
0D61 C0E0      2935            push    acc
0D63 7480      2936            mov     a,#0x80
0D65 C0E0      2937            push    acc
0D67 74C0      2938            mov     a,#_main_temp_buff_1_161
0D69 C0E0      2939            push    acc
0D6B 74BA      2940            mov     a,#(_main_temp_buff_1_161 >> 8)
0D6D C0E0      2941            push    acc
0D6F E4        2942            clr     a
0D70 C0E0      2943            push    acc
0D72 120000    2944            lcall   _sprintf
0D75 E581      2945            mov     a,sp
0D77 24F8      2946            add     a,#0xf8
0D79 F581      2947            mov     sp,a
0D7B           2948   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:668: sendstr1(temp_buff);
0D7B 90BAC0    2949            mov     dptr,#_main_temp_buff_1_161
0D7E 75F000    2950            mov     b,#0x00
0D81 120000    2951            lcall   _sendstr1
0D84 D003      2952            pop     ar3
0D86 D002      2953            pop     ar2
0D88           2954   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:671: if(P2_1 == 0)
0D88 20A110    2955            jb      _P2_1,L031007?
0D8B           2956   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:674: waitms(10);
0D8B 90000A    2957            mov     dptr,#0x000A
0D8E C002      2958            push    ar2
0D90 C003      2959            push    ar3
0D92 120000    2960            lcall   _waitms
0D95 D003      2961            pop     ar3
0D97 D002      2962            pop     ar2
0D99           2963   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:675: if(P2_1 == 0)
0D99 20A110    2964            jb      _P2_1,L031007?
0D9C           2965   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:677: while(P2_1 == 0);
0D9C           2966   L031001?:
0D9C 30A150    2967            jnb     _P2_1,L031001?
0D9F           2968   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:678: printf("--EMERGENCY--\r\n");
0D9F C002      2969            push    ar2
0DA1 C003      2970            push    ar3
0DA3 7490      2971            mov     a,#__str_19
0DA5 C0E0      2972            push    acc
0DA7 74D7      2973            mov     a,#(__str_19 >> 8)
0DA9 C0E0      2974            push    acc
0DAB 7480      2975            mov     a,#0x80
0DAD C0E0      2976            push    acc
0DAF 120000    2977            lcall   _printf
0DB2 1581      2978            dec     sp
0DB4 1581      2979            dec     sp
0DB6 1581      2980            dec     sp
0DB8           2981   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:679: sendstr1("€€\r\n");
0DB8 90D7D0    2982            mov     dptr,#__str_20
0DBB 75F080    2983            mov     b,#0x80
0DBE 120000    2984            lcall   _sendstr1
0DC1 D003      2985            pop     ar3
0DC3 D002      2986            pop     ar2
0DC5           2987   L031007?:
0DC5           2988   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:686: waitms(10);
0DC5 90000A    2989            mov     dptr,#0x000A
0DC8 C002      2990            push    ar2
0DCA C003      2991            push    ar3
0DCC 120000    2992            lcall   _waitms
0DCF           2993   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:688: sendstr1("m\r\n");
0DCF 90D810    2994            mov     dptr,#__str_21
0DD2 75F080    2995            mov     b,#0x80
0DD5 120000    2996            lcall   _sendstr1
0DD8           2997   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:690: putchar('.');
0DD8 75822E    2998            mov     dpl,#0x2E
0DDB 120000    2999            lcall   _putchar
0DDE D003      3000            pop     ar3
0DE0 D002      3001            pop     ar2
0DE2           3002   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:693: while (1) 
0DE2 7C00      3003            mov     r4,#0x00
0DE4 7D00      3004            mov     r5,#0x00
0DE6           3005   L031013?:
0DE6           3006   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:695: if (RXU1()) break;
0DE6 C002      3007            push    ar2
0DE8 C003      3008            push    ar3
0DEA C004      3009            push    ar4
0DEC C005      3010            push    ar5
0DEE 120000    3011            lcall   _RXU1
0DF1 E4        3012            clr     a
0DF2 33        3013            rlc     a
0DF3 D005      3014            pop     ar5
0DF5 D004      3015            pop     ar4
0DF7 D003      3016            pop     ar3
0DF9 D002      3017            pop     ar2
0DFB 7000      3018            jnz     L031014?
0DFD           3019   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:696: waitms_or_RI1(1);
0DFD 900001    3020            mov     dptr,#0x0001
0E00 C002      3021            push    ar2
0E02 C003      3022            push    ar3
0E04 C004      3023            push    ar4
0E06 C005      3024            push    ar5
0E08 120000    3025            lcall   _waitms_or_RI1
0E0B D005      3026            pop     ar5
0E0D D004      3027            pop     ar4
0E0F D003      3028            pop     ar3
0E11 D002      3029            pop     ar2
0E13           3030   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:697: timeout_cnt++;
0E13 0C        3031            inc     r4
0E14 BC0010    3032            cjne    r4,#0x00,L031060?
0E17 0D        3033            inc     r5
0E18           3034   L031060?:
0E18           3035   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:698: if (timeout_cnt>=500){
0E18 C3        3036            clr     c
0E19 EC        3037            mov     a,r4
0E1A 94F4      3038            subb    a,#0xF4
0E1C ED        3039            mov     a,r5
0E1D 6480      3040            xrl     a,#0x80
0E1F 9481      3041            subb    a,#0x81
0E21 4000      3042            jc      L031013?
0E23           3043   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:699: printf("timeout \r\n");
0E23 C002      3044            push    ar2
0E25 C003      3045            push    ar3
0E27 7450      3046            mov     a,#__str_22
0E29 C0E0      3047            push    acc
0E2B 74D9      3048            mov     a,#(__str_22 >> 8)
0E2D C0E0      3049            push    acc
0E2F 7480      3050            mov     a,#0x80
0E31 C0E0      3051            push    acc
0E33 120000    3052            lcall   _printf
0E36 1581      3053            dec     sp
0E38 1581      3054            dec     sp
0E3A 1581      3055            dec     sp
0E3C D003      3056            pop     ar3
0E3E D002      3057            pop     ar2
0E40           3058   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:700: break;
0E40           3059   L031014?:
0E40           3060   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:703: if (RXU1()) 
0E40 C002      3061            push    ar2
0E42 C003      3062            push    ar3
0E44 120000    3063            lcall   _RXU1
0E47 D003      3064            pop     ar3
0E49 D002      3065            pop     ar2
0E4B 4000      3066            jc      L031062?
0E4D 020000    3067            ljmp    L031037?
0E50           3068   L031062?:
0E50           3069   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:705: getstr1(buff);
0E50 904880    3070            mov     dptr,#_buff
0E53 75F040    3071            mov     b,#0x40
0E56 C002      3072            push    ar2
0E58 C003      3073            push    ar3
0E5A 120000    3074            lcall   _getstr1
0E5D           3075   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:706: printf("%s\r\n", buff);
0E5D 7480      3076            mov     a,#_buff
0E5F C0E0      3077            push    acc
0E61 7448      3078            mov     a,#(_buff >> 8)
0E63 C0E0      3079            push    acc
0E65 7440      3080            mov     a,#0x40
0E67 C0E0      3081            push    acc
0E69 74D0      3082            mov     a,#__str_23
0E6B C0E0      3083            push    acc
0E6D 74D9      3084            mov     a,#(__str_23 >> 8)
0E6F C0E0      3085            push    acc
0E71 7480      3086            mov     a,#0x80
0E73 C0E0      3087            push    acc
0E75 120000    3088            lcall   _printf
0E78 E581      3089            mov     a,sp
0E7A 24FA      3090            add     a,#0xfa
0E7C F581      3091            mov     sp,a
0E7E           3092   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:707: if(strlen(buff) == 2)
0E7E 904880    3093            mov     dptr,#_buff
0E81 75F040    3094            mov     b,#0x40
0E84 120000    3095            lcall   _strlen
0E87 AC82      3096            mov     r4,dpl
0E89 AD83      3097            mov     r5,dph
0E8B D003      3098            pop     ar3
0E8D D002      3099            pop     ar2
0E8F BC0250    3100            cjne    r4,#0x02,L031063?
0E92 BD0050    3101            cjne    r5,#0x00,L031063?
0E95 8000      3102            sjmp    L031064?
0E97           3103   L031063?:
0E97 020000    3104            ljmp    L031037?
0E9A           3105   L031064?:
0E9A           3106   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:709: if(buff[0] != 'z')
0E9A 7880      3107            mov     r0,#_buff
0E9C 8604      3108            mov     ar4,@r0
0E9E BC7AD0    3109            cjne    r4,#0x7A,L031065?
0EA1 8000      3110            sjmp    L031030?
0EA3           3111   L031065?:
0EA3           3112   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:711: if(buff[0] == 'a') {
0EA3 BC6150    3113            cjne    r4,#0x61,L031027?
0EA6           3114   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:712: loadTimer2(metalLevel_1);
0EA6 90012C    3115            mov     dptr,#0x012C
0EA9 E4        3116            clr     a
0EAA F5F0      3117            mov     b,a
0EAC 120000    3118            lcall   _loadTimer2
0EAF           3119   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:713: metal_lev = 1;
0EAF 7A01      3120            mov     r2,#0x01
0EB1 7B00      3121            mov     r3,#0x00
0EB3 020000    3122            ljmp    L031037?
0EB6           3123   L031027?:
0EB6           3124   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:715: else if(buff[0] == 'b') {
0EB6 BC6290    3125            cjne    r4,#0x62,L031024?
0EB9           3126   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:716: loadTimer2(metalLevel_2);
0EB9 900190    3127            mov     dptr,#0x0190
0EBC E4        3128            clr     a
0EBD F5F0      3129            mov     b,a
0EBF 120000    3130            lcall   _loadTimer2
0EC2           3131   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:717: metal_lev = 2;
0EC2 7A02      3132            mov     r2,#0x02
0EC4 7B00      3133            mov     r3,#0x00
0EC6 020000    3134            ljmp    L031037?
0EC9           3135   L031024?:
0EC9           3136   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:719: else if(buff[0] == 'c') {
0EC9 BC63D0    3137            cjne    r4,#0x63,L031021?
0ECC           3138   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:720: loadTimer2(metalLevel_3);
0ECC 9001F4    3139            mov     dptr,#0x01F4
0ECF E4        3140            clr     a
0ED0 F5F0      3141            mov     b,a
0ED2 120000    3142            lcall   _loadTimer2
0ED5           3143   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:721: metal_lev = 3;
0ED5 7A03      3144            mov     r2,#0x03
0ED7 7B00      3145            mov     r3,#0x00
0ED9 020000    3146            ljmp    L031037?
0EDC           3147   L031021?:
0EDC           3148   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:723: else if(buff[0] == 'd') {
0EDC BC6410    3149            cjne    r4,#0x64,L031018?
0EDF           3150   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:724: loadTimer2(metalLevel_4);
0EDF 900258    3151            mov     dptr,#0x0258
0EE2 E4        3152            clr     a
0EE3 F5F0      3153            mov     b,a
0EE5 120000    3154            lcall   _loadTimer2
0EE8           3155   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:725: metal_lev = 4;
0EE8 7A04      3156            mov     r2,#0x04
0EEA 7B00      3157            mov     r3,#0x00
0EEC 020000    3158            ljmp    L031037?
0EEF           3159   L031018?:
0EEF           3160   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:727: else if(buff[0] == 'e') {
0EEF BC6550    3161            cjne    r4,#0x65,L031074?
0EF2 8000      3162            sjmp    L031075?
0EF4           3163   L031074?:
0EF4 020000    3164            ljmp    L031037?
0EF7           3165   L031075?:
0EF7           3166   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:728: loadTimer2(metalLevel_5);
0EF7 9002BC    3167            mov     dptr,#0x02BC
0EFA E4        3168            clr     a
0EFB F5F0      3169            mov     b,a
0EFD 120000    3170            lcall   _loadTimer2
0F00           3171   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:729: metal_lev = 5;
0F00 7A05      3172            mov     r2,#0x05
0F02 7B00      3173            mov     r3,#0x00
0F04 020000    3174            ljmp    L031037?
0F07           3175   L031030?:
0F07           3176   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:734: TR2 = 0;                // Stop timer 2
0F07 C2CA      3177            clr     _TR2
0F09           3178   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:735: BUZZER_OUT = 0;
0F09 C282      3179            clr     _P0_2
0F0B           3180   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\integrated_files\EFM8integration.c:736: metal_lev = 0;
0F0B 7A00      3181            mov     r2,#0x00
0F0D 7B00      3182            mov     r3,#0x00
0F0F 020000    3183            ljmp    L031037?
0F12           3184            rseg R_CSEG
0F12           3185   
0000           3186            rseg R_XINIT
0000           3187   
0000           3188            rseg R_CONST
0000           3189   __str_0:
0000 436F6D6D  3190            db 'Command: %s'
     616E643A
     202573
000B 00        3191            db 0x00
000C           3192   __str_1:
000C 52657370  3193            db 'Response: %s'
     6F6E7365
     3A202573
0018 0D        3194            db 0x0D
0019 0A        3195            db 0x0A
001A 00        3196            db 0x00
001B           3197   __str_2:
001B 1B        3198            db 0x1B
001C 5B324A    3199            db '[2J'
001F 00        3200            db 0x00
0020           3201   __str_3:
0020 4D657461  3202            db 'Metal Detecting Robot Controller'
     6C204465
     74656374
     696E6720
     526F626F
     7420436F
     6E74726F
     6C6C6572
0040 0A        3203            db 0x0A
0041 46696C65  3204            db 'File: %s'
     3A202573
0049 0A        3205            db 0x0A
004A 436F6D70  3206            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
005A 0A        3207            db 0x0A
005B 0A        3208            db 0x0A
005C 00        3209            db 0x00
005D           3210   __str_4:
005D 433A      3211            db 'C:'
005F 5C        3212            db 0x5C
0060 55736572  3213            db 'Users'
     73
0065 5C        3214            db 0x5C
0066 6B657962  3215            db 'keybo'
     6F
006B 5C        3216            db 0x5C
006C 446F6375  3217            db 'Documents'
     6D656E74
     73
0075 5C        3218            db 0x5C
0076 47697448  3219            db 'GitHub'
     7562
007C 5C        3220            db 0x5C
007D 50726F6A  3221            db 'Project2ELEC291'
     65637432
     454C4543
     323931
008C 5C        3222            db 0x5C
008D 696E7465  3223            db 'integrated_f'
     67726174
     65645F66
0099 696C6573  3224            db 'iles'
009D 5C        3225            db 0x5C
009E 45464D38  3226            db 'EFM8integration.c'
     696E7465
     67726174
     696F6E2E
     63
00AF 00        3227            db 0x00
00B0           3228   __str_5:
00B0 41707220  3229            db 'Apr  2 2024'
     20322032
     303234
00BB 00        3230            db 0x00
00BC           3231   __str_6:
00BC 31303A32  3232            db '10:26:35'
     363A3335
00C4 00        3233            db 0x00
00C5           3234   __str_7:
00C5 41542B44  3235            db 'AT+DVIDA0A0'
     56494441
     304130
00D0 0D        3236            db 0x0D
00D1 0A        3237            db 0x0A
00D2 00        3238            db 0x00
00D3           3239   __str_8:
00D3 41542B56  3240            db 'AT+VER'
     4552
00D9 0D        3241            db 0x0D
00DA 0A        3242            db 0x0A
00DB 00        3243            db 0x00
00DC           3244   __str_9:
00DC 41542B42  3245            db 'AT+BAUD'
     415544
00E3 0D        3246            db 0x0D
00E4 0A        3247            db 0x0A
00E5 00        3248            db 0x00
00E6           3249   __str_10:
00E6 41542B52  3250            db 'AT+RFID'
     464944
00ED 0D        3251            db 0x0D
00EE 0A        3252            db 0x0A
00EF 00        3253            db 0x00
00F0           3254   __str_11:
00F0 41542B44  3255            db 'AT+DVID'
     564944
00F7 0D        3256            db 0x0D
00F8 0A        3257            db 0x0A
00F9 00        3258            db 0x00
00FA           3259   __str_12:
00FA 41542B52  3260            db 'AT+RFC'
     4643
0100 0D        3261            db 0x0D
0101 0A        3262            db 0x0A
0102 00        3263            db 0x00
0103           3264   __str_13:
0103 41542B50  3265            db 'AT+POWE'
     4F5745
010A 0D        3266            db 0x0D
010B 0A        3267            db 0x0A
010C 00        3268            db 0x00
010D           3269   __str_14:
010D 41542B43  3270            db 'AT+CLSS'
     4C5353
0114 0D        3271            db 0x0D
0115 0A        3272            db 0x0A
0116 00        3273            db 0x00
0117           3274   __str_15:
0117 4C454420  3275            db 'LED voltage ref: 1.7854, midXvolts: %f, midYvolts: %f '
     766F6C74
     61676520
     7265663A
     20312E37
     3835342C
     206D6964
     58766F6C
     74733A20
     25662C20
     6D696459
     766F6C74
     733A2025
     6620
014D 0D        3276            db 0x0D
014E 0A        3277            db 0x0A
014F 00        3278            db 0x00
0150           3279   __str_16:
0150 783D252E  3280            db 'x=%.2f, Mlev:%d'
     32662C20
     4D6C6576
     3A2564
015F 00        3281            db 0x00
0160           3282   __str_17:
0160 793D252E  3283            db 'y=%.2f,pos=%c'
     32662C70
     6F733D25
     63
016D 00        3284            db 0x00
016E           3285   __str_18:
016E 2563      3286            db '%c'
0170 0D        3287            db 0x0D
0171 0A        3288            db 0x0A
0172 00        3289            db 0x00
0173           3290   __str_19:
0173 2D2D454D  3291            db '--EMERGENCY--'
     45524745
     4E43592D
     2D
0180 0D        3292            db 0x0D
0181 0A        3293            db 0x0A
0182 00        3294            db 0x00
0183           3295   __str_20:
0183 E2        3296            db 0xE2
0184 82        3297            db 0x82
0185 AC        3298            db 0xAC
0186 E2        3299            db 0xE2
0187 82        3300            db 0x82
0188 AC        3301            db 0xAC
0189 0D        3302            db 0x0D
018A 0A        3303            db 0x0A
018B 00        3304            db 0x00
018C           3305   __str_21:
018C 6D        3306            db 'm'
018D 0D        3307            db 0x0D
018E 0A        3308            db 0x0A
018F 00        3309            db 0x00
0190           3310   __str_22:
0190 74696D65  3311            db 'timeout '
     6F757420
0198 0D        3312            db 0x0D
0199 0A        3313            db 0x0A
019A 00        3314            db 0x00
019B           3315   __str_23:
019B 2573      3316            db '%s'
019D 0D        3317            db 0x0D
019E 0A        3318            db 0x0A
019F 00        3319            db 0x00
01A0           3320   
002E           3321            CSEG
002E           3322   
002E           3323   end
