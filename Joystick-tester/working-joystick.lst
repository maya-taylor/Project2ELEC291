0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Sun Mar 31 16:58:56 2024
0000              5   ;--------------------------------------------------------
                  5   $name working_joystick
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _GetPosition2
0000             30            public _map2
0000             31            public _LCDprint
0000             32            public _LCD_4BIT
0000             33            public _WriteCommand
0000             34            public _WriteData
0000             35            public _LCD_byte
0000             36            public _LCD_pulse
0000             37            public _Volts_at_Pin
0000             38            public _Get_ADC
0000             39            public _ADC_at_Pin
0000             40            public _TIMER0_Init
0000             41            public _InitPinADC
0000             42            public _waitms
0000             43            public _Timer3us
0000             44            public _InitADC
0000             45            public __c51_external_startup
0000             46            public _LCDprint_PARM_3
0000             47            public _GetPosition2_PARM_2
0000             48            public _map2_PARM_5
0000             49            public _map2_PARM_4
0000             50            public _map2_PARM_3
0000             51            public _map2_PARM_2
0000             52            public _LCDprint_PARM_2
0000             53            public _overflow_count
0000             54   ;--------------------------------------------------------
0000             55   ; Special Function Registers
0000             56   ;--------------------------------------------------------
0000             57   _ACC            DATA 0xe0
0000             58   _ADC0ASAH       DATA 0xb6
0000             59   _ADC0ASAL       DATA 0xb5
0000             60   _ADC0ASCF       DATA 0xa1
0000             61   _ADC0ASCT       DATA 0xc7
0000             62   _ADC0CF0        DATA 0xbc
0000             63   _ADC0CF1        DATA 0xb9
0000             64   _ADC0CF2        DATA 0xdf
0000             65   _ADC0CN0        DATA 0xe8
0000             66   _ADC0CN1        DATA 0xb2
0000             67   _ADC0CN2        DATA 0xb3
0000             68   _ADC0GTH        DATA 0xc4
0000             69   _ADC0GTL        DATA 0xc3
0000             70   _ADC0H          DATA 0xbe
0000             71   _ADC0L          DATA 0xbd
0000             72   _ADC0LTH        DATA 0xc6
0000             73   _ADC0LTL        DATA 0xc5
0000             74   _ADC0MX         DATA 0xbb
0000             75   _B              DATA 0xf0
0000             76   _CKCON0         DATA 0x8e
0000             77   _CKCON1         DATA 0xa6
0000             78   _CLEN0          DATA 0xc6
0000             79   _CLIE0          DATA 0xc7
0000             80   _CLIF0          DATA 0xe8
0000             81   _CLKSEL         DATA 0xa9
0000             82   _CLOUT0         DATA 0xd1
0000             83   _CLU0CF         DATA 0xb1
0000             84   _CLU0FN         DATA 0xaf
0000             85   _CLU0MX         DATA 0x84
0000             86   _CLU1CF         DATA 0xb3
0000             87   _CLU1FN         DATA 0xb2
0000             88   _CLU1MX         DATA 0x85
0000             89   _CLU2CF         DATA 0xb6
0000             90   _CLU2FN         DATA 0xb5
0000             91   _CLU2MX         DATA 0x91
0000             92   _CLU3CF         DATA 0xbf
0000             93   _CLU3FN         DATA 0xbe
0000             94   _CLU3MX         DATA 0xae
0000             95   _CMP0CN0        DATA 0x9b
0000             96   _CMP0CN1        DATA 0x99
0000             97   _CMP0MD         DATA 0x9d
0000             98   _CMP0MX         DATA 0x9f
0000             99   _CMP1CN0        DATA 0xbf
0000            100   _CMP1CN1        DATA 0xac
0000            101   _CMP1MD         DATA 0xab
0000            102   _CMP1MX         DATA 0xaa
0000            103   _CRC0CN0        DATA 0xce
0000            104   _CRC0CN1        DATA 0x86
0000            105   _CRC0CNT        DATA 0xd3
0000            106   _CRC0DAT        DATA 0xcb
0000            107   _CRC0FLIP       DATA 0xcf
0000            108   _CRC0IN         DATA 0xca
0000            109   _CRC0ST         DATA 0xd2
0000            110   _DAC0CF0        DATA 0x91
0000            111   _DAC0CF1        DATA 0x92
0000            112   _DAC0H          DATA 0x85
0000            113   _DAC0L          DATA 0x84
0000            114   _DAC1CF0        DATA 0x93
0000            115   _DAC1CF1        DATA 0x94
0000            116   _DAC1H          DATA 0x8a
0000            117   _DAC1L          DATA 0x89
0000            118   _DAC2CF0        DATA 0x95
0000            119   _DAC2CF1        DATA 0x96
0000            120   _DAC2H          DATA 0x8c
0000            121   _DAC2L          DATA 0x8b
0000            122   _DAC3CF0        DATA 0x9a
0000            123   _DAC3CF1        DATA 0x9c
0000            124   _DAC3H          DATA 0x8e
0000            125   _DAC3L          DATA 0x8d
0000            126   _DACGCF0        DATA 0x88
0000            127   _DACGCF1        DATA 0x98
0000            128   _DACGCF2        DATA 0xa2
0000            129   _DERIVID        DATA 0xad
0000            130   _DEVICEID       DATA 0xb5
0000            131   _DPH            DATA 0x83
0000            132   _DPL            DATA 0x82
0000            133   _EIE1           DATA 0xe6
0000            134   _EIE2           DATA 0xf3
0000            135   _EIP1           DATA 0xbb
0000            136   _EIP1H          DATA 0xee
0000            137   _EIP2           DATA 0xed
0000            138   _EIP2H          DATA 0xf6
0000            139   _EMI0CN         DATA 0xe7
0000            140   _FLKEY          DATA 0xb7
0000            141   _HFO0CAL        DATA 0xc7
0000            142   _HFO1CAL        DATA 0xd6
0000            143   _HFOCN          DATA 0xef
0000            144   _I2C0ADM        DATA 0xff
0000            145   _I2C0CN0        DATA 0xba
0000            146   _I2C0DIN        DATA 0xbc
0000            147   _I2C0DOUT       DATA 0xbb
0000            148   _I2C0FCN0       DATA 0xad
0000            149   _I2C0FCN1       DATA 0xab
0000            150   _I2C0FCT        DATA 0xf5
0000            151   _I2C0SLAD       DATA 0xbd
0000            152   _I2C0STAT       DATA 0xb9
0000            153   _IE             DATA 0xa8
0000            154   _IP             DATA 0xb8
0000            155   _IPH            DATA 0xf2
0000            156   _IT01CF         DATA 0xe4
0000            157   _LFO0CN         DATA 0xb1
0000            158   _P0             DATA 0x80
0000            159   _P0MASK         DATA 0xfe
0000            160   _P0MAT          DATA 0xfd
0000            161   _P0MDIN         DATA 0xf1
0000            162   _P0MDOUT        DATA 0xa4
0000            163   _P0SKIP         DATA 0xd4
0000            164   _P1             DATA 0x90
0000            165   _P1MASK         DATA 0xee
0000            166   _P1MAT          DATA 0xed
0000            167   _P1MDIN         DATA 0xf2
0000            168   _P1MDOUT        DATA 0xa5
0000            169   _P1SKIP         DATA 0xd5
0000            170   _P2             DATA 0xa0
0000            171   _P2MASK         DATA 0xfc
0000            172   _P2MAT          DATA 0xfb
0000            173   _P2MDIN         DATA 0xf3
0000            174   _P2MDOUT        DATA 0xa6
0000            175   _P2SKIP         DATA 0xcc
0000            176   _P3             DATA 0xb0
0000            177   _P3MDIN         DATA 0xf4
0000            178   _P3MDOUT        DATA 0x9c
0000            179   _PCA0CENT       DATA 0x9e
0000            180   _PCA0CLR        DATA 0x9c
0000            181   _PCA0CN0        DATA 0xd8
0000            182   _PCA0CPH0       DATA 0xfc
0000            183   _PCA0CPH1       DATA 0xea
0000            184   _PCA0CPH2       DATA 0xec
0000            185   _PCA0CPH3       DATA 0xf5
0000            186   _PCA0CPH4       DATA 0x85
0000            187   _PCA0CPH5       DATA 0xde
0000            188   _PCA0CPL0       DATA 0xfb
0000            189   _PCA0CPL1       DATA 0xe9
0000            190   _PCA0CPL2       DATA 0xeb
0000            191   _PCA0CPL3       DATA 0xf4
0000            192   _PCA0CPL4       DATA 0x84
0000            193   _PCA0CPL5       DATA 0xdd
0000            194   _PCA0CPM0       DATA 0xda
0000            195   _PCA0CPM1       DATA 0xdb
0000            196   _PCA0CPM2       DATA 0xdc
0000            197   _PCA0CPM3       DATA 0xae
0000            198   _PCA0CPM4       DATA 0xaf
0000            199   _PCA0CPM5       DATA 0xcc
0000            200   _PCA0H          DATA 0xfa
0000            201   _PCA0L          DATA 0xf9
0000            202   _PCA0MD         DATA 0xd9
0000            203   _PCA0POL        DATA 0x96
0000            204   _PCA0PWM        DATA 0xf7
0000            205   _PCON0          DATA 0x87
0000            206   _PCON1          DATA 0xcd
0000            207   _PFE0CN         DATA 0xc1
0000            208   _PRTDRV         DATA 0xf6
0000            209   _PSCTL          DATA 0x8f
0000            210   _PSTAT0         DATA 0xaa
0000            211   _PSW            DATA 0xd0
0000            212   _REF0CN         DATA 0xd1
0000            213   _REG0CN         DATA 0xc9
0000            214   _REVID          DATA 0xb6
0000            215   _RSTSRC         DATA 0xef
0000            216   _SBCON1         DATA 0x94
0000            217   _SBRLH1         DATA 0x96
0000            218   _SBRLL1         DATA 0x95
0000            219   _SBUF           DATA 0x99
0000            220   _SBUF0          DATA 0x99
0000            221   _SBUF1          DATA 0x92
0000            222   _SCON           DATA 0x98
0000            223   _SCON0          DATA 0x98
0000            224   _SCON1          DATA 0xc8
0000            225   _SFRPAGE        DATA 0xa7
0000            226   _SFRPGCN        DATA 0xbc
0000            227   _SFRSTACK       DATA 0xd7
0000            228   _SMB0ADM        DATA 0xd6
0000            229   _SMB0ADR        DATA 0xd7
0000            230   _SMB0CF         DATA 0xc1
0000            231   _SMB0CN0        DATA 0xc0
0000            232   _SMB0DAT        DATA 0xc2
0000            233   _SMB0FCN0       DATA 0xc3
0000            234   _SMB0FCN1       DATA 0xc4
0000            235   _SMB0FCT        DATA 0xef
0000            236   _SMB0RXLN       DATA 0xc5
0000            237   _SMB0TC         DATA 0xac
0000            238   _SMOD1          DATA 0x93
0000            239   _SP             DATA 0x81
0000            240   _SPI0CFG        DATA 0xa1
0000            241   _SPI0CKR        DATA 0xa2
0000            242   _SPI0CN0        DATA 0xf8
0000            243   _SPI0DAT        DATA 0xa3
0000            244   _SPI0FCN0       DATA 0x9a
0000            245   _SPI0FCN1       DATA 0x9b
0000            246   _SPI0FCT        DATA 0xf7
0000            247   _SPI0PCF        DATA 0xdf
0000            248   _TCON           DATA 0x88
0000            249   _TH0            DATA 0x8c
0000            250   _TH1            DATA 0x8d
0000            251   _TL0            DATA 0x8a
0000            252   _TL1            DATA 0x8b
0000            253   _TMOD           DATA 0x89
0000            254   _TMR2CN0        DATA 0xc8
0000            255   _TMR2CN1        DATA 0xfd
0000            256   _TMR2H          DATA 0xcf
0000            257   _TMR2L          DATA 0xce
0000            258   _TMR2RLH        DATA 0xcb
0000            259   _TMR2RLL        DATA 0xca
0000            260   _TMR3CN0        DATA 0x91
0000            261   _TMR3CN1        DATA 0xfe
0000            262   _TMR3H          DATA 0x95
0000            263   _TMR3L          DATA 0x94
0000            264   _TMR3RLH        DATA 0x93
0000            265   _TMR3RLL        DATA 0x92
0000            266   _TMR4CN0        DATA 0x98
0000            267   _TMR4CN1        DATA 0xff
0000            268   _TMR4H          DATA 0xa5
0000            269   _TMR4L          DATA 0xa4
0000            270   _TMR4RLH        DATA 0xa3
0000            271   _TMR4RLL        DATA 0xa2
0000            272   _TMR5CN0        DATA 0xc0
0000            273   _TMR5CN1        DATA 0xf1
0000            274   _TMR5H          DATA 0xd5
0000            275   _TMR5L          DATA 0xd4
0000            276   _TMR5RLH        DATA 0xd3
0000            277   _TMR5RLL        DATA 0xd2
0000            278   _UART0PCF       DATA 0xd9
0000            279   _UART1FCN0      DATA 0x9d
0000            280   _UART1FCN1      DATA 0xd8
0000            281   _UART1FCT       DATA 0xfa
0000            282   _UART1LIN       DATA 0x9e
0000            283   _UART1PCF       DATA 0xda
0000            284   _VDM0CN         DATA 0xff
0000            285   _WDTCN          DATA 0x97
0000            286   _XBR0           DATA 0xe1
0000            287   _XBR1           DATA 0xe2
0000            288   _XBR2           DATA 0xe3
0000            289   _XOSC0CN        DATA 0x86
0000            290   _DPTR           DATA 0x8382
0000            291   _TMR2RL         DATA 0xcbca
0000            292   _TMR3RL         DATA 0x9392
0000            293   _TMR4RL         DATA 0xa3a2
0000            294   _TMR5RL         DATA 0xd3d2
0000            295   _TMR0           DATA 0x8c8a
0000            296   _TMR1           DATA 0x8d8b
0000            297   _TMR2           DATA 0xcfce
0000            298   _TMR3           DATA 0x9594
0000            299   _TMR4           DATA 0xa5a4
0000            300   _TMR5           DATA 0xd5d4
0000            301   _SBRL1          DATA 0x9695
0000            302   _PCA0           DATA 0xfaf9
0000            303   _PCA0CP0        DATA 0xfcfb
0000            304   _PCA0CP1        DATA 0xeae9
0000            305   _PCA0CP2        DATA 0xeceb
0000            306   _PCA0CP3        DATA 0xf5f4
0000            307   _PCA0CP4        DATA 0x8584
0000            308   _PCA0CP5        DATA 0xdedd
0000            309   _ADC0ASA        DATA 0xb6b5
0000            310   _ADC0GT         DATA 0xc4c3
0000            311   _ADC0           DATA 0xbebd
0000            312   _ADC0LT         DATA 0xc6c5
0000            313   _DAC0           DATA 0x8584
0000            314   _DAC1           DATA 0x8a89
0000            315   _DAC2           DATA 0x8c8b
0000            316   _DAC3           DATA 0x8e8d
0000            317   ;--------------------------------------------------------
0000            318   ; special function bits
0000            319   ;--------------------------------------------------------
0000            320   _ACC_0          BIT 0xe0
0000            321   _ACC_1          BIT 0xe1
0000            322   _ACC_2          BIT 0xe2
0000            323   _ACC_3          BIT 0xe3
0000            324   _ACC_4          BIT 0xe4
0000            325   _ACC_5          BIT 0xe5
0000            326   _ACC_6          BIT 0xe6
0000            327   _ACC_7          BIT 0xe7
0000            328   _TEMPE          BIT 0xe8
0000            329   _ADGN0          BIT 0xe9
0000            330   _ADGN1          BIT 0xea
0000            331   _ADWINT         BIT 0xeb
0000            332   _ADBUSY         BIT 0xec
0000            333   _ADINT          BIT 0xed
0000            334   _IPOEN          BIT 0xee
0000            335   _ADEN           BIT 0xef
0000            336   _B_0            BIT 0xf0
0000            337   _B_1            BIT 0xf1
0000            338   _B_2            BIT 0xf2
0000            339   _B_3            BIT 0xf3
0000            340   _B_4            BIT 0xf4
0000            341   _B_5            BIT 0xf5
0000            342   _B_6            BIT 0xf6
0000            343   _B_7            BIT 0xf7
0000            344   _C0FIF          BIT 0xe8
0000            345   _C0RIF          BIT 0xe9
0000            346   _C1FIF          BIT 0xea
0000            347   _C1RIF          BIT 0xeb
0000            348   _C2FIF          BIT 0xec
0000            349   _C2RIF          BIT 0xed
0000            350   _C3FIF          BIT 0xee
0000            351   _C3RIF          BIT 0xef
0000            352   _D1SRC0         BIT 0x88
0000            353   _D1SRC1         BIT 0x89
0000            354   _D1AMEN         BIT 0x8a
0000            355   _D01REFSL       BIT 0x8b
0000            356   _D3SRC0         BIT 0x8c
0000            357   _D3SRC1         BIT 0x8d
0000            358   _D3AMEN         BIT 0x8e
0000            359   _D23REFSL       BIT 0x8f
0000            360   _D0UDIS         BIT 0x98
0000            361   _D1UDIS         BIT 0x99
0000            362   _D2UDIS         BIT 0x9a
0000            363   _D3UDIS         BIT 0x9b
0000            364   _EX0            BIT 0xa8
0000            365   _ET0            BIT 0xa9
0000            366   _EX1            BIT 0xaa
0000            367   _ET1            BIT 0xab
0000            368   _ES0            BIT 0xac
0000            369   _ET2            BIT 0xad
0000            370   _ESPI0          BIT 0xae
0000            371   _EA             BIT 0xaf
0000            372   _PX0            BIT 0xb8
0000            373   _PT0            BIT 0xb9
0000            374   _PX1            BIT 0xba
0000            375   _PT1            BIT 0xbb
0000            376   _PS0            BIT 0xbc
0000            377   _PT2            BIT 0xbd
0000            378   _PSPI0          BIT 0xbe
0000            379   _P0_0           BIT 0x80
0000            380   _P0_1           BIT 0x81
0000            381   _P0_2           BIT 0x82
0000            382   _P0_3           BIT 0x83
0000            383   _P0_4           BIT 0x84
0000            384   _P0_5           BIT 0x85
0000            385   _P0_6           BIT 0x86
0000            386   _P0_7           BIT 0x87
0000            387   _P1_0           BIT 0x90
0000            388   _P1_1           BIT 0x91
0000            389   _P1_2           BIT 0x92
0000            390   _P1_3           BIT 0x93
0000            391   _P1_4           BIT 0x94
0000            392   _P1_5           BIT 0x95
0000            393   _P1_6           BIT 0x96
0000            394   _P1_7           BIT 0x97
0000            395   _P2_0           BIT 0xa0
0000            396   _P2_1           BIT 0xa1
0000            397   _P2_2           BIT 0xa2
0000            398   _P2_3           BIT 0xa3
0000            399   _P2_4           BIT 0xa4
0000            400   _P2_5           BIT 0xa5
0000            401   _P2_6           BIT 0xa6
0000            402   _P3_0           BIT 0xb0
0000            403   _P3_1           BIT 0xb1
0000            404   _P3_2           BIT 0xb2
0000            405   _P3_3           BIT 0xb3
0000            406   _P3_4           BIT 0xb4
0000            407   _P3_7           BIT 0xb7
0000            408   _CCF0           BIT 0xd8
0000            409   _CCF1           BIT 0xd9
0000            410   _CCF2           BIT 0xda
0000            411   _CCF3           BIT 0xdb
0000            412   _CCF4           BIT 0xdc
0000            413   _CCF5           BIT 0xdd
0000            414   _CR             BIT 0xde
0000            415   _CF             BIT 0xdf
0000            416   _PARITY         BIT 0xd0
0000            417   _F1             BIT 0xd1
0000            418   _OV             BIT 0xd2
0000            419   _RS0            BIT 0xd3
0000            420   _RS1            BIT 0xd4
0000            421   _F0             BIT 0xd5
0000            422   _AC             BIT 0xd6
0000            423   _CY             BIT 0xd7
0000            424   _RI             BIT 0x98
0000            425   _TI             BIT 0x99
0000            426   _RB8            BIT 0x9a
0000            427   _TB8            BIT 0x9b
0000            428   _REN            BIT 0x9c
0000            429   _CE             BIT 0x9d
0000            430   _SMODE          BIT 0x9e
0000            431   _RI1            BIT 0xc8
0000            432   _TI1            BIT 0xc9
0000            433   _RBX1           BIT 0xca
0000            434   _TBX1           BIT 0xcb
0000            435   _REN1           BIT 0xcc
0000            436   _PERR1          BIT 0xcd
0000            437   _OVR1           BIT 0xce
0000            438   _SI             BIT 0xc0
0000            439   _ACK            BIT 0xc1
0000            440   _ARBLOST        BIT 0xc2
0000            441   _ACKRQ          BIT 0xc3
0000            442   _STO            BIT 0xc4
0000            443   _STA            BIT 0xc5
0000            444   _TXMODE         BIT 0xc6
0000            445   _MASTER         BIT 0xc7
0000            446   _SPIEN          BIT 0xf8
0000            447   _TXNF           BIT 0xf9
0000            448   _NSSMD0         BIT 0xfa
0000            449   _NSSMD1         BIT 0xfb
0000            450   _RXOVRN         BIT 0xfc
0000            451   _MODF           BIT 0xfd
0000            452   _WCOL           BIT 0xfe
0000            453   _SPIF           BIT 0xff
0000            454   _IT0            BIT 0x88
0000            455   _IE0            BIT 0x89
0000            456   _IT1            BIT 0x8a
0000            457   _IE1            BIT 0x8b
0000            458   _TR0            BIT 0x8c
0000            459   _TF0            BIT 0x8d
0000            460   _TR1            BIT 0x8e
0000            461   _TF1            BIT 0x8f
0000            462   _T2XCLK0        BIT 0xc8
0000            463   _T2XCLK1        BIT 0xc9
0000            464   _TR2            BIT 0xca
0000            465   _T2SPLIT        BIT 0xcb
0000            466   _TF2CEN         BIT 0xcc
0000            467   _TF2LEN         BIT 0xcd
0000            468   _TF2L           BIT 0xce
0000            469   _TF2H           BIT 0xcf
0000            470   _T4XCLK0        BIT 0x98
0000            471   _T4XCLK1        BIT 0x99
0000            472   _TR4            BIT 0x9a
0000            473   _T4SPLIT        BIT 0x9b
0000            474   _TF4CEN         BIT 0x9c
0000            475   _TF4LEN         BIT 0x9d
0000            476   _TF4L           BIT 0x9e
0000            477   _TF4H           BIT 0x9f
0000            478   _T5XCLK0        BIT 0xc0
0000            479   _T5XCLK1        BIT 0xc1
0000            480   _TR5            BIT 0xc2
0000            481   _T5SPLIT        BIT 0xc3
0000            482   _TF5CEN         BIT 0xc4
0000            483   _TF5LEN         BIT 0xc5
0000            484   _TF5L           BIT 0xc6
0000            485   _TF5H           BIT 0xc7
0000            486   _RIE            BIT 0xd8
0000            487   _RXTO0          BIT 0xd9
0000            488   _RXTO1          BIT 0xda
0000            489   _RFRQ           BIT 0xdb
0000            490   _TIE            BIT 0xdc
0000            491   _TXHOLD         BIT 0xdd
0000            492   _TXNF1          BIT 0xde
0000            493   _TFRQ           BIT 0xdf
0000            494   ;--------------------------------------------------------
0000            495   ; overlayable register banks
0000            496   ;--------------------------------------------------------
0000            497            rbank0 segment data overlay
0000            498   ;--------------------------------------------------------
0000            499   ; internal ram data
0000            500   ;--------------------------------------------------------
0000            501            rseg R_DSEG
0000            502   _overflow_count:
0000            503            ds 1
0001            504   _LCDprint_PARM_2:
0001            505            ds 1
0002            506   _map2_PARM_2:
0002            507            ds 4
0006            508   _map2_PARM_3:
0006            509            ds 4
000A            510   _map2_PARM_4:
000A            511            ds 4
000E            512   _map2_PARM_5:
000E            513            ds 4
0012            514   _GetPosition2_PARM_2:
0012            515            ds 3
0015            516   _GetPosition2_vx_1_77:
0015            517            ds 4
0019            518   _GetPosition2_vy_1_77:
0019            519            ds 4
001D            520   _main_v_1_83:
001D            521            ds 8
0025            522   _main_xy_pos_1_83:
0025            523            ds 8
002D            524   _main_sloc0_1_0:
002D            525            ds 4
0031            526   ;--------------------------------------------------------
0031            527   ; overlayable items in internal ram 
0031            528   ;--------------------------------------------------------
0000            529            rseg    R_OSEG
0000            530            rseg    R_OSEG
0000            531   _InitPinADC_PARM_2:
0000            532            ds 1
0001            533            rseg    R_OSEG
0001            534   ;--------------------------------------------------------
0001            535   ; indirectly addressable internal ram data
0001            536   ;--------------------------------------------------------
0000            537            rseg R_ISEG
0000            538   ;--------------------------------------------------------
0000            539   ; absolute internal ram data
0000            540   ;--------------------------------------------------------
0000            541            DSEG
0000            542   ;--------------------------------------------------------
0000            543   ; bit data
0000            544   ;--------------------------------------------------------
0000            545            rseg R_BSEG
0000            546   _LCDprint_PARM_3:
0000            547            DBIT    1
0001            548   ;--------------------------------------------------------
0001            549   ; paged external ram data
0001            550   ;--------------------------------------------------------
0000            551            rseg R_PSEG
0000            552   ;--------------------------------------------------------
0000            553   ; external ram data
0000            554   ;--------------------------------------------------------
0000            555            rseg R_XSEG
0000            556   _GetPosition2_buff_x_1_77:
0000            557            ds 17
0011            558   _GetPosition2_buff_y_1_77:
0011            559            ds 17
0022            560   ;--------------------------------------------------------
0022            561   ; absolute external ram data
0022            562   ;--------------------------------------------------------
0000            563            XSEG
0000            564   ;--------------------------------------------------------
0000            565   ; external initialized ram data
0000            566   ;--------------------------------------------------------
0000            567            rseg R_IXSEG
0000            568            rseg R_HOME
0000            569            rseg R_GSINIT
0000            570            rseg R_CSEG
0000            571   ;--------------------------------------------------------
0000            572   ; Reset entry point and interrupt vectors
0000            573   ;--------------------------------------------------------
0000            574            CSEG at 0x0000
0000 020000     575            ljmp    _crt0
0003            576   ;--------------------------------------------------------
0003            577   ; global & static initialisations
0003            578   ;--------------------------------------------------------
0000            579            rseg R_HOME
0000            580            rseg R_GSINIT
0000            581            rseg R_GSINIT
0000            582   ;--------------------------------------------------------
0000            583   ; data variables initialization
0000            584   ;--------------------------------------------------------
0000            585            rseg R_DINIT
0000            586            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            587   ;--------------------------------------------------------
0000            588   ; code
0000            589   ;--------------------------------------------------------
0000            590            rseg R_CSEG
0000            591   ;------------------------------------------------------------
0000            592   ;Allocation info for local variables in function '_c51_external_startup'
0000            593   ;------------------------------------------------------------
0000            594   ;------------------------------------------------------------
0000            595   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:33: char _c51_external_startup (void)
0000            596   ;        -----------------------------------------
0000            597   ;         function _c51_external_startup
0000            598   ;        -----------------------------------------
0000            599   __c51_external_startup:
0000            600            using   0
0000            601   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:36: SFRPAGE = 0x00;
0000 75A700     602            mov     _SFRPAGE,#0x00
0003            603   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:37: WDTCN = 0xDE; //First key
0003 7597DE     604            mov     _WDTCN,#0xDE
0006            605   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:38: WDTCN = 0xAD; //Second key
0006 7597AD     606            mov     _WDTCN,#0xAD
0009            607   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:40: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     608            mov     _VDM0CN,#0x80
000C            609   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:41: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     610            mov     _RSTSRC,#0x06
000F            611   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:48: SFRPAGE = 0x10;
000F 75A710     612            mov     _SFRPAGE,#0x10
0012            613   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:49: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     614            mov     _PFE0CN,#0x20
0015            615   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:50: SFRPAGE = 0x00;
0015 75A700     616            mov     _SFRPAGE,#0x00
0018            617   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:71: CLKSEL = 0x00;
0018 75A900     618            mov     _CLKSEL,#0x00
001B            619   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:72: CLKSEL = 0x00;
001B 75A900     620            mov     _CLKSEL,#0x00
001E            621   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:73: while ((CLKSEL & 0x80) == 0);
001E            622   L002001?:
001E E5A9       623            mov     a,_CLKSEL
0020 30E778     624            jnb     acc.7,L002001?
0023            625   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:74: CLKSEL = 0x03;
0023 75A903     626            mov     _CLKSEL,#0x03
0026            627   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:75: CLKSEL = 0x03;
0026 75A903     628            mov     _CLKSEL,#0x03
0029            629   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:76: while ((CLKSEL & 0x80) == 0);
0029            630   L002004?:
0029 E5A9       631            mov     a,_CLKSEL
002B 30E7F8     632            jnb     acc.7,L002004?
002E            633   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:81: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     634            orl     _P0MDOUT,#0x10
0031            635   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:82: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     636            mov     _XBR0,#0x01
0034            637   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:83: XBR1     = 0X00;
0034 75E200     638            mov     _XBR1,#0x00
0037            639   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:84: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     640            mov     _XBR2,#0x40
003A            641   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:90: SCON0 = 0x10;
003A 759810     642            mov     _SCON0,#0x10
003D            643   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:91: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     644            mov     _TH1,#0xE6
0040            645   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:92: TL1 = TH1;      // Init Timer1
0040 858D8B     646            mov     _TL1,_TH1
0043            647   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:93: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     648            anl     _TMOD,#0x0F
0046            649   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:94: TMOD |=  0x20;                       
0046 438920     650            orl     _TMOD,#0x20
0049            651   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:95: TR1 = 1; // START Timer1
0049 D28E       652            setb    _TR1
004B            653   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:96: TI = 1;  // Indicate TX0 ready
004B D299       654            setb    _TI
004D            655   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:98: return 0;
004D 758200     656            mov     dpl,#0x00
0050 22         657            ret
0051            658   ;------------------------------------------------------------
0051            659   ;Allocation info for local variables in function 'InitADC'
0051            660   ;------------------------------------------------------------
0051            661   ;------------------------------------------------------------
0051            662   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:101: void InitADC (void)
0051            663   ;        -----------------------------------------
0051            664   ;         function InitADC
0051            665   ;        -----------------------------------------
0051            666   _InitADC:
0051            667   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:103: SFRPAGE = 0x00;
0051 75A700     668            mov     _SFRPAGE,#0x00
0054            669   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:104: ADEN=0; // Disable ADC
0054 C2EF       670            clr     _ADEN
0056            671   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:109: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0056 75B280     672            mov     _ADC0CN1,#0x80
0059            673   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:113: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0059 75BC20     674            mov     _ADC0CF0,#0x20
005C            675   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:117: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005C 75B91E     676            mov     _ADC0CF1,#0x1E
005F            677   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:126: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
005F 75E800     678            mov     _ADC0CN0,#0x00
0062            679   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:131: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0062 75DF3F     680            mov     _ADC0CF2,#0x3F
0065            681   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:135: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0065 75B300     682            mov     _ADC0CN2,#0x00
0068            683   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:137: ADEN=1; // Enable ADC
0068 D2EF       684            setb    _ADEN
006A 22         685            ret
006B            686   ;------------------------------------------------------------
006B            687   ;Allocation info for local variables in function 'Timer3us'
006B            688   ;------------------------------------------------------------
006B            689   ;us                        Allocated to registers r2 
006B            690   ;i                         Allocated to registers r3 
006B            691   ;------------------------------------------------------------
006B            692   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:141: void Timer3us(unsigned char us)
006B            693   ;        -----------------------------------------
006B            694   ;         function Timer3us
006B            695   ;        -----------------------------------------
006B            696   _Timer3us:
006B AA82       697            mov     r2,dpl
006D            698   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:146: CKCON0|=0b_0100_0000;
006D 438E40     699            orl     _CKCON0,#0x40
0070            700   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:148: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0070 7592B8     701            mov     _TMR3RL,#0xB8
0073 7593FF     702            mov     (_TMR3RL >> 8),#0xFF
0076            703   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:149: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0076 859294     704            mov     _TMR3,_TMR3RL
0079 859395     705            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007C            706   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:151: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007C 759104     707            mov     _TMR3CN0,#0x04
007F            708   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:152: for (i = 0; i < us; i++)       // Count <us> overflows
007F 7B00       709            mov     r3,#0x00
0081            710   L004004?:
0081 C3         711            clr     c
0082 EB         712            mov     a,r3
0083 9A         713            subb    a,r2
0084 5000       714            jnc     L004007?
0086            715   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:154: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0086            716   L004001?:
0086 E591       717            mov     a,_TMR3CN0
0088 30E7F8     718            jnb     acc.7,L004001?
008B            719   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:155: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008B 53917F     720            anl     _TMR3CN0,#0x7F
008E            721   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:152: for (i = 0; i < us; i++)       // Count <us> overflows
008E 0B         722            inc     r3
008F 8000       723            sjmp    L004004?
0091            724   L004007?:
0091            725   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:157: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0091 759100     726            mov     _TMR3CN0,#0x00
0094 22         727            ret
0095            728   ;------------------------------------------------------------
0095            729   ;Allocation info for local variables in function 'waitms'
0095            730   ;------------------------------------------------------------
0095            731   ;ms                        Allocated to registers r2 r3 
0095            732   ;j                         Allocated to registers r4 r5 
0095            733   ;k                         Allocated to registers r6 
0095            734   ;------------------------------------------------------------
0095            735   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:160: void waitms (unsigned int ms)
0095            736   ;        -----------------------------------------
0095            737   ;         function waitms
0095            738   ;        -----------------------------------------
0095            739   _waitms:
0095 AA82       740            mov     r2,dpl
0097 AB83       741            mov     r3,dph
0099            742   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:164: for(j=0; j<ms; j++)
0099 7C00       743            mov     r4,#0x00
009B 7D00       744            mov     r5,#0x00
009D            745   L005005?:
009D C3         746            clr     c
009E EC         747            mov     a,r4
009F 9A         748            subb    a,r2
00A0 ED         749            mov     a,r5
00A1 9B         750            subb    a,r3
00A2 5000       751            jnc     L005009?
00A4            752   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:165: for (k=0; k<4; k++) Timer3us(250);
00A4 7E00       753            mov     r6,#0x00
00A6            754   L005001?:
00A6 BE0438     755            cjne    r6,#0x04,L005018?
00A9            756   L005018?:
00A9 5000       757            jnc     L005007?
00AB 7582FA     758            mov     dpl,#0xFA
00AE C002       759            push    ar2
00B0 C003       760            push    ar3
00B2 C004       761            push    ar4
00B4 C005       762            push    ar5
00B6 C006       763            push    ar6
00B8 120000     764            lcall   _Timer3us
00BB D006       765            pop     ar6
00BD D005       766            pop     ar5
00BF D004       767            pop     ar4
00C1 D003       768            pop     ar3
00C3 D002       769            pop     ar2
00C5 0E         770            inc     r6
00C6 8000       771            sjmp    L005001?
00C8            772   L005007?:
00C8            773   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:164: for(j=0; j<ms; j++)
00C8 0C         774            inc     r4
00C9 BC0078     775            cjne    r4,#0x00,L005005?
00CC 0D         776            inc     r5
00CD 8000       777            sjmp    L005005?
00CF            778   L005009?:
00CF 22         779            ret
00D0            780   ;------------------------------------------------------------
00D0            781   ;Allocation info for local variables in function 'InitPinADC'
00D0            782   ;------------------------------------------------------------
00D0            783   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00D0            784   ;portno                    Allocated to registers r2 
00D0            785   ;mask                      Allocated to registers r3 
00D0            786   ;------------------------------------------------------------
00D0            787   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:170: void InitPinADC (unsigned char portno, unsigned char pinno)
00D0            788   ;        -----------------------------------------
00D0            789   ;         function InitPinADC
00D0            790   ;        -----------------------------------------
00D0            791   _InitPinADC:
00D0 AA82       792            mov     r2,dpl
00D2            793   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:174: mask=1<<pinno;
00D2 8568F0     794            mov     b,_InitPinADC_PARM_2
00D5 05F0       795            inc     b
00D7 7401       796            mov     a,#0x01
00D9 8000       797            sjmp    L006013?
00DB            798   L006011?:
00DB 25E0       799            add     a,acc
00DD            800   L006013?:
00DD D5F038     801            djnz    b,L006011?
00E0 FB         802            mov     r3,a
00E1            803   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:176: SFRPAGE = 0x20;
00E1 75A720     804            mov     _SFRPAGE,#0x20
00E4            805   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:177: switch (portno)
00E4 BA0078     806            cjne    r2,#0x00,L006014?
00E7 8000       807            sjmp    L006001?
00E9            808   L006014?:
00E9 BA01F8     809            cjne    r2,#0x01,L006015?
00EC 8000       810            sjmp    L006002?
00EE            811   L006015?:
00EE            812   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:179: case 0:
00EE BA0278     813            cjne    r2,#0x02,L006005?
00F1 8000       814            sjmp    L006003?
00F3            815   L006001?:
00F3            816   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:180: P0MDIN &= (~mask); // Set pin as analog input
00F3 EB         817            mov     a,r3
00F4 F4         818            cpl     a
00F5 FA         819            mov     r2,a
00F6 52F1       820            anl     _P0MDIN,a
00F8            821   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:181: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00F8 EB         822            mov     a,r3
00F9 42D4       823            orl     _P0SKIP,a
00FB            824   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:182: break;
00FB            825   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:183: case 1:
00FB 8000       826            sjmp    L006005?
00FD            827   L006002?:
00FD            828   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:184: P1MDIN &= (~mask); // Set pin as analog input
00FD EB         829            mov     a,r3
00FE F4         830            cpl     a
00FF FA         831            mov     r2,a
0100 52F2       832            anl     _P1MDIN,a
0102            833   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:185: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0102 EB         834            mov     a,r3
0103 42D5       835            orl     _P1SKIP,a
0105            836   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:186: break;
0105            837   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:187: case 2:
0105 8000       838            sjmp    L006005?
0107            839   L006003?:
0107            840   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:188: P2MDIN &= (~mask); // Set pin as analog input
0107 EB         841            mov     a,r3
0108 F4         842            cpl     a
0109 FA         843            mov     r2,a
010A 52F3       844            anl     _P2MDIN,a
010C            845   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:189: P2SKIP |= mask; // Skip Crossbar decoding for this pin
010C EB         846            mov     a,r3
010D 42CC       847            orl     _P2SKIP,a
010F            848   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:193: }
010F            849   L006005?:
010F            850   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:194: SFRPAGE = 0x00;
010F 75A700     851            mov     _SFRPAGE,#0x00
0112 22         852            ret
0113            853   ;------------------------------------------------------------
0113            854   ;Allocation info for local variables in function 'TIMER0_Init'
0113            855   ;------------------------------------------------------------
0113            856   ;------------------------------------------------------------
0113            857   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:197: void TIMER0_Init(void)
0113            858   ;        -----------------------------------------
0113            859   ;         function TIMER0_Init
0113            860   ;        -----------------------------------------
0113            861   _TIMER0_Init:
0113            862   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:199: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0113 5389F0     863            anl     _TMOD,#0xF0
0116            864   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:200: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0116 438901     865            orl     _TMOD,#0x01
0119            866   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:201: TR0=0; // Stop Timer/Counter 0
0119 C28C       867            clr     _TR0
011B 22         868            ret
011C            869   ;------------------------------------------------------------
011C            870   ;Allocation info for local variables in function 'ADC_at_Pin'
011C            871   ;------------------------------------------------------------
011C            872   ;pin                       Allocated to registers 
011C            873   ;------------------------------------------------------------
011C            874   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:204: unsigned int ADC_at_Pin(unsigned char pin)
011C            875   ;        -----------------------------------------
011C            876   ;         function ADC_at_Pin
011C            877   ;        -----------------------------------------
011C            878   _ADC_at_Pin:
011C 8582BB     879            mov     _ADC0MX,dpl
011F            880   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:207: ADINT = 0;
011F C2ED       881            clr     _ADINT
0121            882   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:208: ADBUSY = 1;     // Convert voltage at the pin
0121 D2EC       883            setb    _ADBUSY
0123            884   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:209: while (!ADINT); // Wait for conversion to complete
0123            885   L008001?:
0123 30EDF8     886            jnb     _ADINT,L008001?
0126            887   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:210: return (ADC0);
0126 85BD82     888            mov     dpl,_ADC0
0129 85BE83     889            mov     dph,(_ADC0 >> 8)
012C 22         890            ret
012D            891   ;------------------------------------------------------------
012D            892   ;Allocation info for local variables in function 'Get_ADC'
012D            893   ;------------------------------------------------------------
012D            894   ;------------------------------------------------------------
012D            895   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:213: unsigned int Get_ADC (void)
012D            896   ;        -----------------------------------------
012D            897   ;         function Get_ADC
012D            898   ;        -----------------------------------------
012D            899   _Get_ADC:
012D            900   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:215: ADINT = 0;
012D C2ED       901            clr     _ADINT
012F            902   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:216: ADBUSY = 1;
012F D2EC       903            setb    _ADBUSY
0131            904   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:217: while (!ADINT); // Wait for conversion to complete
0131            905   L009001?:
0131 30ED38     906            jnb     _ADINT,L009001?
0134            907   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:218: return (ADC0);
0134 85BD82     908            mov     dpl,_ADC0
0137 85BE83     909            mov     dph,(_ADC0 >> 8)
013A 22         910            ret
013B            911   ;------------------------------------------------------------
013B            912   ;Allocation info for local variables in function 'Volts_at_Pin'
013B            913   ;------------------------------------------------------------
013B            914   ;pin                       Allocated to registers r2 
013B            915   ;------------------------------------------------------------
013B            916   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:222: float Volts_at_Pin(unsigned char pin)
013B            917   ;        -----------------------------------------
013B            918   ;         function Volts_at_Pin
013B            919   ;        -----------------------------------------
013B            920   _Volts_at_Pin:
013B            921   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:224: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
013B 120000     922            lcall   _ADC_at_Pin
013E 120000     923            lcall   ___uint2fs
0141 AA82       924            mov     r2,dpl
0143 AB83       925            mov     r3,dph
0145 ACF0       926            mov     r4,b
0147 FD         927            mov     r5,a
0148 C002       928            push    ar2
014A C003       929            push    ar3
014C C004       930            push    ar4
014E C005       931            push    ar5
0150 906C8B     932            mov     dptr,#0x6C8B
0153 75F053     933            mov     b,#0x53
0156 7440       934            mov     a,#0x40
0158 120000     935            lcall   ___fsmul
015B AA82       936            mov     r2,dpl
015D AB83       937            mov     r3,dph
015F ACF0       938            mov     r4,b
0161 FD         939            mov     r5,a
0162 E581       940            mov     a,sp
0164 24FC       941            add     a,#0xfc
0166 F581       942            mov     sp,a
0168 E4         943            clr     a
0169 C0E0       944            push    acc
016B 74FC       945            mov     a,#0xFC
016D C0E0       946            push    acc
016F 747F       947            mov     a,#0x7F
0171 C0E0       948            push    acc
0173 7446       949            mov     a,#0x46
0175 C0E0       950            push    acc
0177 8A82       951            mov     dpl,r2
0179 8B83       952            mov     dph,r3
017B 8CF0       953            mov     b,r4
017D ED         954            mov     a,r5
017E 120000     955            lcall   ___fsdiv
0181 AA82       956            mov     r2,dpl
0183 AB83       957            mov     r3,dph
0185 ACF0       958            mov     r4,b
0187 FD         959            mov     r5,a
0188 E581       960            mov     a,sp
018A 24FC       961            add     a,#0xfc
018C F581       962            mov     sp,a
018E 8A82       963            mov     dpl,r2
0190 8B83       964            mov     dph,r3
0192 8CF0       965            mov     b,r4
0194 ED         966            mov     a,r5
0195 22         967            ret
0196            968   ;------------------------------------------------------------
0196            969   ;Allocation info for local variables in function 'LCD_pulse'
0196            970   ;------------------------------------------------------------
0196            971   ;------------------------------------------------------------
0196            972   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:228: void LCD_pulse (void)
0196            973   ;        -----------------------------------------
0196            974   ;         function LCD_pulse
0196            975   ;        -----------------------------------------
0196            976   _LCD_pulse:
0196            977   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:230: LCD_E=1;
0196 D296       978            setb    _P1_6
0198            979   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:231: Timer3us(40);
0198 758228     980            mov     dpl,#0x28
019B 120000     981            lcall   _Timer3us
019E            982   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:232: LCD_E=0;
019E C296       983            clr     _P1_6
01A0 22         984            ret
01A1            985   ;------------------------------------------------------------
01A1            986   ;Allocation info for local variables in function 'LCD_byte'
01A1            987   ;------------------------------------------------------------
01A1            988   ;x                         Allocated to registers r2 
01A1            989   ;------------------------------------------------------------
01A1            990   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:235: void LCD_byte (unsigned char x)
01A1            991   ;        -----------------------------------------
01A1            992   ;         function LCD_byte
01A1            993   ;        -----------------------------------------
01A1            994   _LCD_byte:
01A1 AA82       995            mov     r2,dpl
01A3            996   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:238: ACC=x; //Send high nible
01A3 8AE0       997            mov     _ACC,r2
01A5            998   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:239: LCD_D7=ACC_7;
01A5 A2E7       999            mov     c,_ACC_7
01A7 9290      1000            mov     _P1_0,c
01A9           1001   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:240: LCD_D6=ACC_6;
01A9 A2E6      1002            mov     c,_ACC_6
01AB 9291      1003            mov     _P1_1,c
01AD           1004   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:241: LCD_D5=ACC_5;
01AD A2E5      1005            mov     c,_ACC_5
01AF 9292      1006            mov     _P1_2,c
01B1           1007   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:242: LCD_D4=ACC_4;
01B1 A2E4      1008            mov     c,_ACC_4
01B3 9293      1009            mov     _P1_3,c
01B5           1010   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:243: LCD_pulse();
01B5 C002      1011            push    ar2
01B7 120000    1012            lcall   _LCD_pulse
01BA           1013   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:244: Timer3us(40);
01BA 758228    1014            mov     dpl,#0x28
01BD 120000    1015            lcall   _Timer3us
01C0 D002      1016            pop     ar2
01C2           1017   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:245: ACC=x; //Send low nible
01C2 8AE0      1018            mov     _ACC,r2
01C4           1019   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:246: LCD_D7=ACC_3;
01C4 A2E3      1020            mov     c,_ACC_3
01C6 9290      1021            mov     _P1_0,c
01C8           1022   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:247: LCD_D6=ACC_2;
01C8 A2E2      1023            mov     c,_ACC_2
01CA 9291      1024            mov     _P1_1,c
01CC           1025   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:248: LCD_D5=ACC_1;
01CC A2E1      1026            mov     c,_ACC_1
01CE 9292      1027            mov     _P1_2,c
01D0           1028   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:249: LCD_D4=ACC_0;
01D0 A2E0      1029            mov     c,_ACC_0
01D2 9293      1030            mov     _P1_3,c
01D4           1031   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:250: LCD_pulse();
01D4 020000    1032            ljmp    _LCD_pulse
01D7           1033   ;------------------------------------------------------------
01D7           1034   ;Allocation info for local variables in function 'WriteData'
01D7           1035   ;------------------------------------------------------------
01D7           1036   ;x                         Allocated to registers r2 
01D7           1037   ;------------------------------------------------------------
01D7           1038   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:254: void WriteData (unsigned char x)
01D7           1039   ;        -----------------------------------------
01D7           1040   ;         function WriteData
01D7           1041   ;        -----------------------------------------
01D7           1042   _WriteData:
01D7 AA82      1043            mov     r2,dpl
01D9           1044   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:256: LCD_RS=1;
01D9 D297      1045            setb    _P1_7
01DB           1046   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:257: LCD_byte(x);
01DB 8A82      1047            mov     dpl,r2
01DD 120000    1048            lcall   _LCD_byte
01E0           1049   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:258: waitms(2);
01E0 900002    1050            mov     dptr,#0x0002
01E3 020000    1051            ljmp    _waitms
01E6           1052   ;------------------------------------------------------------
01E6           1053   ;Allocation info for local variables in function 'WriteCommand'
01E6           1054   ;------------------------------------------------------------
01E6           1055   ;x                         Allocated to registers r2 
01E6           1056   ;------------------------------------------------------------
01E6           1057   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:261: void WriteCommand (unsigned char x)
01E6           1058   ;        -----------------------------------------
01E6           1059   ;         function WriteCommand
01E6           1060   ;        -----------------------------------------
01E6           1061   _WriteCommand:
01E6 AA82      1062            mov     r2,dpl
01E8           1063   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:263: LCD_RS=0;
01E8 C297      1064            clr     _P1_7
01EA           1065   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:264: LCD_byte(x);
01EA 8A82      1066            mov     dpl,r2
01EC 120000    1067            lcall   _LCD_byte
01EF           1068   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:265: waitms(5);
01EF 900005    1069            mov     dptr,#0x0005
01F2 020000    1070            ljmp    _waitms
01F5           1071   ;------------------------------------------------------------
01F5           1072   ;Allocation info for local variables in function 'LCD_4BIT'
01F5           1073   ;------------------------------------------------------------
01F5           1074   ;------------------------------------------------------------
01F5           1075   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:268: void LCD_4BIT (void)
01F5           1076   ;        -----------------------------------------
01F5           1077   ;         function LCD_4BIT
01F5           1078   ;        -----------------------------------------
01F5           1079   _LCD_4BIT:
01F5           1080   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:270: LCD_E=0; // Resting state of LCD's enable is zero
01F5 C296      1081            clr     _P1_6
01F7           1082   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:272: waitms(20);
01F7 900014    1083            mov     dptr,#0x0014
01FA 120000    1084            lcall   _waitms
01FD           1085   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:274: WriteCommand(0x33);
01FD 758233    1086            mov     dpl,#0x33
0200 120000    1087            lcall   _WriteCommand
0203           1088   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:275: WriteCommand(0x33);
0203 758233    1089            mov     dpl,#0x33
0206 120000    1090            lcall   _WriteCommand
0209           1091   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:276: WriteCommand(0x32); // Change to 4-bit mode
0209 758232    1092            mov     dpl,#0x32
020C 120000    1093            lcall   _WriteCommand
020F           1094   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:278: WriteCommand(0x28);
020F 758228    1095            mov     dpl,#0x28
0212 120000    1096            lcall   _WriteCommand
0215           1097   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:279: WriteCommand(0x0c);
0215 75820C    1098            mov     dpl,#0x0C
0218 120000    1099            lcall   _WriteCommand
021B           1100   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:280: WriteCommand(0x01); // Clear screen command (takes some time)
021B 758201    1101            mov     dpl,#0x01
021E 120000    1102            lcall   _WriteCommand
0221           1103   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:281: waitms(20); // Wait for clear screen command to finsih.
0221 900014    1104            mov     dptr,#0x0014
0224 020000    1105            ljmp    _waitms
0227           1106   ;------------------------------------------------------------
0227           1107   ;Allocation info for local variables in function 'LCDprint'
0227           1108   ;------------------------------------------------------------
0227           1109   ;line                      Allocated with name '_LCDprint_PARM_2'
0227           1110   ;string                    Allocated to registers r2 r3 r4 
0227           1111   ;j                         Allocated to registers r5 r6 
0227           1112   ;------------------------------------------------------------
0227           1113   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:284: void LCDprint(char * string, unsigned char line, bit clear)
0227           1114   ;        -----------------------------------------
0227           1115   ;         function LCDprint
0227           1116   ;        -----------------------------------------
0227           1117   _LCDprint:
0227 AA82      1118            mov     r2,dpl
0229 AB83      1119            mov     r3,dph
022B ACF0      1120            mov     r4,b
022D           1121   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:287: WriteCommand(line==2?0xc0:0x80);
022D 7402      1122            mov     a,#0x02
022F B5E878    1123            cjne    a,_LCDprint_PARM_2,L016013?
0232 7DC0      1124            mov     r5,#0xC0
0234 8000      1125            sjmp    L016014?
0236           1126   L016013?:
0236 7D80      1127            mov     r5,#0x80
0238           1128   L016014?:
0238 8D82      1129            mov     dpl,r5
023A C002      1130            push    ar2
023C C003      1131            push    ar3
023E C004      1132            push    ar4
0240 120000    1133            lcall   _WriteCommand
0243           1134   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:288: waitms(5);
0243 900005    1135            mov     dptr,#0x0005
0246 120000    1136            lcall   _waitms
0249 D004      1137            pop     ar4
024B D003      1138            pop     ar3
024D D002      1139            pop     ar2
024F           1140   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:289: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
024F 7D00      1141            mov     r5,#0x00
0251 7E00      1142            mov     r6,#0x00
0253           1143   L016003?:
0253 ED        1144            mov     a,r5
0254 2A        1145            add     a,r2
0255 FF        1146            mov     r7,a
0256 EE        1147            mov     a,r6
0257 3B        1148            addc    a,r3
0258 F8        1149            mov     r0,a
0259 8C01      1150            mov     ar1,r4
025B 8F82      1151            mov     dpl,r7
025D 8883      1152            mov     dph,r0
025F 89F0      1153            mov     b,r1
0261 120000    1154            lcall   __gptrget
0264 FF        1155            mov     r7,a
0265 6000      1156            jz      L016006?
0267 8F82      1157            mov     dpl,r7
0269 C002      1158            push    ar2
026B C003      1159            push    ar3
026D C004      1160            push    ar4
026F C005      1161            push    ar5
0271 C006      1162            push    ar6
0273 120000    1163            lcall   _WriteData
0276 D006      1164            pop     ar6
0278 D005      1165            pop     ar5
027A D004      1166            pop     ar4
027C D003      1167            pop     ar3
027E D002      1168            pop     ar2
0280 0D        1169            inc     r5
0281 BD00F8    1170            cjne    r5,#0x00,L016003?
0284 0E        1171            inc     r6
0285 8000      1172            sjmp    L016003?
0287           1173   L016006?:
0287           1174   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:290: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest ofthe line
0287 3048B8    1175            jnb     _LCDprint_PARM_3,L016011?
028A 8D02      1176            mov     ar2,r5
028C 8E03      1177            mov     ar3,r6
028E           1178   L016007?:
028E C3        1179            clr     c
028F EA        1180            mov     a,r2
0290 9410      1181            subb    a,#0x10
0292 EB        1182            mov     a,r3
0293 6480      1183            xrl     a,#0x80
0295 9480      1184            subb    a,#0x80
0297 5000      1185            jnc     L016011?
0299 758220    1186            mov     dpl,#0x20
029C C002      1187            push    ar2
029E C003      1188            push    ar3
02A0 120000    1189            lcall   _WriteData
02A3 D003      1190            pop     ar3
02A5 D002      1191            pop     ar2
02A7 0A        1192            inc     r2
02A8 BA00F8    1193            cjne    r2,#0x00,L016007?
02AB 0B        1194            inc     r3
02AC 8000      1195            sjmp    L016007?
02AE           1196   L016011?:
02AE 22        1197            ret
02AF           1198   ;------------------------------------------------------------
02AF           1199   ;Allocation info for local variables in function 'map2'
02AF           1200   ;------------------------------------------------------------
02AF           1201   ;in_min                    Allocated with name '_map2_PARM_2'
02AF           1202   ;in_max                    Allocated with name '_map2_PARM_3'
02AF           1203   ;out_min                   Allocated with name '_map2_PARM_4'
02AF           1204   ;out_max                   Allocated with name '_map2_PARM_5'
02AF           1205   ;x                         Allocated to registers r2 r3 r4 r5 
02AF           1206   ;tempa                     Allocated to registers r2 r3 r4 r5 
02AF           1207   ;tempb                     Allocated to registers r6 r7 r0 r1 
02AF           1208   ;tempc                     Allocated to registers r2 r3 r4 r5 
02AF           1209   ;tempd                     Allocated to registers r6 r7 r0 r1 
02AF           1210   ;tempe                     Allocated to registers r2 r3 r4 r5 
02AF           1211   ;tempf                     Allocated to registers r2 r3 r4 r5 
02AF           1212   ;------------------------------------------------------------
02AF           1213   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:293: float map2(float x, float in_min, float in_max, float out_min, float out_max)
02AF           1214   ;        -----------------------------------------
02AF           1215   ;         function map2
02AF           1216   ;        -----------------------------------------
02AF           1217   _map2:
02AF AA82      1218            mov     r2,dpl
02B1 AB83      1219            mov     r3,dph
02B3 ACF0      1220            mov     r4,b
02B5 FD        1221            mov     r5,a
02B6           1222   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:297: tempa = (x - in_min);
02B6 C098      1223            push    _map2_PARM_2
02B8 C099      1224            push    (_map2_PARM_2 + 1)
02BA C09A      1225            push    (_map2_PARM_2 + 2)
02BC C09B      1226            push    (_map2_PARM_2 + 3)
02BE 8A82      1227            mov     dpl,r2
02C0 8B83      1228            mov     dph,r3
02C2 8CF0      1229            mov     b,r4
02C4 ED        1230            mov     a,r5
02C5 120000    1231            lcall   ___fssub
02C8 AA82      1232            mov     r2,dpl
02CA AB83      1233            mov     r3,dph
02CC ACF0      1234            mov     r4,b
02CE FD        1235            mov     r5,a
02CF E581      1236            mov     a,sp
02D1 24FC      1237            add     a,#0xfc
02D3 F581      1238            mov     sp,a
02D5           1239   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:298: printf("%f\r\n", tempa);
02D5 C002      1240            push    ar2
02D7 C003      1241            push    ar3
02D9 C004      1242            push    ar4
02DB C005      1243            push    ar5
02DD C002      1244            push    ar2
02DF C003      1245            push    ar3
02E1 C004      1246            push    ar4
02E3 C005      1247            push    ar5
02E5 7478      1248            mov     a,#__str_0
02E7 C0E0      1249            push    acc
02E9 74BE      1250            mov     a,#(__str_0 >> 8)
02EB C0E0      1251            push    acc
02ED 7480      1252            mov     a,#0x80
02EF C0E0      1253            push    acc
02F1 120000    1254            lcall   _printf
02F4 E581      1255            mov     a,sp
02F6 24F9      1256            add     a,#0xf9
02F8 F581      1257            mov     sp,a
02FA           1258   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:299: tempb = (out_max - out_min);
02FA C018      1259            push    _map2_PARM_4
02FC C019      1260            push    (_map2_PARM_4 + 1)
02FE C01A      1261            push    (_map2_PARM_4 + 2)
0300 C01B      1262            push    (_map2_PARM_4 + 3)
0302 85D882    1263            mov     dpl,_map2_PARM_5
0305 85D983    1264            mov     dph,(_map2_PARM_5 + 1)
0308 85DAF0    1265            mov     b,(_map2_PARM_5 + 2)
030B E5DB      1266            mov     a,(_map2_PARM_5 + 3)
030D 120000    1267            lcall   ___fssub
0310 AE82      1268            mov     r6,dpl
0312 AF83      1269            mov     r7,dph
0314 A8F0      1270            mov     r0,b
0316 F9        1271            mov     r1,a
0317 E581      1272            mov     a,sp
0319 24FC      1273            add     a,#0xfc
031B F581      1274            mov     sp,a
031D           1275   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:300: printf("%f\r\n", tempb);
031D C006      1276            push    ar6
031F C007      1277            push    ar7
0321 C000      1278            push    ar0
0323 C001      1279            push    ar1
0325 C006      1280            push    ar6
0327 C007      1281            push    ar7
0329 C000      1282            push    ar0
032B C001      1283            push    ar1
032D 7478      1284            mov     a,#__str_0
032F C0E0      1285            push    acc
0331 74BE      1286            mov     a,#(__str_0 >> 8)
0333 C0E0      1287            push    acc
0335 7480      1288            mov     a,#0x80
0337 C0E0      1289            push    acc
0339 120000    1290            lcall   _printf
033C E581      1291            mov     a,sp
033E 24F9      1292            add     a,#0xf9
0340 F581      1293            mov     sp,a
0342 D001      1294            pop     ar1
0344 D000      1295            pop     ar0
0346 D007      1296            pop     ar7
0348 D006      1297            pop     ar6
034A D005      1298            pop     ar5
034C D004      1299            pop     ar4
034E D003      1300            pop     ar3
0350 D002      1301            pop     ar2
0352           1302   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:301: tempc = tempa * tempb;
0352 C006      1303            push    ar6
0354 C007      1304            push    ar7
0356 C000      1305            push    ar0
0358 C001      1306            push    ar1
035A 8A82      1307            mov     dpl,r2
035C 8B83      1308            mov     dph,r3
035E 8CF0      1309            mov     b,r4
0360 ED        1310            mov     a,r5
0361 120000    1311            lcall   ___fsmul
0364 AA82      1312            mov     r2,dpl
0366 AB83      1313            mov     r3,dph
0368 ACF0      1314            mov     r4,b
036A FD        1315            mov     r5,a
036B E581      1316            mov     a,sp
036D 24FC      1317            add     a,#0xfc
036F F581      1318            mov     sp,a
0371           1319   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:302: printf("%f\r\n", tempc);
0371 C002      1320            push    ar2
0373 C003      1321            push    ar3
0375 C004      1322            push    ar4
0377 C005      1323            push    ar5
0379 C002      1324            push    ar2
037B C003      1325            push    ar3
037D C004      1326            push    ar4
037F C005      1327            push    ar5
0381 7478      1328            mov     a,#__str_0
0383 C0E0      1329            push    acc
0385 74BE      1330            mov     a,#(__str_0 >> 8)
0387 C0E0      1331            push    acc
0389 7480      1332            mov     a,#0x80
038B C0E0      1333            push    acc
038D 120000    1334            lcall   _printf
0390 E581      1335            mov     a,sp
0392 24F9      1336            add     a,#0xf9
0394 F581      1337            mov     sp,a
0396           1338   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:303: tempd = (in_max - in_min);
0396 C098      1339            push    _map2_PARM_2
0398 C099      1340            push    (_map2_PARM_2 + 1)
039A C09A      1341            push    (_map2_PARM_2 + 2)
039C C09B      1342            push    (_map2_PARM_2 + 3)
039E 855882    1343            mov     dpl,_map2_PARM_3
03A1 855983    1344            mov     dph,(_map2_PARM_3 + 1)
03A4 855AF0    1345            mov     b,(_map2_PARM_3 + 2)
03A7 E55B      1346            mov     a,(_map2_PARM_3 + 3)
03A9 120000    1347            lcall   ___fssub
03AC AE82      1348            mov     r6,dpl
03AE AF83      1349            mov     r7,dph
03B0 A8F0      1350            mov     r0,b
03B2 F9        1351            mov     r1,a
03B3 E581      1352            mov     a,sp
03B5 24FC      1353            add     a,#0xfc
03B7 F581      1354            mov     sp,a
03B9           1355   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:304: printf("%f\r\n", tempd);
03B9 C006      1356            push    ar6
03BB C007      1357            push    ar7
03BD C000      1358            push    ar0
03BF C001      1359            push    ar1
03C1 C006      1360            push    ar6
03C3 C007      1361            push    ar7
03C5 C000      1362            push    ar0
03C7 C001      1363            push    ar1
03C9 7478      1364            mov     a,#__str_0
03CB C0E0      1365            push    acc
03CD 74BE      1366            mov     a,#(__str_0 >> 8)
03CF C0E0      1367            push    acc
03D1 7480      1368            mov     a,#0x80
03D3 C0E0      1369            push    acc
03D5 120000    1370            lcall   _printf
03D8 E581      1371            mov     a,sp
03DA 24F9      1372            add     a,#0xf9
03DC F581      1373            mov     sp,a
03DE D001      1374            pop     ar1
03E0 D000      1375            pop     ar0
03E2 D007      1376            pop     ar7
03E4 D006      1377            pop     ar6
03E6 D005      1378            pop     ar5
03E8 D004      1379            pop     ar4
03EA D003      1380            pop     ar3
03EC D002      1381            pop     ar2
03EE           1382   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:305: tempe = (float)tempc/(float)tempd;
03EE C006      1383            push    ar6
03F0 C007      1384            push    ar7
03F2 C000      1385            push    ar0
03F4 C001      1386            push    ar1
03F6 8A82      1387            mov     dpl,r2
03F8 8B83      1388            mov     dph,r3
03FA 8CF0      1389            mov     b,r4
03FC ED        1390            mov     a,r5
03FD 120000    1391            lcall   ___fsdiv
0400 AA82      1392            mov     r2,dpl
0402 AB83      1393            mov     r3,dph
0404 ACF0      1394            mov     r4,b
0406 FD        1395            mov     r5,a
0407 E581      1396            mov     a,sp
0409 24FC      1397            add     a,#0xfc
040B F581      1398            mov     sp,a
040D           1399   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:306: printf("%f\r\n", tempe);
040D C002      1400            push    ar2
040F C003      1401            push    ar3
0411 C004      1402            push    ar4
0413 C005      1403            push    ar5
0415 C002      1404            push    ar2
0417 C003      1405            push    ar3
0419 C004      1406            push    ar4
041B C005      1407            push    ar5
041D 7478      1408            mov     a,#__str_0
041F C0E0      1409            push    acc
0421 74BE      1410            mov     a,#(__str_0 >> 8)
0423 C0E0      1411            push    acc
0425 7480      1412            mov     a,#0x80
0427 C0E0      1413            push    acc
0429 120000    1414            lcall   _printf
042C E581      1415            mov     a,sp
042E 24F9      1416            add     a,#0xf9
0430 F581      1417            mov     sp,a
0432 D005      1418            pop     ar5
0434 D004      1419            pop     ar4
0436 D003      1420            pop     ar3
0438 D002      1421            pop     ar2
043A           1422   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:307: tempf = tempe+ out_min;
043A C018      1423            push    _map2_PARM_4
043C C019      1424            push    (_map2_PARM_4 + 1)
043E C01A      1425            push    (_map2_PARM_4 + 2)
0440 C01B      1426            push    (_map2_PARM_4 + 3)
0442 8A82      1427            mov     dpl,r2
0444 8B83      1428            mov     dph,r3
0446 8CF0      1429            mov     b,r4
0448 ED        1430            mov     a,r5
0449 120000    1431            lcall   ___fsadd
044C AA82      1432            mov     r2,dpl
044E AB83      1433            mov     r3,dph
0450 ACF0      1434            mov     r4,b
0452 FD        1435            mov     r5,a
0453 E581      1436            mov     a,sp
0455 24FC      1437            add     a,#0xfc
0457 F581      1438            mov     sp,a
0459           1439   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:308: printf("%f\r\n", tempf);
0459 C002      1440            push    ar2
045B C003      1441            push    ar3
045D C004      1442            push    ar4
045F C005      1443            push    ar5
0461 C002      1444            push    ar2
0463 C003      1445            push    ar3
0465 C004      1446            push    ar4
0467 C005      1447            push    ar5
0469 7478      1448            mov     a,#__str_0
046B C0E0      1449            push    acc
046D 74BE      1450            mov     a,#(__str_0 >> 8)
046F C0E0      1451            push    acc
0471 7480      1452            mov     a,#0x80
0473 C0E0      1453            push    acc
0475 120000    1454            lcall   _printf
0478 E581      1455            mov     a,sp
047A 24F9      1456            add     a,#0xf9
047C F581      1457            mov     sp,a
047E D005      1458            pop     ar5
0480 D004      1459            pop     ar4
0482 D003      1460            pop     ar3
0484 D002      1461            pop     ar2
0486           1462   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:313: return tempf;
0486 8A82      1463            mov     dpl,r2
0488 8B83      1464            mov     dph,r3
048A 8CF0      1465            mov     b,r4
048C ED        1466            mov     a,r5
048D 22        1467            ret
048E           1468   ;------------------------------------------------------------
048E           1469   ;Allocation info for local variables in function 'GetPosition2'
048E           1470   ;------------------------------------------------------------
048E           1471   ;pos                       Allocated with name '_GetPosition2_PARM_2'
048E           1472   ;volts                     Allocated to registers r2 r3 r4 
048E           1473   ;mov_x                     Allocated to registers r2 r3 r4 r0 
048E           1474   ;mov_y                     Allocated to registers r5 r6 r7 r1 
048E           1475   ;mid_x                     Allocated to registers 
048E           1476   ;mid_y                     Allocated to registers 
048E           1477   ;vx                        Allocated with name '_GetPosition2_vx_1_77'
048E           1478   ;vy                        Allocated with name '_GetPosition2_vy_1_77'
048E           1479   ;buff_x                    Allocated with name '_GetPosition2_buff_x_1_77'
048E           1480   ;buff_y                    Allocated with name '_GetPosition2_buff_y_1_77'
048E           1481   ;------------------------------------------------------------
048E           1482   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:316: void GetPosition2 (float volts[2], float pos[2]) {
048E           1483   ;        -----------------------------------------
048E           1484   ;         function GetPosition2
048E           1485   ;        -----------------------------------------
048E           1486   _GetPosition2:
048E           1487   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:327: float vx = volts[0];
048E AA82      1488            mov     r2,dpl
0490 AB83      1489            mov     r3,dph
0492 ACF0      1490            mov     r4,b
0494 120000    1491            lcall   __gptrget
0497 F538      1492            mov     _GetPosition2_vx_1_77,a
0499 A3        1493            inc     dptr
049A 120000    1494            lcall   __gptrget
049D F539      1495            mov     (_GetPosition2_vx_1_77 + 1),a
049F A3        1496            inc     dptr
04A0 120000    1497            lcall   __gptrget
04A3 F53A      1498            mov     (_GetPosition2_vx_1_77 + 2),a
04A5 A3        1499            inc     dptr
04A6 120000    1500            lcall   __gptrget
04A9 F53B      1501            mov     (_GetPosition2_vx_1_77 + 3),a
04AB           1502   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:328: float vy = volts[1];
04AB 7404      1503            mov     a,#0x04
04AD 2A        1504            add     a,r2
04AE FA        1505            mov     r2,a
04AF E4        1506            clr     a
04B0 3B        1507            addc    a,r3
04B1 FB        1508            mov     r3,a
04B2 8A82      1509            mov     dpl,r2
04B4 8B83      1510            mov     dph,r3
04B6 8CF0      1511            mov     b,r4
04B8 120000    1512            lcall   __gptrget
04BB F588      1513            mov     _GetPosition2_vy_1_77,a
04BD A3        1514            inc     dptr
04BE 120000    1515            lcall   __gptrget
04C1 F589      1516            mov     (_GetPosition2_vy_1_77 + 1),a
04C3 A3        1517            inc     dptr
04C4 120000    1518            lcall   __gptrget
04C7 F58A      1519            mov     (_GetPosition2_vy_1_77 + 2),a
04C9 A3        1520            inc     dptr
04CA 120000    1521            lcall   __gptrget
04CD F58B      1522            mov     (_GetPosition2_vy_1_77 + 3),a
04CF           1523   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:330: if (pos[0] < mid_x) {
04CF AA98      1524            mov     r2,_GetPosition2_PARM_2
04D1 AB99      1525            mov     r3,(_GetPosition2_PARM_2 + 1)
04D3 AC9A      1526            mov     r4,(_GetPosition2_PARM_2 + 2)
04D5 8A82      1527            mov     dpl,r2
04D7 8B83      1528            mov     dph,r3
04D9 8CF0      1529            mov     b,r4
04DB 120000    1530            lcall   __gptrget
04DE F9        1531            mov     r1,a
04DF A3        1532            inc     dptr
04E0 120000    1533            lcall   __gptrget
04E3 FD        1534            mov     r5,a
04E4 A3        1535            inc     dptr
04E5 120000    1536            lcall   __gptrget
04E8 FE        1537            mov     r6,a
04E9 A3        1538            inc     dptr
04EA 120000    1539            lcall   __gptrget
04ED FF        1540            mov     r7,a
04EE C002      1541            push    ar2
04F0 C003      1542            push    ar3
04F2 C004      1543            push    ar4
04F4 74C1      1544            mov     a,#0xC1
04F6 C0E0      1545            push    acc
04F8 74E2      1546            mov     a,#0xE2
04FA C0E0      1547            push    acc
04FC 7416      1548            mov     a,#0x16
04FE C0E0      1549            push    acc
0500 7440      1550            mov     a,#0x40
0502 C0E0      1551            push    acc
0504 8982      1552            mov     dpl,r1
0506 8D83      1553            mov     dph,r5
0508 8EF0      1554            mov     b,r6
050A EF        1555            mov     a,r7
050B 120000    1556            lcall   ___fslt
050E AD82      1557            mov     r5,dpl
0510 E581      1558            mov     a,sp
0512 24FC      1559            add     a,#0xfc
0514 F581      1560            mov     sp,a
0516 D004      1561            pop     ar4
0518 D003      1562            pop     ar3
051A D002      1563            pop     ar2
051C ED        1564            mov     a,r5
051D 7000      1565            jnz     L018011?
051F 020000    1566            ljmp    L018002?
0522           1567   L018011?:
0522           1568   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:331: pos[0] = map2(vx, 0.0, mid_x, -50.0, 0);
0522 759800    1569            mov     _map2_PARM_2,#0x00
0525 759900    1570            mov     (_map2_PARM_2 + 1),#0x00
0528 759A00    1571            mov     (_map2_PARM_2 + 2),#0x00
052B 759B00    1572            mov     (_map2_PARM_2 + 3),#0x00
052E 7558C1    1573            mov     _map2_PARM_3,#0xC1
0531 7559E2    1574            mov     (_map2_PARM_3 + 1),#0xE2
0534 755A16    1575            mov     (_map2_PARM_3 + 2),#0x16
0537 755B40    1576            mov     (_map2_PARM_3 + 3),#0x40
053A 751800    1577            mov     _map2_PARM_4,#0x00
053D 751900    1578            mov     (_map2_PARM_4 + 1),#0x00
0540 751A48    1579            mov     (_map2_PARM_4 + 2),#0x48
0543 751BC2    1580            mov     (_map2_PARM_4 + 3),#0xC2
0546 75D800    1581            mov     _map2_PARM_5,#0x00
0549 75D900    1582            mov     (_map2_PARM_5 + 1),#0x00
054C 75DA00    1583            mov     (_map2_PARM_5 + 2),#0x00
054F 75DB00    1584            mov     (_map2_PARM_5 + 3),#0x00
0552 853882    1585            mov     dpl,_GetPosition2_vx_1_77
0555 853983    1586            mov     dph,(_GetPosition2_vx_1_77 + 1)
0558 853AF0    1587            mov     b,(_GetPosition2_vx_1_77 + 2)
055B E53B      1588            mov     a,(_GetPosition2_vx_1_77 + 3)
055D C002      1589            push    ar2
055F C003      1590            push    ar3
0561 C004      1591            push    ar4
0563 120000    1592            lcall   _map2
0566 AD82      1593            mov     r5,dpl
0568 AE83      1594            mov     r6,dph
056A AFF0      1595            mov     r7,b
056C F8        1596            mov     r0,a
056D D004      1597            pop     ar4
056F D003      1598            pop     ar3
0571 D002      1599            pop     ar2
0573 8A82      1600            mov     dpl,r2
0575 8B83      1601            mov     dph,r3
0577 8CF0      1602            mov     b,r4
0579 ED        1603            mov     a,r5
057A 120000    1604            lcall   __gptrput
057D A3        1605            inc     dptr
057E EE        1606            mov     a,r6
057F 120000    1607            lcall   __gptrput
0582 A3        1608            inc     dptr
0583 EF        1609            mov     a,r7
0584 120000    1610            lcall   __gptrput
0587 A3        1611            inc     dptr
0588 E8        1612            mov     a,r0
0589 120000    1613            lcall   __gptrput
058C           1614   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:332: printf("neg x\r\n");
058C C002      1615            push    ar2
058E C003      1616            push    ar3
0590 C004      1617            push    ar4
0592 7440      1618            mov     a,#__str_1
0594 C0E0      1619            push    acc
0596 74C0      1620            mov     a,#(__str_1 >> 8)
0598 C0E0      1621            push    acc
059A 7480      1622            mov     a,#0x80
059C C0E0      1623            push    acc
059E 120000    1624            lcall   _printf
05A1 1581      1625            dec     sp
05A3 1581      1626            dec     sp
05A5 1581      1627            dec     sp
05A7 D004      1628            pop     ar4
05A9 D003      1629            pop     ar3
05AB D002      1630            pop     ar2
05AD 020000    1631            ljmp    L018003?
05B0           1632   L018002?:
05B0           1633   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:336: pos[0] = map2(vx, mid_x, 3.3, 0.0, 50.0);
05B0 7598C1    1634            mov     _map2_PARM_2,#0xC1
05B3 7599E2    1635            mov     (_map2_PARM_2 + 1),#0xE2
05B6 759A16    1636            mov     (_map2_PARM_2 + 2),#0x16
05B9 759B40    1637            mov     (_map2_PARM_2 + 3),#0x40
05BC 755833    1638            mov     _map2_PARM_3,#0x33
05BF 755933    1639            mov     (_map2_PARM_3 + 1),#0x33
05C2 755A53    1640            mov     (_map2_PARM_3 + 2),#0x53
05C5 755B40    1641            mov     (_map2_PARM_3 + 3),#0x40
05C8 751800    1642            mov     _map2_PARM_4,#0x00
05CB 751900    1643            mov     (_map2_PARM_4 + 1),#0x00
05CE 751A00    1644            mov     (_map2_PARM_4 + 2),#0x00
05D1 751B00    1645            mov     (_map2_PARM_4 + 3),#0x00
05D4 75D800    1646            mov     _map2_PARM_5,#0x00
05D7 75D900    1647            mov     (_map2_PARM_5 + 1),#0x00
05DA 75DA48    1648            mov     (_map2_PARM_5 + 2),#0x48
05DD 75DB42    1649            mov     (_map2_PARM_5 + 3),#0x42
05E0 853882    1650            mov     dpl,_GetPosition2_vx_1_77
05E3 853983    1651            mov     dph,(_GetPosition2_vx_1_77 + 1)
05E6 853AF0    1652            mov     b,(_GetPosition2_vx_1_77 + 2)
05E9 E53B      1653            mov     a,(_GetPosition2_vx_1_77 + 3)
05EB C002      1654            push    ar2
05ED C003      1655            push    ar3
05EF C004      1656            push    ar4
05F1 120000    1657            lcall   _map2
05F4 AD82      1658            mov     r5,dpl
05F6 AE83      1659            mov     r6,dph
05F8 AFF0      1660            mov     r7,b
05FA F8        1661            mov     r0,a
05FB D004      1662            pop     ar4
05FD D003      1663            pop     ar3
05FF D002      1664            pop     ar2
0601 8A82      1665            mov     dpl,r2
0603 8B83      1666            mov     dph,r3
0605 8CF0      1667            mov     b,r4
0607 ED        1668            mov     a,r5
0608 120000    1669            lcall   __gptrput
060B A3        1670            inc     dptr
060C EE        1671            mov     a,r6
060D 120000    1672            lcall   __gptrput
0610 A3        1673            inc     dptr
0611 EF        1674            mov     a,r7
0612 120000    1675            lcall   __gptrput
0615 A3        1676            inc     dptr
0616 E8        1677            mov     a,r0
0617 120000    1678            lcall   __gptrput
061A           1679   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:337: printf("pos x\r\n");
061A C002      1680            push    ar2
061C C003      1681            push    ar3
061E C004      1682            push    ar4
0620 74C0      1683            mov     a,#__str_2
0622 C0E0      1684            push    acc
0624 74C0      1685            mov     a,#(__str_2 >> 8)
0626 C0E0      1686            push    acc
0628 7480      1687            mov     a,#0x80
062A C0E0      1688            push    acc
062C 120000    1689            lcall   _printf
062F 1581      1690            dec     sp
0631 1581      1691            dec     sp
0633 1581      1692            dec     sp
0635 D004      1693            pop     ar4
0637 D003      1694            pop     ar3
0639 D002      1695            pop     ar2
063B           1696   L018003?:
063B           1697   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:340: if (pos[1] < mid_y) {
063B 7404      1698            mov     a,#0x04
063D 2A        1699            add     a,r2
063E FD        1700            mov     r5,a
063F E4        1701            clr     a
0640 3B        1702            addc    a,r3
0641 FE        1703            mov     r6,a
0642 8C07      1704            mov     ar7,r4
0644 C002      1705            push    ar2
0646 C003      1706            push    ar3
0648 C004      1707            push    ar4
064A 8D82      1708            mov     dpl,r5
064C 8E83      1709            mov     dph,r6
064E 8FF0      1710            mov     b,r7
0650 120000    1711            lcall   __gptrget
0653 F8        1712            mov     r0,a
0654 A3        1713            inc     dptr
0655 120000    1714            lcall   __gptrget
0658 F9        1715            mov     r1,a
0659 A3        1716            inc     dptr
065A 120000    1717            lcall   __gptrget
065D FA        1718            mov     r2,a
065E A3        1719            inc     dptr
065F 120000    1720            lcall   __gptrget
0662 FB        1721            mov     r3,a
0663 C003      1722            push    ar3
0665 C004      1723            push    ar4
0667 C005      1724            push    ar5
0669 C006      1725            push    ar6
066B C007      1726            push    ar7
066D 7450      1727            mov     a,#0x50
066F C0E0      1728            push    acc
0671 7453      1729            mov     a,#0x53
0673 C0E0      1730            push    acc
0675 741B      1731            mov     a,#0x1B
0677 C0E0      1732            push    acc
0679 7440      1733            mov     a,#0x40
067B C0E0      1734            push    acc
067D 8882      1735            mov     dpl,r0
067F 8983      1736            mov     dph,r1
0681 8AF0      1737            mov     b,r2
0683 EB        1738            mov     a,r3
0684 120000    1739            lcall   ___fslt
0687 AA82      1740            mov     r2,dpl
0689 E581      1741            mov     a,sp
068B 24FC      1742            add     a,#0xfc
068D F581      1743            mov     sp,a
068F D007      1744            pop     ar7
0691 D006      1745            pop     ar6
0693 D005      1746            pop     ar5
0695 D004      1747            pop     ar4
0697 D003      1748            pop     ar3
0699 EA        1749            mov     a,r2
069A D004      1750            pop     ar4
069C D003      1751            pop     ar3
069E D002      1752            pop     ar2
06A0 7000      1753            jnz     L018012?
06A2 020000    1754            ljmp    L018005?
06A5           1755   L018012?:
06A5           1756   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:341: pos[1] = map2(vy, 0.0, mid_y, -50.0, 0.0);
06A5 C002      1757            push    ar2
06A7 C003      1758            push    ar3
06A9 C004      1759            push    ar4
06AB 759800    1760            mov     _map2_PARM_2,#0x00
06AE 759900    1761            mov     (_map2_PARM_2 + 1),#0x00
06B1 759A00    1762            mov     (_map2_PARM_2 + 2),#0x00
06B4 759B00    1763            mov     (_map2_PARM_2 + 3),#0x00
06B7 755850    1764            mov     _map2_PARM_3,#0x50
06BA 755953    1765            mov     (_map2_PARM_3 + 1),#0x53
06BD 755A1B    1766            mov     (_map2_PARM_3 + 2),#0x1B
06C0 755B40    1767            mov     (_map2_PARM_3 + 3),#0x40
06C3 751800    1768            mov     _map2_PARM_4,#0x00
06C6 751900    1769            mov     (_map2_PARM_4 + 1),#0x00
06C9 751A48    1770            mov     (_map2_PARM_4 + 2),#0x48
06CC 751BC2    1771            mov     (_map2_PARM_4 + 3),#0xC2
06CF 75D800    1772            mov     _map2_PARM_5,#0x00
06D2 75D900    1773            mov     (_map2_PARM_5 + 1),#0x00
06D5 75DA00    1774            mov     (_map2_PARM_5 + 2),#0x00
06D8 75DB00    1775            mov     (_map2_PARM_5 + 3),#0x00
06DB 858882    1776            mov     dpl,_GetPosition2_vy_1_77
06DE 858983    1777            mov     dph,(_GetPosition2_vy_1_77 + 1)
06E1 858AF0    1778            mov     b,(_GetPosition2_vy_1_77 + 2)
06E4 E58B      1779            mov     a,(_GetPosition2_vy_1_77 + 3)
06E6 C004      1780            push    ar4
06E8 C005      1781            push    ar5
06EA C006      1782            push    ar6
06EC C007      1783            push    ar7
06EE 120000    1784            lcall   _map2
06F1 A882      1785            mov     r0,dpl
06F3 A983      1786            mov     r1,dph
06F5 AAF0      1787            mov     r2,b
06F7 FB        1788            mov     r3,a
06F8 D007      1789            pop     ar7
06FA D006      1790            pop     ar6
06FC D005      1791            pop     ar5
06FE D004      1792            pop     ar4
0700 8D82      1793            mov     dpl,r5
0702 8E83      1794            mov     dph,r6
0704 8FF0      1795            mov     b,r7
0706 E8        1796            mov     a,r0
0707 120000    1797            lcall   __gptrput
070A A3        1798            inc     dptr
070B E9        1799            mov     a,r1
070C 120000    1800            lcall   __gptrput
070F A3        1801            inc     dptr
0710 EA        1802            mov     a,r2
0711 120000    1803            lcall   __gptrput
0714 A3        1804            inc     dptr
0715 EB        1805            mov     a,r3
0716 120000    1806            lcall   __gptrput
0719           1807   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:342: printf("neg y\r\n");
0719 C002      1808            push    ar2
071B C003      1809            push    ar3
071D C004      1810            push    ar4
071F C005      1811            push    ar5
0721 C006      1812            push    ar6
0723 C007      1813            push    ar7
0725 7480      1814            mov     a,#__str_3
0727 C0E0      1815            push    acc
0729 74C1      1816            mov     a,#(__str_3 >> 8)
072B C0E0      1817            push    acc
072D 7480      1818            mov     a,#0x80
072F C0E0      1819            push    acc
0731 120000    1820            lcall   _printf
0734 1581      1821            dec     sp
0736 1581      1822            dec     sp
0738 1581      1823            dec     sp
073A D007      1824            pop     ar7
073C D006      1825            pop     ar6
073E D005      1826            pop     ar5
0740 D004      1827            pop     ar4
0742 D003      1828            pop     ar3
0744 D002      1829            pop     ar2
0746 D004      1830            pop     ar4
0748 D003      1831            pop     ar3
074A D002      1832            pop     ar2
074C 020000    1833            ljmp    L018006?
074F           1834   L018005?:
074F           1835   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:345: pos[1] = map2(vy, mid_y, 3.3, 0.0, 50.0);
074F C002      1836            push    ar2
0751 C003      1837            push    ar3
0753 C004      1838            push    ar4
0755 759850    1839            mov     _map2_PARM_2,#0x50
0758 759953    1840            mov     (_map2_PARM_2 + 1),#0x53
075B 759A1B    1841            mov     (_map2_PARM_2 + 2),#0x1B
075E 759B40    1842            mov     (_map2_PARM_2 + 3),#0x40
0761 755833    1843            mov     _map2_PARM_3,#0x33
0764 755933    1844            mov     (_map2_PARM_3 + 1),#0x33
0767 755A53    1845            mov     (_map2_PARM_3 + 2),#0x53
076A 755B40    1846            mov     (_map2_PARM_3 + 3),#0x40
076D 751800    1847            mov     _map2_PARM_4,#0x00
0770 751900    1848            mov     (_map2_PARM_4 + 1),#0x00
0773 751A00    1849            mov     (_map2_PARM_4 + 2),#0x00
0776 751B00    1850            mov     (_map2_PARM_4 + 3),#0x00
0779 75D800    1851            mov     _map2_PARM_5,#0x00
077C 75D900    1852            mov     (_map2_PARM_5 + 1),#0x00
077F 75DA48    1853            mov     (_map2_PARM_5 + 2),#0x48
0782 75DB42    1854            mov     (_map2_PARM_5 + 3),#0x42
0785 858882    1855            mov     dpl,_GetPosition2_vy_1_77
0788 858983    1856            mov     dph,(_GetPosition2_vy_1_77 + 1)
078B 858AF0    1857            mov     b,(_GetPosition2_vy_1_77 + 2)
078E E58B      1858            mov     a,(_GetPosition2_vy_1_77 + 3)
0790 C004      1859            push    ar4
0792 C005      1860            push    ar5
0794 C006      1861            push    ar6
0796 C007      1862            push    ar7
0798 120000    1863            lcall   _map2
079B A882      1864            mov     r0,dpl
079D A983      1865            mov     r1,dph
079F AAF0      1866            mov     r2,b
07A1 FB        1867            mov     r3,a
07A2 D007      1868            pop     ar7
07A4 D006      1869            pop     ar6
07A6 D005      1870            pop     ar5
07A8 D004      1871            pop     ar4
07AA 8D82      1872            mov     dpl,r5
07AC 8E83      1873            mov     dph,r6
07AE 8FF0      1874            mov     b,r7
07B0 E8        1875            mov     a,r0
07B1 120000    1876            lcall   __gptrput
07B4 A3        1877            inc     dptr
07B5 E9        1878            mov     a,r1
07B6 120000    1879            lcall   __gptrput
07B9 A3        1880            inc     dptr
07BA EA        1881            mov     a,r2
07BB 120000    1882            lcall   __gptrput
07BE A3        1883            inc     dptr
07BF EB        1884            mov     a,r3
07C0 120000    1885            lcall   __gptrput
07C3           1886   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:346: printf("pos y\r\n");
07C3 C002      1887            push    ar2
07C5 C003      1888            push    ar3
07C7 C004      1889            push    ar4
07C9 C005      1890            push    ar5
07CB C006      1891            push    ar6
07CD C007      1892            push    ar7
07CF 7400      1893            mov     a,#__str_4
07D1 C0E0      1894            push    acc
07D3 74C2      1895            mov     a,#(__str_4 >> 8)
07D5 C0E0      1896            push    acc
07D7 7480      1897            mov     a,#0x80
07D9 C0E0      1898            push    acc
07DB 120000    1899            lcall   _printf
07DE 1581      1900            dec     sp
07E0 1581      1901            dec     sp
07E2 1581      1902            dec     sp
07E4 D007      1903            pop     ar7
07E6 D006      1904            pop     ar6
07E8 D005      1905            pop     ar5
07EA D004      1906            pop     ar4
07EC D003      1907            pop     ar3
07EE D002      1908            pop     ar2
07F0           1909   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:360: printf("xpos: %s ypos: %s\r\n", buff_x, buff_y);
07F0 D004      1910            pop     ar4
07F2 D003      1911            pop     ar3
07F4 D002      1912            pop     ar2
07F6           1913   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:346: printf("pos y\r\n");
07F6           1914   L018006?:
07F6           1915   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:351: mov_x = pos[0];
07F6 8A82      1916            mov     dpl,r2
07F8 8B83      1917            mov     dph,r3
07FA 8CF0      1918            mov     b,r4
07FC 120000    1919            lcall   __gptrget
07FF FA        1920            mov     r2,a
0800 A3        1921            inc     dptr
0801 120000    1922            lcall   __gptrget
0804 FB        1923            mov     r3,a
0805 A3        1924            inc     dptr
0806 120000    1925            lcall   __gptrget
0809 FC        1926            mov     r4,a
080A A3        1927            inc     dptr
080B 120000    1928            lcall   __gptrget
080E F8        1929            mov     r0,a
080F           1930   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:352: mov_y = pos[1];
080F 8D82      1931            mov     dpl,r5
0811 8E83      1932            mov     dph,r6
0813 8FF0      1933            mov     b,r7
0815 120000    1934            lcall   __gptrget
0818 FD        1935            mov     r5,a
0819 A3        1936            inc     dptr
081A 120000    1937            lcall   __gptrget
081D FE        1938            mov     r6,a
081E A3        1939            inc     dptr
081F 120000    1940            lcall   __gptrget
0822 FF        1941            mov     r7,a
0823 A3        1942            inc     dptr
0824 120000    1943            lcall   __gptrget
0827 F9        1944            mov     r1,a
0828           1945   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:354: sprintf(buff_x, "%.4f", mov_x);
0828 C005      1946            push    ar5
082A C006      1947            push    ar6
082C C007      1948            push    ar7
082E C001      1949            push    ar1
0830 C002      1950            push    ar2
0832 C003      1951            push    ar3
0834 C004      1952            push    ar4
0836 C000      1953            push    ar0
0838 7440      1954            mov     a,#__str_5
083A C0E0      1955            push    acc
083C 74C2      1956            mov     a,#(__str_5 >> 8)
083E C0E0      1957            push    acc
0840 7480      1958            mov     a,#0x80
0842 C0E0      1959            push    acc
0844 74A8      1960            mov     a,#_GetPosition2_buff_x_1_77
0846 C0E0      1961            push    acc
0848 74B4      1962            mov     a,#(_GetPosition2_buff_x_1_77 >> 8)
084A C0E0      1963            push    acc
084C E4        1964            clr     a
084D C0E0      1965            push    acc
084F 120000    1966            lcall   _sprintf
0852 E581      1967            mov     a,sp
0854 24F6      1968            add     a,#0xf6
0856 F581      1969            mov     sp,a
0858           1970   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:355: LCDprint(buff_x, 1, 1);
0858 75E801    1971            mov     _LCDprint_PARM_2,#0x01
085B D248      1972            setb    _LCDprint_PARM_3
085D 90B4A8    1973            mov     dptr,#_GetPosition2_buff_x_1_77
0860 75F000    1974            mov     b,#0x00
0863 120000    1975            lcall   _LCDprint
0866           1976   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:356: sprintf(buff_y, "%.4f", mov_y);
0866 7440      1977            mov     a,#__str_5
0868 C0E0      1978            push    acc
086A 74C2      1979            mov     a,#(__str_5 >> 8)
086C C0E0      1980            push    acc
086E 7480      1981            mov     a,#0x80
0870 C0E0      1982            push    acc
0872 74F8      1983            mov     a,#_GetPosition2_buff_y_1_77
0874 C0E0      1984            push    acc
0876 74B4      1985            mov     a,#(_GetPosition2_buff_y_1_77 >> 8)
0878 C0E0      1986            push    acc
087A E4        1987            clr     a
087B C0E0      1988            push    acc
087D 120000    1989            lcall   _sprintf
0880 E581      1990            mov     a,sp
0882 24F6      1991            add     a,#0xf6
0884 F581      1992            mov     sp,a
0886           1993   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:357: LCDprint(buff_y, 2, 1);
0886 75E802    1994            mov     _LCDprint_PARM_2,#0x02
0889 D248      1995            setb    _LCDprint_PARM_3
088B 90B4F8    1996            mov     dptr,#_GetPosition2_buff_y_1_77
088E 75F000    1997            mov     b,#0x00
0891 120000    1998            lcall   _LCDprint
0894           1999   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:360: printf("xpos: %s ypos: %s\r\n", buff_x, buff_y);
0894 74F8      2000            mov     a,#_GetPosition2_buff_y_1_77
0896 C0E0      2001            push    acc
0898 74B4      2002            mov     a,#(_GetPosition2_buff_y_1_77 >> 8)
089A C0E0      2003            push    acc
089C E4        2004            clr     a
089D C0E0      2005            push    acc
089F 74A8      2006            mov     a,#_GetPosition2_buff_x_1_77
08A1 C0E0      2007            push    acc
08A3 74B4      2008            mov     a,#(_GetPosition2_buff_x_1_77 >> 8)
08A5 C0E0      2009            push    acc
08A7 E4        2010            clr     a
08A8 C0E0      2011            push    acc
08AA 74C0      2012            mov     a,#__str_6
08AC C0E0      2013            push    acc
08AE 74C2      2014            mov     a,#(__str_6 >> 8)
08B0 C0E0      2015            push    acc
08B2 7480      2016            mov     a,#0x80
08B4 C0E0      2017            push    acc
08B6 120000    2018            lcall   _printf
08B9 E581      2019            mov     a,sp
08BB 24F7      2020            add     a,#0xf7
08BD F581      2021            mov     sp,a
08BF 22        2022            ret
08C0           2023   ;------------------------------------------------------------
08C0           2024   ;Allocation info for local variables in function 'main'
08C0           2025   ;------------------------------------------------------------
08C0           2026   ;v                         Allocated with name '_main_v_1_83'
08C0           2027   ;xy_pos                    Allocated with name '_main_xy_pos_1_83'
08C0           2028   ;sloc0                     Allocated with name '_main_sloc0_1_0'
08C0           2029   ;------------------------------------------------------------
08C0           2030   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:430: void main (void)
08C0           2031   ;        -----------------------------------------
08C0           2032   ;         function main
08C0           2033   ;        -----------------------------------------
08C0           2034   _main:
08C0           2035   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:439: TIMER0_Init();
08C0 120000    2036            lcall   _TIMER0_Init
08C3           2037   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:440: LCD_4BIT();
08C3 120000    2038            lcall   _LCD_4BIT
08C6           2039   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:442: waitms(500); // Give PuTTy a chance to start before sending
08C6 9001F4    2040            mov     dptr,#0x01F4
08C9 120000    2041            lcall   _waitms
08CC           2042   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:443: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
08CC 7400      2043            mov     a,#__str_7
08CE C0E0      2044            push    acc
08D0 74C3      2045            mov     a,#(__str_7 >> 8)
08D2 C0E0      2046            push    acc
08D4 7480      2047            mov     a,#0x80
08D6 C0E0      2048            push    acc
08D8 120000    2049            lcall   _printf
08DB 1581      2050            dec     sp
08DD 1581      2051            dec     sp
08DF 1581      2052            dec     sp
08E1           2053   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:448: __FILE__, __DATE__, __TIME__);
08E1           2054   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:447: "Compiled: %s, %s\n\n",
08E1 7440      2055            mov     a,#__str_11
08E3 C0E0      2056            push    acc
08E5 74C3      2057            mov     a,#(__str_11 >> 8)
08E7 C0E0      2058            push    acc
08E9 7480      2059            mov     a,#0x80
08EB C0E0      2060            push    acc
08ED 7480      2061            mov     a,#__str_10
08EF C0E0      2062            push    acc
08F1 74C3      2063            mov     a,#(__str_10 >> 8)
08F3 C0E0      2064            push    acc
08F5 7480      2065            mov     a,#0x80
08F7 C0E0      2066            push    acc
08F9 74C0      2067            mov     a,#__str_9
08FB C0E0      2068            push    acc
08FD 74C3      2069            mov     a,#(__str_9 >> 8)
08FF C0E0      2070            push    acc
0901 7480      2071            mov     a,#0x80
0903 C0E0      2072            push    acc
0905 7400      2073            mov     a,#__str_8
0907 C0E0      2074            push    acc
0909 74C4      2075            mov     a,#(__str_8 >> 8)
090B C0E0      2076            push    acc
090D 7480      2077            mov     a,#0x80
090F C0E0      2078            push    acc
0911 120000    2079            lcall   _printf
0914 E581      2080            mov     a,sp
0916 24F4      2081            add     a,#0xf4
0918 F581      2082            mov     sp,a
091A           2083   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:450: InitPinADC(1, 4); // Configure P1.4 as analog input
091A 756804    2084            mov     _InitPinADC_PARM_2,#0x04
091D 758201    2085            mov     dpl,#0x01
0920 120000    2086            lcall   _InitPinADC
0923           2087   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:451: InitPinADC(1, 5); // Configure P1.5 as analog input
0923 756805    2088            mov     _InitPinADC_PARM_2,#0x05
0926 758201    2089            mov     dpl,#0x01
0929 120000    2090            lcall   _InitPinADC
092C           2091   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:452: InitADC();
092C 120000    2092            lcall   _InitADC
092F           2093   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:480: while(1)
092F           2094   L019002?:
092F           2095   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:483: v[0] = Volts_at_Pin(XPOS_PIN) ;
092F 75820A    2096            mov     dpl,#0x0A
0932 120000    2097            lcall   _Volts_at_Pin
0935 AA82      2098            mov     r2,dpl
0937 AB83      2099            mov     r3,dph
0939 ACF0      2100            mov     r4,b
093B FD        2101            mov     r5,a
093C 8AC8      2102            mov     _main_v_1_83,r2
093E 8BC9      2103            mov     (_main_v_1_83 + 1),r3
0940 8CCA      2104            mov     (_main_v_1_83 + 2),r4
0942 8DCB      2105            mov     (_main_v_1_83 + 3),r5
0944           2106   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:484: v[1] = Volts_at_Pin(YPOS_PIN) ;
0944 75820B    2107            mov     dpl,#0x0B
0947 120000    2108            lcall   _Volts_at_Pin
094A AA82      2109            mov     r2,dpl
094C AB83      2110            mov     r3,dph
094E ACF0      2111            mov     r4,b
0950 FD        2112            mov     r5,a
0951 8ACC      2113            mov     (_main_v_1_83 + 0x0004),r2
0953 8BCD      2114            mov     ((_main_v_1_83 + 0x0004) + 1),r3
0955 8CCE      2115            mov     ((_main_v_1_83 + 0x0004) + 2),r4
0957 8DCF      2116            mov     ((_main_v_1_83 + 0x0004) + 3),r5
0959           2117   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:491: GetPosition2(v, xy_pos);
0959 759818    2118            mov     _GetPosition2_PARM_2,#_main_xy_pos_1_83
095C 759900    2119            mov     (_GetPosition2_PARM_2 + 1),#0x00
095F 759A40    2120            mov     (_GetPosition2_PARM_2 + 2),#0x40
0962 90B3C8    2121            mov     dptr,#_main_v_1_83
0965 75F040    2122            mov     b,#0x40
0968 120000    2123            lcall   _GetPosition2
096B           2124   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:493: printf("xvolts: %7.5f yvolts: %7.5f\r\n", Volts_at_Pin(XPOS_PIN), Volts_at_Pin(YPOS_PIN));
096B 75820B    2125            mov     dpl,#0x0B
096E 120000    2126            lcall   _Volts_at_Pin
0971 858258    2127            mov     _main_sloc0_1_0,dpl
0974 858359    2128            mov     (_main_sloc0_1_0 + 1),dph
0977 85F05A    2129            mov     (_main_sloc0_1_0 + 2),b
097A F55B      2130            mov     (_main_sloc0_1_0 + 3),a
097C 75820A    2131            mov     dpl,#0x0A
097F 120000    2132            lcall   _Volts_at_Pin
0982 AE82      2133            mov     r6,dpl
0984 AF83      2134            mov     r7,dph
0986 AAF0      2135            mov     r2,b
0988 FB        2136            mov     r3,a
0989 C058      2137            push    _main_sloc0_1_0
098B C059      2138            push    (_main_sloc0_1_0 + 1)
098D C05A      2139            push    (_main_sloc0_1_0 + 2)
098F C05B      2140            push    (_main_sloc0_1_0 + 3)
0991 C006      2141            push    ar6
0993 C007      2142            push    ar7
0995 C002      2143            push    ar2
0997 C003      2144            push    ar3
0999 7480      2145            mov     a,#__str_12
099B C0E0      2146            push    acc
099D 74C4      2147            mov     a,#(__str_12 >> 8)
099F C0E0      2148            push    acc
09A1 7480      2149            mov     a,#0x80
09A3 C0E0      2150            push    acc
09A5 120000    2151            lcall   _printf
09A8 E581      2152            mov     a,sp
09AA 24F5      2153            add     a,#0xf5
09AC F581      2154            mov     sp,a
09AE           2155   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\Joystick-tester\working-joystick.c:495: waitms(500);
09AE 9001F4    2156            mov     dptr,#0x01F4
09B1 120000    2157            lcall   _waitms
09B4 020000    2158            ljmp    L019002?
09B7           2159            rseg R_CSEG
09B7           2160   
0000           2161            rseg R_XINIT
0000           2162   
0000           2163            rseg R_CONST
0000           2164   __str_0:
0000 2566      2165            db '%f'
0002 0D        2166            db 0x0D
0003 0A        2167            db 0x0A
0004 00        2168            db 0x00
0005           2169   __str_1:
0005 6E656720  2170            db 'neg x'
     78
000A 0D        2171            db 0x0D
000B 0A        2172            db 0x0A
000C 00        2173            db 0x00
000D           2174   __str_2:
000D 706F7320  2175            db 'pos x'
     78
0012 0D        2176            db 0x0D
0013 0A        2177            db 0x0A
0014 00        2178            db 0x00
0015           2179   __str_3:
0015 6E656720  2180            db 'neg y'
     79
001A 0D        2181            db 0x0D
001B 0A        2182            db 0x0A
001C 00        2183            db 0x00
001D           2184   __str_4:
001D 706F7320  2185            db 'pos y'
     79
0022 0D        2186            db 0x0D
0023 0A        2187            db 0x0A
0024 00        2188            db 0x00
0025           2189   __str_5:
0025 252E3466  2190            db '%.4f'
0029 00        2191            db 0x00
002A           2192   __str_6:
002A 78706F73  2193            db 'xpos: %s ypos: %s'
     3A202573
     2079706F
     733A2025
     73
003B 0D        2194            db 0x0D
003C 0A        2195            db 0x0A
003D 00        2196            db 0x00
003E           2197   __str_7:
003E 1B        2198            db 0x1B
003F 5B324A    2199            db '[2J'
0042 00        2200            db 0x00
0043           2201   __str_8:
0043 41444320  2202            db 'ADC test program'
     74657374
     2070726F
     6772616D
0053 0A        2203            db 0x0A
0054 46696C65  2204            db 'File: %s'
     3A202573
005C 0A        2205            db 0x0A
005D 436F6D70  2206            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
006D 0A        2207            db 0x0A
006E 0A        2208            db 0x0A
006F 00        2209            db 0x00
0070           2210   __str_9:
0070 433A      2211            db 'C:'
0072 5C        2212            db 0x5C
0073 55736572  2213            db 'Users'
     73
0078 5C        2214            db 0x5C
0079 6B657962  2215            db 'keybo'
     6F
007E 5C        2216            db 0x5C
007F 446F6375  2217            db 'Documents'
     6D656E74
     73
0088 5C        2218            db 0x5C
0089 47697448  2219            db 'GitHub'
     7562
008F 5C        2220            db 0x5C
0090 50726F6A  2221            db 'Project2ELEC291'
     65637432
     454C4543
     323931
009F 5C        2222            db 0x5C
00A0 4A6F7973  2223            db 'Joystick-tes'
     7469636B
     2D746573
00AC 746572    2224            db 'ter'
00AF 5C        2225            db 0x5C
00B0 776F726B  2226            db 'working-joystick.c'
     696E672D
     6A6F7973
     7469636B
     2E63
00C2 00        2227            db 0x00
00C3           2228   __str_10:
00C3 4D617220  2229            db 'Mar 31 2024'
     33312032
     303234
00CE 00        2230            db 0x00
00CF           2231   __str_11:
00CF 31363A35  2232            db '16:58:56'
     383A3536
00D7 00        2233            db 0x00
00D8           2234   __str_12:
00D8 78766F6C  2235            db 'xvolts: %7.5f yvolts: %7.5f'
     74733A20
     25372E35
     66207976
     6F6C7473
     3A202537
     2E3566
00F3 0D        2236            db 0x0D
00F4 0A        2237            db 0x0A
00F5 00        2238            db 0x00
00F6           2239   
0003           2240            CSEG
0003           2241   
0003           2242   end
