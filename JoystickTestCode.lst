0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Mon Mar 18 02:19:53 2024
0000              5   ;--------------------------------------------------------
                  5   $name JoystickTestCode
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _GetPosition
0000             30            public _LCDprint
0000             31            public _LCD_4BIT
0000             32            public _WriteCommand
0000             33            public _WriteData
0000             34            public _LCD_byte
0000             35            public _LCD_pulse
0000             36            public _Volts_at_Pin
0000             37            public _Get_ADC
0000             38            public _ADC_at_Pin
0000             39            public _TIMER0_Init
0000             40            public _InitPinADC
0000             41            public _waitms
0000             42            public _Timer3us
0000             43            public _InitADC
0000             44            public __c51_external_startup
0000             45            public _LCDprint_PARM_3
0000             46            public _GetPosition_PARM_2
0000             47            public _LCDprint_PARM_2
0000             48            public _overflow_count
0000             49   ;--------------------------------------------------------
0000             50   ; Special Function Registers
0000             51   ;--------------------------------------------------------
0000             52   _ACC            DATA 0xe0
0000             53   _ADC0ASAH       DATA 0xb6
0000             54   _ADC0ASAL       DATA 0xb5
0000             55   _ADC0ASCF       DATA 0xa1
0000             56   _ADC0ASCT       DATA 0xc7
0000             57   _ADC0CF0        DATA 0xbc
0000             58   _ADC0CF1        DATA 0xb9
0000             59   _ADC0CF2        DATA 0xdf
0000             60   _ADC0CN0        DATA 0xe8
0000             61   _ADC0CN1        DATA 0xb2
0000             62   _ADC0CN2        DATA 0xb3
0000             63   _ADC0GTH        DATA 0xc4
0000             64   _ADC0GTL        DATA 0xc3
0000             65   _ADC0H          DATA 0xbe
0000             66   _ADC0L          DATA 0xbd
0000             67   _ADC0LTH        DATA 0xc6
0000             68   _ADC0LTL        DATA 0xc5
0000             69   _ADC0MX         DATA 0xbb
0000             70   _B              DATA 0xf0
0000             71   _CKCON0         DATA 0x8e
0000             72   _CKCON1         DATA 0xa6
0000             73   _CLEN0          DATA 0xc6
0000             74   _CLIE0          DATA 0xc7
0000             75   _CLIF0          DATA 0xe8
0000             76   _CLKSEL         DATA 0xa9
0000             77   _CLOUT0         DATA 0xd1
0000             78   _CLU0CF         DATA 0xb1
0000             79   _CLU0FN         DATA 0xaf
0000             80   _CLU0MX         DATA 0x84
0000             81   _CLU1CF         DATA 0xb3
0000             82   _CLU1FN         DATA 0xb2
0000             83   _CLU1MX         DATA 0x85
0000             84   _CLU2CF         DATA 0xb6
0000             85   _CLU2FN         DATA 0xb5
0000             86   _CLU2MX         DATA 0x91
0000             87   _CLU3CF         DATA 0xbf
0000             88   _CLU3FN         DATA 0xbe
0000             89   _CLU3MX         DATA 0xae
0000             90   _CMP0CN0        DATA 0x9b
0000             91   _CMP0CN1        DATA 0x99
0000             92   _CMP0MD         DATA 0x9d
0000             93   _CMP0MX         DATA 0x9f
0000             94   _CMP1CN0        DATA 0xbf
0000             95   _CMP1CN1        DATA 0xac
0000             96   _CMP1MD         DATA 0xab
0000             97   _CMP1MX         DATA 0xaa
0000             98   _CRC0CN0        DATA 0xce
0000             99   _CRC0CN1        DATA 0x86
0000            100   _CRC0CNT        DATA 0xd3
0000            101   _CRC0DAT        DATA 0xcb
0000            102   _CRC0FLIP       DATA 0xcf
0000            103   _CRC0IN         DATA 0xca
0000            104   _CRC0ST         DATA 0xd2
0000            105   _DAC0CF0        DATA 0x91
0000            106   _DAC0CF1        DATA 0x92
0000            107   _DAC0H          DATA 0x85
0000            108   _DAC0L          DATA 0x84
0000            109   _DAC1CF0        DATA 0x93
0000            110   _DAC1CF1        DATA 0x94
0000            111   _DAC1H          DATA 0x8a
0000            112   _DAC1L          DATA 0x89
0000            113   _DAC2CF0        DATA 0x95
0000            114   _DAC2CF1        DATA 0x96
0000            115   _DAC2H          DATA 0x8c
0000            116   _DAC2L          DATA 0x8b
0000            117   _DAC3CF0        DATA 0x9a
0000            118   _DAC3CF1        DATA 0x9c
0000            119   _DAC3H          DATA 0x8e
0000            120   _DAC3L          DATA 0x8d
0000            121   _DACGCF0        DATA 0x88
0000            122   _DACGCF1        DATA 0x98
0000            123   _DACGCF2        DATA 0xa2
0000            124   _DERIVID        DATA 0xad
0000            125   _DEVICEID       DATA 0xb5
0000            126   _DPH            DATA 0x83
0000            127   _DPL            DATA 0x82
0000            128   _EIE1           DATA 0xe6
0000            129   _EIE2           DATA 0xf3
0000            130   _EIP1           DATA 0xbb
0000            131   _EIP1H          DATA 0xee
0000            132   _EIP2           DATA 0xed
0000            133   _EIP2H          DATA 0xf6
0000            134   _EMI0CN         DATA 0xe7
0000            135   _FLKEY          DATA 0xb7
0000            136   _HFO0CAL        DATA 0xc7
0000            137   _HFO1CAL        DATA 0xd6
0000            138   _HFOCN          DATA 0xef
0000            139   _I2C0ADM        DATA 0xff
0000            140   _I2C0CN0        DATA 0xba
0000            141   _I2C0DIN        DATA 0xbc
0000            142   _I2C0DOUT       DATA 0xbb
0000            143   _I2C0FCN0       DATA 0xad
0000            144   _I2C0FCN1       DATA 0xab
0000            145   _I2C0FCT        DATA 0xf5
0000            146   _I2C0SLAD       DATA 0xbd
0000            147   _I2C0STAT       DATA 0xb9
0000            148   _IE             DATA 0xa8
0000            149   _IP             DATA 0xb8
0000            150   _IPH            DATA 0xf2
0000            151   _IT01CF         DATA 0xe4
0000            152   _LFO0CN         DATA 0xb1
0000            153   _P0             DATA 0x80
0000            154   _P0MASK         DATA 0xfe
0000            155   _P0MAT          DATA 0xfd
0000            156   _P0MDIN         DATA 0xf1
0000            157   _P0MDOUT        DATA 0xa4
0000            158   _P0SKIP         DATA 0xd4
0000            159   _P1             DATA 0x90
0000            160   _P1MASK         DATA 0xee
0000            161   _P1MAT          DATA 0xed
0000            162   _P1MDIN         DATA 0xf2
0000            163   _P1MDOUT        DATA 0xa5
0000            164   _P1SKIP         DATA 0xd5
0000            165   _P2             DATA 0xa0
0000            166   _P2MASK         DATA 0xfc
0000            167   _P2MAT          DATA 0xfb
0000            168   _P2MDIN         DATA 0xf3
0000            169   _P2MDOUT        DATA 0xa6
0000            170   _P2SKIP         DATA 0xcc
0000            171   _P3             DATA 0xb0
0000            172   _P3MDIN         DATA 0xf4
0000            173   _P3MDOUT        DATA 0x9c
0000            174   _PCA0CENT       DATA 0x9e
0000            175   _PCA0CLR        DATA 0x9c
0000            176   _PCA0CN0        DATA 0xd8
0000            177   _PCA0CPH0       DATA 0xfc
0000            178   _PCA0CPH1       DATA 0xea
0000            179   _PCA0CPH2       DATA 0xec
0000            180   _PCA0CPH3       DATA 0xf5
0000            181   _PCA0CPH4       DATA 0x85
0000            182   _PCA0CPH5       DATA 0xde
0000            183   _PCA0CPL0       DATA 0xfb
0000            184   _PCA0CPL1       DATA 0xe9
0000            185   _PCA0CPL2       DATA 0xeb
0000            186   _PCA0CPL3       DATA 0xf4
0000            187   _PCA0CPL4       DATA 0x84
0000            188   _PCA0CPL5       DATA 0xdd
0000            189   _PCA0CPM0       DATA 0xda
0000            190   _PCA0CPM1       DATA 0xdb
0000            191   _PCA0CPM2       DATA 0xdc
0000            192   _PCA0CPM3       DATA 0xae
0000            193   _PCA0CPM4       DATA 0xaf
0000            194   _PCA0CPM5       DATA 0xcc
0000            195   _PCA0H          DATA 0xfa
0000            196   _PCA0L          DATA 0xf9
0000            197   _PCA0MD         DATA 0xd9
0000            198   _PCA0POL        DATA 0x96
0000            199   _PCA0PWM        DATA 0xf7
0000            200   _PCON0          DATA 0x87
0000            201   _PCON1          DATA 0xcd
0000            202   _PFE0CN         DATA 0xc1
0000            203   _PRTDRV         DATA 0xf6
0000            204   _PSCTL          DATA 0x8f
0000            205   _PSTAT0         DATA 0xaa
0000            206   _PSW            DATA 0xd0
0000            207   _REF0CN         DATA 0xd1
0000            208   _REG0CN         DATA 0xc9
0000            209   _REVID          DATA 0xb6
0000            210   _RSTSRC         DATA 0xef
0000            211   _SBCON1         DATA 0x94
0000            212   _SBRLH1         DATA 0x96
0000            213   _SBRLL1         DATA 0x95
0000            214   _SBUF           DATA 0x99
0000            215   _SBUF0          DATA 0x99
0000            216   _SBUF1          DATA 0x92
0000            217   _SCON           DATA 0x98
0000            218   _SCON0          DATA 0x98
0000            219   _SCON1          DATA 0xc8
0000            220   _SFRPAGE        DATA 0xa7
0000            221   _SFRPGCN        DATA 0xbc
0000            222   _SFRSTACK       DATA 0xd7
0000            223   _SMB0ADM        DATA 0xd6
0000            224   _SMB0ADR        DATA 0xd7
0000            225   _SMB0CF         DATA 0xc1
0000            226   _SMB0CN0        DATA 0xc0
0000            227   _SMB0DAT        DATA 0xc2
0000            228   _SMB0FCN0       DATA 0xc3
0000            229   _SMB0FCN1       DATA 0xc4
0000            230   _SMB0FCT        DATA 0xef
0000            231   _SMB0RXLN       DATA 0xc5
0000            232   _SMB0TC         DATA 0xac
0000            233   _SMOD1          DATA 0x93
0000            234   _SP             DATA 0x81
0000            235   _SPI0CFG        DATA 0xa1
0000            236   _SPI0CKR        DATA 0xa2
0000            237   _SPI0CN0        DATA 0xf8
0000            238   _SPI0DAT        DATA 0xa3
0000            239   _SPI0FCN0       DATA 0x9a
0000            240   _SPI0FCN1       DATA 0x9b
0000            241   _SPI0FCT        DATA 0xf7
0000            242   _SPI0PCF        DATA 0xdf
0000            243   _TCON           DATA 0x88
0000            244   _TH0            DATA 0x8c
0000            245   _TH1            DATA 0x8d
0000            246   _TL0            DATA 0x8a
0000            247   _TL1            DATA 0x8b
0000            248   _TMOD           DATA 0x89
0000            249   _TMR2CN0        DATA 0xc8
0000            250   _TMR2CN1        DATA 0xfd
0000            251   _TMR2H          DATA 0xcf
0000            252   _TMR2L          DATA 0xce
0000            253   _TMR2RLH        DATA 0xcb
0000            254   _TMR2RLL        DATA 0xca
0000            255   _TMR3CN0        DATA 0x91
0000            256   _TMR3CN1        DATA 0xfe
0000            257   _TMR3H          DATA 0x95
0000            258   _TMR3L          DATA 0x94
0000            259   _TMR3RLH        DATA 0x93
0000            260   _TMR3RLL        DATA 0x92
0000            261   _TMR4CN0        DATA 0x98
0000            262   _TMR4CN1        DATA 0xff
0000            263   _TMR4H          DATA 0xa5
0000            264   _TMR4L          DATA 0xa4
0000            265   _TMR4RLH        DATA 0xa3
0000            266   _TMR4RLL        DATA 0xa2
0000            267   _TMR5CN0        DATA 0xc0
0000            268   _TMR5CN1        DATA 0xf1
0000            269   _TMR5H          DATA 0xd5
0000            270   _TMR5L          DATA 0xd4
0000            271   _TMR5RLH        DATA 0xd3
0000            272   _TMR5RLL        DATA 0xd2
0000            273   _UART0PCF       DATA 0xd9
0000            274   _UART1FCN0      DATA 0x9d
0000            275   _UART1FCN1      DATA 0xd8
0000            276   _UART1FCT       DATA 0xfa
0000            277   _UART1LIN       DATA 0x9e
0000            278   _UART1PCF       DATA 0xda
0000            279   _VDM0CN         DATA 0xff
0000            280   _WDTCN          DATA 0x97
0000            281   _XBR0           DATA 0xe1
0000            282   _XBR1           DATA 0xe2
0000            283   _XBR2           DATA 0xe3
0000            284   _XOSC0CN        DATA 0x86
0000            285   _DPTR           DATA 0x8382
0000            286   _TMR2RL         DATA 0xcbca
0000            287   _TMR3RL         DATA 0x9392
0000            288   _TMR4RL         DATA 0xa3a2
0000            289   _TMR5RL         DATA 0xd3d2
0000            290   _TMR0           DATA 0x8c8a
0000            291   _TMR1           DATA 0x8d8b
0000            292   _TMR2           DATA 0xcfce
0000            293   _TMR3           DATA 0x9594
0000            294   _TMR4           DATA 0xa5a4
0000            295   _TMR5           DATA 0xd5d4
0000            296   _SBRL1          DATA 0x9695
0000            297   _PCA0           DATA 0xfaf9
0000            298   _PCA0CP0        DATA 0xfcfb
0000            299   _PCA0CP1        DATA 0xeae9
0000            300   _PCA0CP2        DATA 0xeceb
0000            301   _PCA0CP3        DATA 0xf5f4
0000            302   _PCA0CP4        DATA 0x8584
0000            303   _PCA0CP5        DATA 0xdedd
0000            304   _ADC0ASA        DATA 0xb6b5
0000            305   _ADC0GT         DATA 0xc4c3
0000            306   _ADC0           DATA 0xbebd
0000            307   _ADC0LT         DATA 0xc6c5
0000            308   _DAC0           DATA 0x8584
0000            309   _DAC1           DATA 0x8a89
0000            310   _DAC2           DATA 0x8c8b
0000            311   _DAC3           DATA 0x8e8d
0000            312   ;--------------------------------------------------------
0000            313   ; special function bits
0000            314   ;--------------------------------------------------------
0000            315   _ACC_0          BIT 0xe0
0000            316   _ACC_1          BIT 0xe1
0000            317   _ACC_2          BIT 0xe2
0000            318   _ACC_3          BIT 0xe3
0000            319   _ACC_4          BIT 0xe4
0000            320   _ACC_5          BIT 0xe5
0000            321   _ACC_6          BIT 0xe6
0000            322   _ACC_7          BIT 0xe7
0000            323   _TEMPE          BIT 0xe8
0000            324   _ADGN0          BIT 0xe9
0000            325   _ADGN1          BIT 0xea
0000            326   _ADWINT         BIT 0xeb
0000            327   _ADBUSY         BIT 0xec
0000            328   _ADINT          BIT 0xed
0000            329   _IPOEN          BIT 0xee
0000            330   _ADEN           BIT 0xef
0000            331   _B_0            BIT 0xf0
0000            332   _B_1            BIT 0xf1
0000            333   _B_2            BIT 0xf2
0000            334   _B_3            BIT 0xf3
0000            335   _B_4            BIT 0xf4
0000            336   _B_5            BIT 0xf5
0000            337   _B_6            BIT 0xf6
0000            338   _B_7            BIT 0xf7
0000            339   _C0FIF          BIT 0xe8
0000            340   _C0RIF          BIT 0xe9
0000            341   _C1FIF          BIT 0xea
0000            342   _C1RIF          BIT 0xeb
0000            343   _C2FIF          BIT 0xec
0000            344   _C2RIF          BIT 0xed
0000            345   _C3FIF          BIT 0xee
0000            346   _C3RIF          BIT 0xef
0000            347   _D1SRC0         BIT 0x88
0000            348   _D1SRC1         BIT 0x89
0000            349   _D1AMEN         BIT 0x8a
0000            350   _D01REFSL       BIT 0x8b
0000            351   _D3SRC0         BIT 0x8c
0000            352   _D3SRC1         BIT 0x8d
0000            353   _D3AMEN         BIT 0x8e
0000            354   _D23REFSL       BIT 0x8f
0000            355   _D0UDIS         BIT 0x98
0000            356   _D1UDIS         BIT 0x99
0000            357   _D2UDIS         BIT 0x9a
0000            358   _D3UDIS         BIT 0x9b
0000            359   _EX0            BIT 0xa8
0000            360   _ET0            BIT 0xa9
0000            361   _EX1            BIT 0xaa
0000            362   _ET1            BIT 0xab
0000            363   _ES0            BIT 0xac
0000            364   _ET2            BIT 0xad
0000            365   _ESPI0          BIT 0xae
0000            366   _EA             BIT 0xaf
0000            367   _PX0            BIT 0xb8
0000            368   _PT0            BIT 0xb9
0000            369   _PX1            BIT 0xba
0000            370   _PT1            BIT 0xbb
0000            371   _PS0            BIT 0xbc
0000            372   _PT2            BIT 0xbd
0000            373   _PSPI0          BIT 0xbe
0000            374   _P0_0           BIT 0x80
0000            375   _P0_1           BIT 0x81
0000            376   _P0_2           BIT 0x82
0000            377   _P0_3           BIT 0x83
0000            378   _P0_4           BIT 0x84
0000            379   _P0_5           BIT 0x85
0000            380   _P0_6           BIT 0x86
0000            381   _P0_7           BIT 0x87
0000            382   _P1_0           BIT 0x90
0000            383   _P1_1           BIT 0x91
0000            384   _P1_2           BIT 0x92
0000            385   _P1_3           BIT 0x93
0000            386   _P1_4           BIT 0x94
0000            387   _P1_5           BIT 0x95
0000            388   _P1_6           BIT 0x96
0000            389   _P1_7           BIT 0x97
0000            390   _P2_0           BIT 0xa0
0000            391   _P2_1           BIT 0xa1
0000            392   _P2_2           BIT 0xa2
0000            393   _P2_3           BIT 0xa3
0000            394   _P2_4           BIT 0xa4
0000            395   _P2_5           BIT 0xa5
0000            396   _P2_6           BIT 0xa6
0000            397   _P3_0           BIT 0xb0
0000            398   _P3_1           BIT 0xb1
0000            399   _P3_2           BIT 0xb2
0000            400   _P3_3           BIT 0xb3
0000            401   _P3_4           BIT 0xb4
0000            402   _P3_7           BIT 0xb7
0000            403   _CCF0           BIT 0xd8
0000            404   _CCF1           BIT 0xd9
0000            405   _CCF2           BIT 0xda
0000            406   _CCF3           BIT 0xdb
0000            407   _CCF4           BIT 0xdc
0000            408   _CCF5           BIT 0xdd
0000            409   _CR             BIT 0xde
0000            410   _CF             BIT 0xdf
0000            411   _PARITY         BIT 0xd0
0000            412   _F1             BIT 0xd1
0000            413   _OV             BIT 0xd2
0000            414   _RS0            BIT 0xd3
0000            415   _RS1            BIT 0xd4
0000            416   _F0             BIT 0xd5
0000            417   _AC             BIT 0xd6
0000            418   _CY             BIT 0xd7
0000            419   _RI             BIT 0x98
0000            420   _TI             BIT 0x99
0000            421   _RB8            BIT 0x9a
0000            422   _TB8            BIT 0x9b
0000            423   _REN            BIT 0x9c
0000            424   _CE             BIT 0x9d
0000            425   _SMODE          BIT 0x9e
0000            426   _RI1            BIT 0xc8
0000            427   _TI1            BIT 0xc9
0000            428   _RBX1           BIT 0xca
0000            429   _TBX1           BIT 0xcb
0000            430   _REN1           BIT 0xcc
0000            431   _PERR1          BIT 0xcd
0000            432   _OVR1           BIT 0xce
0000            433   _SI             BIT 0xc0
0000            434   _ACK            BIT 0xc1
0000            435   _ARBLOST        BIT 0xc2
0000            436   _ACKRQ          BIT 0xc3
0000            437   _STO            BIT 0xc4
0000            438   _STA            BIT 0xc5
0000            439   _TXMODE         BIT 0xc6
0000            440   _MASTER         BIT 0xc7
0000            441   _SPIEN          BIT 0xf8
0000            442   _TXNF           BIT 0xf9
0000            443   _NSSMD0         BIT 0xfa
0000            444   _NSSMD1         BIT 0xfb
0000            445   _RXOVRN         BIT 0xfc
0000            446   _MODF           BIT 0xfd
0000            447   _WCOL           BIT 0xfe
0000            448   _SPIF           BIT 0xff
0000            449   _IT0            BIT 0x88
0000            450   _IE0            BIT 0x89
0000            451   _IT1            BIT 0x8a
0000            452   _IE1            BIT 0x8b
0000            453   _TR0            BIT 0x8c
0000            454   _TF0            BIT 0x8d
0000            455   _TR1            BIT 0x8e
0000            456   _TF1            BIT 0x8f
0000            457   _T2XCLK0        BIT 0xc8
0000            458   _T2XCLK1        BIT 0xc9
0000            459   _TR2            BIT 0xca
0000            460   _T2SPLIT        BIT 0xcb
0000            461   _TF2CEN         BIT 0xcc
0000            462   _TF2LEN         BIT 0xcd
0000            463   _TF2L           BIT 0xce
0000            464   _TF2H           BIT 0xcf
0000            465   _T4XCLK0        BIT 0x98
0000            466   _T4XCLK1        BIT 0x99
0000            467   _TR4            BIT 0x9a
0000            468   _T4SPLIT        BIT 0x9b
0000            469   _TF4CEN         BIT 0x9c
0000            470   _TF4LEN         BIT 0x9d
0000            471   _TF4L           BIT 0x9e
0000            472   _TF4H           BIT 0x9f
0000            473   _T5XCLK0        BIT 0xc0
0000            474   _T5XCLK1        BIT 0xc1
0000            475   _TR5            BIT 0xc2
0000            476   _T5SPLIT        BIT 0xc3
0000            477   _TF5CEN         BIT 0xc4
0000            478   _TF5LEN         BIT 0xc5
0000            479   _TF5L           BIT 0xc6
0000            480   _TF5H           BIT 0xc7
0000            481   _RIE            BIT 0xd8
0000            482   _RXTO0          BIT 0xd9
0000            483   _RXTO1          BIT 0xda
0000            484   _RFRQ           BIT 0xdb
0000            485   _TIE            BIT 0xdc
0000            486   _TXHOLD         BIT 0xdd
0000            487   _TXNF1          BIT 0xde
0000            488   _TFRQ           BIT 0xdf
0000            489   ;--------------------------------------------------------
0000            490   ; overlayable register banks
0000            491   ;--------------------------------------------------------
0000            492            rbank0 segment data overlay
0000            493   ;--------------------------------------------------------
0000            494   ; internal ram data
0000            495   ;--------------------------------------------------------
0000            496            rseg R_DSEG
0000            497   _overflow_count:
0000            498            ds 1
0001            499   _LCDprint_PARM_2:
0001            500            ds 1
0002            501   _GetPosition_PARM_2:
0002            502            ds 3
0005            503   _GetPosition_volts_1_74:
0005            504            ds 3
0008            505   _GetPosition_mov_x_1_75:
0008            506            ds 4
000C            507   _GetPosition_buff_x_1_75:
000C            508            ds 17
001D            509   _GetPosition_buff_y_1_75:
001D            510            ds 17
002E            511   _GetPosition_sloc0_1_0:
002E            512            ds 4
0032            513   _main_v_1_83:
0032            514            ds 8
003A            515   _main_xy_pos_1_83:
003A            516            ds 8
0042            517   _main_sloc0_1_0:
0042            518            ds 4
0046            519   ;--------------------------------------------------------
0046            520   ; overlayable items in internal ram 
0046            521   ;--------------------------------------------------------
0000            522            rseg    R_OSEG
0000            523            rseg    R_OSEG
0000            524   _InitPinADC_PARM_2:
0000            525            ds 1
0001            526            rseg    R_OSEG
0001            527   ;--------------------------------------------------------
0001            528   ; indirectly addressable internal ram data
0001            529   ;--------------------------------------------------------
0000            530            rseg R_ISEG
0000            531   ;--------------------------------------------------------
0000            532   ; absolute internal ram data
0000            533   ;--------------------------------------------------------
0000            534            DSEG
0000            535   ;--------------------------------------------------------
0000            536   ; bit data
0000            537   ;--------------------------------------------------------
0000            538            rseg R_BSEG
0000            539   _LCDprint_PARM_3:
0000            540            DBIT    1
0001            541   ;--------------------------------------------------------
0001            542   ; paged external ram data
0001            543   ;--------------------------------------------------------
0000            544            rseg R_PSEG
0000            545   ;--------------------------------------------------------
0000            546   ; external ram data
0000            547   ;--------------------------------------------------------
0000            548            rseg R_XSEG
0000            549   ;--------------------------------------------------------
0000            550   ; absolute external ram data
0000            551   ;--------------------------------------------------------
0000            552            XSEG
0000            553   ;--------------------------------------------------------
0000            554   ; external initialized ram data
0000            555   ;--------------------------------------------------------
0000            556            rseg R_IXSEG
0000            557            rseg R_HOME
0000            558            rseg R_GSINIT
0000            559            rseg R_CSEG
0000            560   ;--------------------------------------------------------
0000            561   ; Reset entry point and interrupt vectors
0000            562   ;--------------------------------------------------------
0000            563            CSEG at 0x0000
0000 020000     564            ljmp    _crt0
0003            565   ;--------------------------------------------------------
0003            566   ; global & static initialisations
0003            567   ;--------------------------------------------------------
0000            568            rseg R_HOME
0000            569            rseg R_GSINIT
0000            570            rseg R_GSINIT
0000            571   ;--------------------------------------------------------
0000            572   ; data variables initialization
0000            573   ;--------------------------------------------------------
0000            574            rseg R_DINIT
0000            575            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            576   ;--------------------------------------------------------
0000            577   ; code
0000            578   ;--------------------------------------------------------
0000            579            rseg R_CSEG
0000            580   ;------------------------------------------------------------
0000            581   ;Allocation info for local variables in function '_c51_external_startup'
0000            582   ;------------------------------------------------------------
0000            583   ;------------------------------------------------------------
0000            584   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:31: char _c51_external_startup (void)
0000            585   ;        -----------------------------------------
0000            586   ;         function _c51_external_startup
0000            587   ;        -----------------------------------------
0000            588   __c51_external_startup:
0000            589            using   0
0000            590   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:34: SFRPAGE = 0x00;
0000 75A700     591            mov     _SFRPAGE,#0x00
0003            592   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:35: WDTCN = 0xDE; //First key
0003 7597DE     593            mov     _WDTCN,#0xDE
0006            594   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:36: WDTCN = 0xAD; //Second key
0006 7597AD     595            mov     _WDTCN,#0xAD
0009            596   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:38: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     597            mov     _VDM0CN,#0x80
000C            598   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:39: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     599            mov     _RSTSRC,#0x06
000F            600   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:46: SFRPAGE = 0x10;
000F 75A710     601            mov     _SFRPAGE,#0x10
0012            602   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:47: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     603            mov     _PFE0CN,#0x20
0015            604   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:48: SFRPAGE = 0x00;
0015 75A700     605            mov     _SFRPAGE,#0x00
0018            606   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:69: CLKSEL = 0x00;
0018 75A900     607            mov     _CLKSEL,#0x00
001B            608   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:70: CLKSEL = 0x00;
001B 75A900     609            mov     _CLKSEL,#0x00
001E            610   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:71: while ((CLKSEL & 0x80) == 0);
001E            611   L002001?:
001E E5A9       612            mov     a,_CLKSEL
0020 30E7A0     613            jnb     acc.7,L002001?
0023            614   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:72: CLKSEL = 0x03;
0023 75A903     615            mov     _CLKSEL,#0x03
0026            616   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:73: CLKSEL = 0x03;
0026 75A903     617            mov     _CLKSEL,#0x03
0029            618   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:74: while ((CLKSEL & 0x80) == 0);
0029            619   L002004?:
0029 E5A9       620            mov     a,_CLKSEL
002B 30E720     621            jnb     acc.7,L002004?
002E            622   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:79: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     623            orl     _P0MDOUT,#0x10
0031            624   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:80: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     625            mov     _XBR0,#0x01
0034            626   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:81: XBR1     = 0X00;
0034 75E200     627            mov     _XBR1,#0x00
0037            628   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:82: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     629            mov     _XBR2,#0x40
003A            630   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:88: SCON0 = 0x10;
003A 759810     631            mov     _SCON0,#0x10
003D            632   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:89: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     633            mov     _TH1,#0xE6
0040            634   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:90: TL1 = TH1;      // Init Timer1
0040 858D8B     635            mov     _TL1,_TH1
0043            636   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:91: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     637            anl     _TMOD,#0x0F
0046            638   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:92: TMOD |=  0x20;                       
0046 438920     639            orl     _TMOD,#0x20
0049            640   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:93: TR1 = 1; // START Timer1
0049 D28E       641            setb    _TR1
004B            642   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:94: TI = 1;  // Indicate TX0 ready
004B D299       643            setb    _TI
004D            644   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:96: return 0;
004D 758200     645            mov     dpl,#0x00
0050 22         646            ret
0051            647   ;------------------------------------------------------------
0051            648   ;Allocation info for local variables in function 'InitADC'
0051            649   ;------------------------------------------------------------
0051            650   ;------------------------------------------------------------
0051            651   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:99: void InitADC (void)
0051            652   ;        -----------------------------------------
0051            653   ;         function InitADC
0051            654   ;        -----------------------------------------
0051            655   _InitADC:
0051            656   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:101: SFRPAGE = 0x00;
0051 75A700     657            mov     _SFRPAGE,#0x00
0054            658   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:102: ADEN=0; // Disable ADC
0054 C2EF       659            clr     _ADEN
0056            660   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:107: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0056 75B280     661            mov     _ADC0CN1,#0x80
0059            662   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:111: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0059 75BC20     663            mov     _ADC0CF0,#0x20
005C            664   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:115: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005C 75B91E     665            mov     _ADC0CF1,#0x1E
005F            666   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:124: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
005F 75E800     667            mov     _ADC0CN0,#0x00
0062            668   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:129: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0062 75DF3F     669            mov     _ADC0CF2,#0x3F
0065            670   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:133: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0065 75B300     671            mov     _ADC0CN2,#0x00
0068            672   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:135: ADEN=1; // Enable ADC
0068 D2EF       673            setb    _ADEN
006A 22         674            ret
006B            675   ;------------------------------------------------------------
006B            676   ;Allocation info for local variables in function 'Timer3us'
006B            677   ;------------------------------------------------------------
006B            678   ;us                        Allocated to registers r2 
006B            679   ;i                         Allocated to registers r3 
006B            680   ;------------------------------------------------------------
006B            681   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:139: void Timer3us(unsigned char us)
006B            682   ;        -----------------------------------------
006B            683   ;         function Timer3us
006B            684   ;        -----------------------------------------
006B            685   _Timer3us:
006B AA82       686            mov     r2,dpl
006D            687   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:144: CKCON0|=0b_0100_0000;
006D 438E40     688            orl     _CKCON0,#0x40
0070            689   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:146: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0070 7592B8     690            mov     _TMR3RL,#0xB8
0073 7593FF     691            mov     (_TMR3RL >> 8),#0xFF
0076            692   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:147: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0076 859294     693            mov     _TMR3,_TMR3RL
0079 859395     694            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007C            695   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:149: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007C 759104     696            mov     _TMR3CN0,#0x04
007F            697   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:150: for (i = 0; i < us; i++)       // Count <us> overflows
007F 7B00       698            mov     r3,#0x00
0081            699   L004004?:
0081 C3         700            clr     c
0082 EB         701            mov     a,r3
0083 9A         702            subb    a,r2
0084 5000       703            jnc     L004007?
0086            704   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:152: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0086            705   L004001?:
0086 E591       706            mov     a,_TMR3CN0
0088 30E720     707            jnb     acc.7,L004001?
008B            708   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:153: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008B 53917F     709            anl     _TMR3CN0,#0x7F
008E            710   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:150: for (i = 0; i < us; i++)       // Count <us> overflows
008E 0B         711            inc     r3
008F 8000       712            sjmp    L004004?
0091            713   L004007?:
0091            714   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:155: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0091 759100     715            mov     _TMR3CN0,#0x00
0094 22         716            ret
0095            717   ;------------------------------------------------------------
0095            718   ;Allocation info for local variables in function 'waitms'
0095            719   ;------------------------------------------------------------
0095            720   ;ms                        Allocated to registers r2 r3 
0095            721   ;j                         Allocated to registers r4 r5 
0095            722   ;k                         Allocated to registers r6 
0095            723   ;------------------------------------------------------------
0095            724   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:158: void waitms (unsigned int ms)
0095            725   ;        -----------------------------------------
0095            726   ;         function waitms
0095            727   ;        -----------------------------------------
0095            728   _waitms:
0095 AA82       729            mov     r2,dpl
0097 AB83       730            mov     r3,dph
0099            731   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:162: for(j=0; j<ms; j++)
0099 7C00       732            mov     r4,#0x00
009B 7D00       733            mov     r5,#0x00
009D            734   L005005?:
009D C3         735            clr     c
009E EC         736            mov     a,r4
009F 9A         737            subb    a,r2
00A0 ED         738            mov     a,r5
00A1 9B         739            subb    a,r3
00A2 5000       740            jnc     L005009?
00A4            741   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:163: for (k=0; k<4; k++) Timer3us(250);
00A4 7E00       742            mov     r6,#0x00
00A6            743   L005001?:
00A6 BE0460     744            cjne    r6,#0x04,L005018?
00A9            745   L005018?:
00A9 5000       746            jnc     L005007?
00AB 7582FA     747            mov     dpl,#0xFA
00AE C002       748            push    ar2
00B0 C003       749            push    ar3
00B2 C004       750            push    ar4
00B4 C005       751            push    ar5
00B6 C006       752            push    ar6
00B8 120000     753            lcall   _Timer3us
00BB D006       754            pop     ar6
00BD D005       755            pop     ar5
00BF D004       756            pop     ar4
00C1 D003       757            pop     ar3
00C3 D002       758            pop     ar2
00C5 0E         759            inc     r6
00C6 8000       760            sjmp    L005001?
00C8            761   L005007?:
00C8            762   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:162: for(j=0; j<ms; j++)
00C8 0C         763            inc     r4
00C9 BC00A0     764            cjne    r4,#0x00,L005005?
00CC 0D         765            inc     r5
00CD 8000       766            sjmp    L005005?
00CF            767   L005009?:
00CF 22         768            ret
00D0            769   ;------------------------------------------------------------
00D0            770   ;Allocation info for local variables in function 'InitPinADC'
00D0            771   ;------------------------------------------------------------
00D0            772   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00D0            773   ;portno                    Allocated to registers r2 
00D0            774   ;mask                      Allocated to registers r3 
00D0            775   ;------------------------------------------------------------
00D0            776   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:168: void InitPinADC (unsigned char portno, unsigned char pinno)
00D0            777   ;        -----------------------------------------
00D0            778   ;         function InitPinADC
00D0            779   ;        -----------------------------------------
00D0            780   _InitPinADC:
00D0 AA82       781            mov     r2,dpl
00D2            782   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:172: mask=1<<pinno;
00D2 8580F0     783            mov     b,_InitPinADC_PARM_2
00D5 05F0       784            inc     b
00D7 7401       785            mov     a,#0x01
00D9 8000       786            sjmp    L006013?
00DB            787   L006011?:
00DB 25E0       788            add     a,acc
00DD            789   L006013?:
00DD D5F060     790            djnz    b,L006011?
00E0 FB         791            mov     r3,a
00E1            792   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:174: SFRPAGE = 0x20;
00E1 75A720     793            mov     _SFRPAGE,#0x20
00E4            794   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:175: switch (portno)
00E4 BA00A0     795            cjne    r2,#0x00,L006014?
00E7 8000       796            sjmp    L006001?
00E9            797   L006014?:
00E9 BA0120     798            cjne    r2,#0x01,L006015?
00EC 8000       799            sjmp    L006002?
00EE            800   L006015?:
00EE            801   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:177: case 0:
00EE BA02A0     802            cjne    r2,#0x02,L006005?
00F1 8000       803            sjmp    L006003?
00F3            804   L006001?:
00F3            805   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:178: P0MDIN &= (~mask); // Set pin as analog input
00F3 EB         806            mov     a,r3
00F4 F4         807            cpl     a
00F5 FA         808            mov     r2,a
00F6 52F1       809            anl     _P0MDIN,a
00F8            810   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:179: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00F8 EB         811            mov     a,r3
00F9 42D4       812            orl     _P0SKIP,a
00FB            813   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:180: break;
00FB            814   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:181: case 1:
00FB 8000       815            sjmp    L006005?
00FD            816   L006002?:
00FD            817   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:182: P1MDIN &= (~mask); // Set pin as analog input
00FD EB         818            mov     a,r3
00FE F4         819            cpl     a
00FF FA         820            mov     r2,a
0100 52F2       821            anl     _P1MDIN,a
0102            822   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:183: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0102 EB         823            mov     a,r3
0103 42D5       824            orl     _P1SKIP,a
0105            825   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:184: break;
0105            826   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:185: case 2:
0105 8000       827            sjmp    L006005?
0107            828   L006003?:
0107            829   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:186: P2MDIN &= (~mask); // Set pin as analog input
0107 EB         830            mov     a,r3
0108 F4         831            cpl     a
0109 FA         832            mov     r2,a
010A 52F3       833            anl     _P2MDIN,a
010C            834   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:187: P2SKIP |= mask; // Skip Crossbar decoding for this pin
010C EB         835            mov     a,r3
010D 42CC       836            orl     _P2SKIP,a
010F            837   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:191: }
010F            838   L006005?:
010F            839   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:192: SFRPAGE = 0x00;
010F 75A700     840            mov     _SFRPAGE,#0x00
0112 22         841            ret
0113            842   ;------------------------------------------------------------
0113            843   ;Allocation info for local variables in function 'TIMER0_Init'
0113            844   ;------------------------------------------------------------
0113            845   ;------------------------------------------------------------
0113            846   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:195: void TIMER0_Init(void)
0113            847   ;        -----------------------------------------
0113            848   ;         function TIMER0_Init
0113            849   ;        -----------------------------------------
0113            850   _TIMER0_Init:
0113            851   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:197: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0113 5389F0     852            anl     _TMOD,#0xF0
0116            853   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:198: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0116 438901     854            orl     _TMOD,#0x01
0119            855   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:199: TR0=0; // Stop Timer/Counter 0
0119 C28C       856            clr     _TR0
011B 22         857            ret
011C            858   ;------------------------------------------------------------
011C            859   ;Allocation info for local variables in function 'ADC_at_Pin'
011C            860   ;------------------------------------------------------------
011C            861   ;pin                       Allocated to registers 
011C            862   ;------------------------------------------------------------
011C            863   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:202: unsigned int ADC_at_Pin(unsigned char pin)
011C            864   ;        -----------------------------------------
011C            865   ;         function ADC_at_Pin
011C            866   ;        -----------------------------------------
011C            867   _ADC_at_Pin:
011C 8582BB     868            mov     _ADC0MX,dpl
011F            869   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:205: ADINT = 0;
011F C2ED       870            clr     _ADINT
0121            871   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:206: ADBUSY = 1;     // Convert voltage at the pin
0121 D2EC       872            setb    _ADBUSY
0123            873   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:207: while (!ADINT); // Wait for conversion to complete
0123            874   L008001?:
0123 30ED20     875            jnb     _ADINT,L008001?
0126            876   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:208: return (ADC0);
0126 85BD82     877            mov     dpl,_ADC0
0129 85BE83     878            mov     dph,(_ADC0 >> 8)
012C 22         879            ret
012D            880   ;------------------------------------------------------------
012D            881   ;Allocation info for local variables in function 'Get_ADC'
012D            882   ;------------------------------------------------------------
012D            883   ;------------------------------------------------------------
012D            884   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:211: unsigned int Get_ADC (void)
012D            885   ;        -----------------------------------------
012D            886   ;         function Get_ADC
012D            887   ;        -----------------------------------------
012D            888   _Get_ADC:
012D            889   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:213: ADINT = 0;
012D C2ED       890            clr     _ADINT
012F            891   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:214: ADBUSY = 1;
012F D2EC       892            setb    _ADBUSY
0131            893   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:215: while (!ADINT); // Wait for conversion to complete
0131            894   L009001?:
0131 30ED60     895            jnb     _ADINT,L009001?
0134            896   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:216: return (ADC0);
0134 85BD82     897            mov     dpl,_ADC0
0137 85BE83     898            mov     dph,(_ADC0 >> 8)
013A 22         899            ret
013B            900   ;------------------------------------------------------------
013B            901   ;Allocation info for local variables in function 'Volts_at_Pin'
013B            902   ;------------------------------------------------------------
013B            903   ;pin                       Allocated to registers r2 
013B            904   ;------------------------------------------------------------
013B            905   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:220: float Volts_at_Pin(unsigned char pin)
013B            906   ;        -----------------------------------------
013B            907   ;         function Volts_at_Pin
013B            908   ;        -----------------------------------------
013B            909   _Volts_at_Pin:
013B            910   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:222: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
013B 120000     911            lcall   _ADC_at_Pin
013E 120000     912            lcall   ___uint2fs
0141 AA82       913            mov     r2,dpl
0143 AB83       914            mov     r3,dph
0145 ACF0       915            mov     r4,b
0147 FD         916            mov     r5,a
0148 C002       917            push    ar2
014A C003       918            push    ar3
014C C004       919            push    ar4
014E C005       920            push    ar5
0150 906C8B     921            mov     dptr,#0x6C8B
0153 75F053     922            mov     b,#0x53
0156 7440       923            mov     a,#0x40
0158 120000     924            lcall   ___fsmul
015B AA82       925            mov     r2,dpl
015D AB83       926            mov     r3,dph
015F ACF0       927            mov     r4,b
0161 FD         928            mov     r5,a
0162 E581       929            mov     a,sp
0164 24FC       930            add     a,#0xfc
0166 F581       931            mov     sp,a
0168 E4         932            clr     a
0169 C0E0       933            push    acc
016B 74FC       934            mov     a,#0xFC
016D C0E0       935            push    acc
016F 747F       936            mov     a,#0x7F
0171 C0E0       937            push    acc
0173 7446       938            mov     a,#0x46
0175 C0E0       939            push    acc
0177 8A82       940            mov     dpl,r2
0179 8B83       941            mov     dph,r3
017B 8CF0       942            mov     b,r4
017D ED         943            mov     a,r5
017E 120000     944            lcall   ___fsdiv
0181 AA82       945            mov     r2,dpl
0183 AB83       946            mov     r3,dph
0185 ACF0       947            mov     r4,b
0187 FD         948            mov     r5,a
0188 E581       949            mov     a,sp
018A 24FC       950            add     a,#0xfc
018C F581       951            mov     sp,a
018E 8A82       952            mov     dpl,r2
0190 8B83       953            mov     dph,r3
0192 8CF0       954            mov     b,r4
0194 ED         955            mov     a,r5
0195 22         956            ret
0196            957   ;------------------------------------------------------------
0196            958   ;Allocation info for local variables in function 'LCD_pulse'
0196            959   ;------------------------------------------------------------
0196            960   ;------------------------------------------------------------
0196            961   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:226: void LCD_pulse (void)
0196            962   ;        -----------------------------------------
0196            963   ;         function LCD_pulse
0196            964   ;        -----------------------------------------
0196            965   _LCD_pulse:
0196            966   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:228: LCD_E=1;
0196 D296       967            setb    _P1_6
0198            968   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:229: Timer3us(40);
0198 758228     969            mov     dpl,#0x28
019B 120000     970            lcall   _Timer3us
019E            971   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:230: LCD_E=0;
019E C296       972            clr     _P1_6
01A0 22         973            ret
01A1            974   ;------------------------------------------------------------
01A1            975   ;Allocation info for local variables in function 'LCD_byte'
01A1            976   ;------------------------------------------------------------
01A1            977   ;x                         Allocated to registers r2 
01A1            978   ;------------------------------------------------------------
01A1            979   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:233: void LCD_byte (unsigned char x)
01A1            980   ;        -----------------------------------------
01A1            981   ;         function LCD_byte
01A1            982   ;        -----------------------------------------
01A1            983   _LCD_byte:
01A1 AA82       984            mov     r2,dpl
01A3            985   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:236: ACC=x; //Send high nible
01A3 8AE0       986            mov     _ACC,r2
01A5            987   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:237: LCD_D7=ACC_7;
01A5 A2E7       988            mov     c,_ACC_7
01A7 9290       989            mov     _P1_0,c
01A9            990   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:238: LCD_D6=ACC_6;
01A9 A2E6       991            mov     c,_ACC_6
01AB 9291       992            mov     _P1_1,c
01AD            993   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:239: LCD_D5=ACC_5;
01AD A2E5       994            mov     c,_ACC_5
01AF 9292       995            mov     _P1_2,c
01B1            996   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:240: LCD_D4=ACC_4;
01B1 A2E4       997            mov     c,_ACC_4
01B3 9293       998            mov     _P1_3,c
01B5            999   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:241: LCD_pulse();
01B5 C002      1000            push    ar2
01B7 120000    1001            lcall   _LCD_pulse
01BA           1002   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:242: Timer3us(40);
01BA 758228    1003            mov     dpl,#0x28
01BD 120000    1004            lcall   _Timer3us
01C0 D002      1005            pop     ar2
01C2           1006   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:243: ACC=x; //Send low nible
01C2 8AE0      1007            mov     _ACC,r2
01C4           1008   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:244: LCD_D7=ACC_3;
01C4 A2E3      1009            mov     c,_ACC_3
01C6 9290      1010            mov     _P1_0,c
01C8           1011   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:245: LCD_D6=ACC_2;
01C8 A2E2      1012            mov     c,_ACC_2
01CA 9291      1013            mov     _P1_1,c
01CC           1014   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:246: LCD_D5=ACC_1;
01CC A2E1      1015            mov     c,_ACC_1
01CE 9292      1016            mov     _P1_2,c
01D0           1017   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:247: LCD_D4=ACC_0;
01D0 A2E0      1018            mov     c,_ACC_0
01D2 9293      1019            mov     _P1_3,c
01D4           1020   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:248: LCD_pulse();
01D4 020000    1021            ljmp    _LCD_pulse
01D7           1022   ;------------------------------------------------------------
01D7           1023   ;Allocation info for local variables in function 'WriteData'
01D7           1024   ;------------------------------------------------------------
01D7           1025   ;x                         Allocated to registers r2 
01D7           1026   ;------------------------------------------------------------
01D7           1027   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:252: void WriteData (unsigned char x)
01D7           1028   ;        -----------------------------------------
01D7           1029   ;         function WriteData
01D7           1030   ;        -----------------------------------------
01D7           1031   _WriteData:
01D7 AA82      1032            mov     r2,dpl
01D9           1033   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:254: LCD_RS=1;
01D9 D297      1034            setb    _P1_7
01DB           1035   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:255: LCD_byte(x);
01DB 8A82      1036            mov     dpl,r2
01DD 120000    1037            lcall   _LCD_byte
01E0           1038   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:256: waitms(2);
01E0 900002    1039            mov     dptr,#0x0002
01E3 020000    1040            ljmp    _waitms
01E6           1041   ;------------------------------------------------------------
01E6           1042   ;Allocation info for local variables in function 'WriteCommand'
01E6           1043   ;------------------------------------------------------------
01E6           1044   ;x                         Allocated to registers r2 
01E6           1045   ;------------------------------------------------------------
01E6           1046   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:259: void WriteCommand (unsigned char x)
01E6           1047   ;        -----------------------------------------
01E6           1048   ;         function WriteCommand
01E6           1049   ;        -----------------------------------------
01E6           1050   _WriteCommand:
01E6 AA82      1051            mov     r2,dpl
01E8           1052   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:261: LCD_RS=0;
01E8 C297      1053            clr     _P1_7
01EA           1054   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:262: LCD_byte(x);
01EA 8A82      1055            mov     dpl,r2
01EC 120000    1056            lcall   _LCD_byte
01EF           1057   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:263: waitms(5);
01EF 900005    1058            mov     dptr,#0x0005
01F2 020000    1059            ljmp    _waitms
01F5           1060   ;------------------------------------------------------------
01F5           1061   ;Allocation info for local variables in function 'LCD_4BIT'
01F5           1062   ;------------------------------------------------------------
01F5           1063   ;------------------------------------------------------------
01F5           1064   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:266: void LCD_4BIT (void)
01F5           1065   ;        -----------------------------------------
01F5           1066   ;         function LCD_4BIT
01F5           1067   ;        -----------------------------------------
01F5           1068   _LCD_4BIT:
01F5           1069   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:268: LCD_E=0; // Resting state of LCD's enable is zero
01F5 C296      1070            clr     _P1_6
01F7           1071   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:270: waitms(20);
01F7 900014    1072            mov     dptr,#0x0014
01FA 120000    1073            lcall   _waitms
01FD           1074   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:272: WriteCommand(0x33);
01FD 758233    1075            mov     dpl,#0x33
0200 120000    1076            lcall   _WriteCommand
0203           1077   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:273: WriteCommand(0x33);
0203 758233    1078            mov     dpl,#0x33
0206 120000    1079            lcall   _WriteCommand
0209           1080   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:274: WriteCommand(0x32); // Change to 4-bit mode
0209 758232    1081            mov     dpl,#0x32
020C 120000    1082            lcall   _WriteCommand
020F           1083   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:276: WriteCommand(0x28);
020F 758228    1084            mov     dpl,#0x28
0212 120000    1085            lcall   _WriteCommand
0215           1086   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:277: WriteCommand(0x0c);
0215 75820C    1087            mov     dpl,#0x0C
0218 120000    1088            lcall   _WriteCommand
021B           1089   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:278: WriteCommand(0x01); // Clear screen command (takes some time)
021B 758201    1090            mov     dpl,#0x01
021E 120000    1091            lcall   _WriteCommand
0221           1092   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:279: waitms(20); // Wait for clear screen command to finsih.
0221 900014    1093            mov     dptr,#0x0014
0224 020000    1094            ljmp    _waitms
0227           1095   ;------------------------------------------------------------
0227           1096   ;Allocation info for local variables in function 'LCDprint'
0227           1097   ;------------------------------------------------------------
0227           1098   ;line                      Allocated with name '_LCDprint_PARM_2'
0227           1099   ;string                    Allocated to registers r2 r3 r4 
0227           1100   ;j                         Allocated to registers r5 r6 
0227           1101   ;------------------------------------------------------------
0227           1102   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:282: void LCDprint(char * string, unsigned char line, bit clear)
0227           1103   ;        -----------------------------------------
0227           1104   ;         function LCDprint
0227           1105   ;        -----------------------------------------
0227           1106   _LCDprint:
0227 AA82      1107            mov     r2,dpl
0229 AB83      1108            mov     r3,dph
022B ACF0      1109            mov     r4,b
022D           1110   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:285: WriteCommand(line==2?0xc0:0x80);
022D 7402      1111            mov     a,#0x02
022F B5C0A0    1112            cjne    a,_LCDprint_PARM_2,L016013?
0232 7DC0      1113            mov     r5,#0xC0
0234 8000      1114            sjmp    L016014?
0236           1115   L016013?:
0236 7D80      1116            mov     r5,#0x80
0238           1117   L016014?:
0238 8D82      1118            mov     dpl,r5
023A C002      1119            push    ar2
023C C003      1120            push    ar3
023E C004      1121            push    ar4
0240 120000    1122            lcall   _WriteCommand
0243           1123   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:286: waitms(5);
0243 900005    1124            mov     dptr,#0x0005
0246 120000    1125            lcall   _waitms
0249 D004      1126            pop     ar4
024B D003      1127            pop     ar3
024D D002      1128            pop     ar2
024F           1129   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:287: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
024F 7D00      1130            mov     r5,#0x00
0251 7E00      1131            mov     r6,#0x00
0253           1132   L016003?:
0253 ED        1133            mov     a,r5
0254 2A        1134            add     a,r2
0255 FF        1135            mov     r7,a
0256 EE        1136            mov     a,r6
0257 3B        1137            addc    a,r3
0258 F8        1138            mov     r0,a
0259 8C01      1139            mov     ar1,r4
025B 8F82      1140            mov     dpl,r7
025D 8883      1141            mov     dph,r0
025F 89F0      1142            mov     b,r1
0261 120000    1143            lcall   __gptrget
0264 FF        1144            mov     r7,a
0265 6000      1145            jz      L016006?
0267 8F82      1146            mov     dpl,r7
0269 C002      1147            push    ar2
026B C003      1148            push    ar3
026D C004      1149            push    ar4
026F C005      1150            push    ar5
0271 C006      1151            push    ar6
0273 120000    1152            lcall   _WriteData
0276 D006      1153            pop     ar6
0278 D005      1154            pop     ar5
027A D004      1155            pop     ar4
027C D003      1156            pop     ar3
027E D002      1157            pop     ar2
0280 0D        1158            inc     r5
0281 BD0020    1159            cjne    r5,#0x00,L016003?
0284 0E        1160            inc     r6
0285 8000      1161            sjmp    L016003?
0287           1162   L016006?:
0287           1163   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:288: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest ofthe line
0287 3020E0    1164            jnb     _LCDprint_PARM_3,L016011?
028A 8D02      1165            mov     ar2,r5
028C 8E03      1166            mov     ar3,r6
028E           1167   L016007?:
028E C3        1168            clr     c
028F EA        1169            mov     a,r2
0290 9410      1170            subb    a,#0x10
0292 EB        1171            mov     a,r3
0293 6480      1172            xrl     a,#0x80
0295 9480      1173            subb    a,#0x80
0297 5000      1174            jnc     L016011?
0299 758220    1175            mov     dpl,#0x20
029C C002      1176            push    ar2
029E C003      1177            push    ar3
02A0 120000    1178            lcall   _WriteData
02A3 D003      1179            pop     ar3
02A5 D002      1180            pop     ar2
02A7 0A        1181            inc     r2
02A8 BA0020    1182            cjne    r2,#0x00,L016007?
02AB 0B        1183            inc     r3
02AC 8000      1184            sjmp    L016007?
02AE           1185   L016011?:
02AE 22        1186            ret
02AF           1187   ;------------------------------------------------------------
02AF           1188   ;Allocation info for local variables in function 'GetPosition'
02AF           1189   ;------------------------------------------------------------
02AF           1190   ;pos                       Allocated with name '_GetPosition_PARM_2'
02AF           1191   ;volts                     Allocated with name '_GetPosition_volts_1_74'
02AF           1192   ;zero_x                    Allocated to registers 
02AF           1193   ;zero_y                    Allocated to registers 
02AF           1194   ;max_x                     Allocated to registers 
02AF           1195   ;max_y                     Allocated to registers 
02AF           1196   ;mov_x                     Allocated with name '_GetPosition_mov_x_1_75'
02AF           1197   ;mov_y                     Allocated to registers r2 r3 r4 r1 
02AF           1198   ;buff_x                    Allocated with name '_GetPosition_buff_x_1_75'
02AF           1199   ;buff_y                    Allocated with name '_GetPosition_buff_y_1_75'
02AF           1200   ;sloc0                     Allocated with name '_GetPosition_sloc0_1_0'
02AF           1201   ;------------------------------------------------------------
02AF           1202   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:299: void GetPosition(float volts[2], float pos[2])
02AF           1203   ;        -----------------------------------------
02AF           1204   ;         function GetPosition
02AF           1205   ;        -----------------------------------------
02AF           1206   _GetPosition:
02AF           1207   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:315: if(volts[0] > zero_x) {
02AF 858210    1208            mov     _GetPosition_volts_1_74,dpl
02B2 858311    1209            mov     (_GetPosition_volts_1_74 + 1),dph
02B5 85F012    1210            mov     (_GetPosition_volts_1_74 + 2),b
02B8 120000    1211            lcall   __gptrget
02BB F550      1212            mov     _GetPosition_sloc0_1_0,a
02BD A3        1213            inc     dptr
02BE 120000    1214            lcall   __gptrget
02C1 F551      1215            mov     (_GetPosition_sloc0_1_0 + 1),a
02C3 A3        1216            inc     dptr
02C4 120000    1217            lcall   __gptrget
02C7 F552      1218            mov     (_GetPosition_sloc0_1_0 + 2),a
02C9 A3        1219            inc     dptr
02CA 120000    1220            lcall   __gptrget
02CD F553      1221            mov     (_GetPosition_sloc0_1_0 + 3),a
02CF 740A      1222            mov     a,#0x0A
02D1 C0E0      1223            push    acc
02D3 7458      1224            mov     a,#0x58
02D5 C0E0      1225            push    acc
02D7 7409      1226            mov     a,#0x09
02D9 C0E0      1227            push    acc
02DB 7440      1228            mov     a,#0x40
02DD C0E0      1229            push    acc
02DF 855082    1230            mov     dpl,_GetPosition_sloc0_1_0
02E2 855183    1231            mov     dph,(_GetPosition_sloc0_1_0 + 1)
02E5 8552F0    1232            mov     b,(_GetPosition_sloc0_1_0 + 2)
02E8 E553      1233            mov     a,(_GetPosition_sloc0_1_0 + 3)
02EA 120000    1234            lcall   ___fsgt
02ED A982      1235            mov     r1,dpl
02EF E581      1236            mov     a,sp
02F1 24FC      1237            add     a,#0xfc
02F3 F581      1238            mov     sp,a
02F5 E9        1239            mov     a,r1
02F6 6000      1240            jz      L017005?
02F8           1241   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:316: mov_x = (volts[0] - zero_x);
02F8 740A      1242            mov     a,#0x0A
02FA C0E0      1243            push    acc
02FC 7458      1244            mov     a,#0x58
02FE C0E0      1245            push    acc
0300 7409      1246            mov     a,#0x09
0302 C0E0      1247            push    acc
0304 7440      1248            mov     a,#0x40
0306 C0E0      1249            push    acc
0308 855082    1250            mov     dpl,_GetPosition_sloc0_1_0
030B 855183    1251            mov     dph,(_GetPosition_sloc0_1_0 + 1)
030E 8552F0    1252            mov     b,(_GetPosition_sloc0_1_0 + 2)
0311 E553      1253            mov     a,(_GetPosition_sloc0_1_0 + 3)
0313 120000    1254            lcall   ___fssub
0316 858260    1255            mov     _GetPosition_mov_x_1_75,dpl
0319 858361    1256            mov     (_GetPosition_mov_x_1_75 + 1),dph
031C 85F062    1257            mov     (_GetPosition_mov_x_1_75 + 2),b
031F F563      1258            mov     (_GetPosition_mov_x_1_75 + 3),a
0321 E581      1259            mov     a,sp
0323 24FC      1260            add     a,#0xfc
0325 F581      1261            mov     sp,a
0327 8000      1262            sjmp    L017006?
0329           1263   L017005?:
0329           1264   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:319: else if(volts[0] < zero_x) {
0329 740A      1265            mov     a,#0x0A
032B C0E0      1266            push    acc
032D 7458      1267            mov     a,#0x58
032F C0E0      1268            push    acc
0331 7409      1269            mov     a,#0x09
0333 C0E0      1270            push    acc
0335 7440      1271            mov     a,#0x40
0337 C0E0      1272            push    acc
0339 855082    1273            mov     dpl,_GetPosition_sloc0_1_0
033C 855183    1274            mov     dph,(_GetPosition_sloc0_1_0 + 1)
033F 8552F0    1275            mov     b,(_GetPosition_sloc0_1_0 + 2)
0342 E553      1276            mov     a,(_GetPosition_sloc0_1_0 + 3)
0344 120000    1277            lcall   ___fslt
0347 AD82      1278            mov     r5,dpl
0349 E581      1279            mov     a,sp
034B 24FC      1280            add     a,#0xfc
034D F581      1281            mov     sp,a
034F ED        1282            mov     a,r5
0350 6000      1283            jz      L017002?
0352           1284   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:320: mov_x = -(zero_x - volts[0]);
0352 C050      1285            push    _GetPosition_sloc0_1_0
0354 C051      1286            push    (_GetPosition_sloc0_1_0 + 1)
0356 C052      1287            push    (_GetPosition_sloc0_1_0 + 2)
0358 C053      1288            push    (_GetPosition_sloc0_1_0 + 3)
035A 90580A    1289            mov     dptr,#0x580A
035D 75F009    1290            mov     b,#0x09
0360 7440      1291            mov     a,#0x40
0362 120000    1292            lcall   ___fssub
0365 AD82      1293            mov     r5,dpl
0367 AE83      1294            mov     r6,dph
0369 AFF0      1295            mov     r7,b
036B F8        1296            mov     r0,a
036C E581      1297            mov     a,sp
036E 24FC      1298            add     a,#0xfc
0370 F581      1299            mov     sp,a
0372 8D60      1300            mov     _GetPosition_mov_x_1_75,r5
0374 8E61      1301            mov     (_GetPosition_mov_x_1_75 + 1),r6
0376 8F62      1302            mov     (_GetPosition_mov_x_1_75 + 2),r7
0378 E8        1303            mov     a,r0
0379 B2E7      1304            cpl     acc.7
037B F563      1305            mov     (_GetPosition_mov_x_1_75 + 3),a
037D 8000      1306            sjmp    L017006?
037F           1307   L017002?:
037F           1308   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:325: mov_x = 0.0;
037F 756000    1309            mov     _GetPosition_mov_x_1_75,#0x00
0382 756100    1310            mov     (_GetPosition_mov_x_1_75 + 1),#0x00
0385 756200    1311            mov     (_GetPosition_mov_x_1_75 + 2),#0x00
0388 756300    1312            mov     (_GetPosition_mov_x_1_75 + 3),#0x00
038B           1313   L017006?:
038B           1314   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:330: if(volts[1] > zero_y) {
038B 7404      1315            mov     a,#0x04
038D 2510      1316            add     a,_GetPosition_volts_1_74
038F FD        1317            mov     r5,a
0390 E4        1318            clr     a
0391 3511      1319            addc    a,(_GetPosition_volts_1_74 + 1)
0393 FE        1320            mov     r6,a
0394 AF12      1321            mov     r7,(_GetPosition_volts_1_74 + 2)
0396 8D82      1322            mov     dpl,r5
0398 8E83      1323            mov     dph,r6
039A 8FF0      1324            mov     b,r7
039C 120000    1325            lcall   __gptrget
039F F550      1326            mov     _GetPosition_sloc0_1_0,a
03A1 A3        1327            inc     dptr
03A2 120000    1328            lcall   __gptrget
03A5 F551      1329            mov     (_GetPosition_sloc0_1_0 + 1),a
03A7 A3        1330            inc     dptr
03A8 120000    1331            lcall   __gptrget
03AB F552      1332            mov     (_GetPosition_sloc0_1_0 + 2),a
03AD A3        1333            inc     dptr
03AE 120000    1334            lcall   __gptrget
03B1 F553      1335            mov     (_GetPosition_sloc0_1_0 + 3),a
03B3 740A      1336            mov     a,#0x0A
03B5 C0E0      1337            push    acc
03B7 7458      1338            mov     a,#0x58
03B9 C0E0      1339            push    acc
03BB 7409      1340            mov     a,#0x09
03BD C0E0      1341            push    acc
03BF 7440      1342            mov     a,#0x40
03C1 C0E0      1343            push    acc
03C3 855082    1344            mov     dpl,_GetPosition_sloc0_1_0
03C6 855183    1345            mov     dph,(_GetPosition_sloc0_1_0 + 1)
03C9 8552F0    1346            mov     b,(_GetPosition_sloc0_1_0 + 2)
03CC E553      1347            mov     a,(_GetPosition_sloc0_1_0 + 3)
03CE 120000    1348            lcall   ___fsgt
03D1 AA82      1349            mov     r2,dpl
03D3 E581      1350            mov     a,sp
03D5 24FC      1351            add     a,#0xfc
03D7 F581      1352            mov     sp,a
03D9 EA        1353            mov     a,r2
03DA 6000      1354            jz      L017011?
03DC           1355   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:331: mov_y = (volts[1] - zero_y);
03DC 740A      1356            mov     a,#0x0A
03DE C0E0      1357            push    acc
03E0 7458      1358            mov     a,#0x58
03E2 C0E0      1359            push    acc
03E4 7409      1360            mov     a,#0x09
03E6 C0E0      1361            push    acc
03E8 7440      1362            mov     a,#0x40
03EA C0E0      1363            push    acc
03EC 855082    1364            mov     dpl,_GetPosition_sloc0_1_0
03EF 855183    1365            mov     dph,(_GetPosition_sloc0_1_0 + 1)
03F2 8552F0    1366            mov     b,(_GetPosition_sloc0_1_0 + 2)
03F5 E553      1367            mov     a,(_GetPosition_sloc0_1_0 + 3)
03F7 120000    1368            lcall   ___fssub
03FA AA82      1369            mov     r2,dpl
03FC AB83      1370            mov     r3,dph
03FE ACF0      1371            mov     r4,b
0400 F9        1372            mov     r1,a
0401 E581      1373            mov     a,sp
0403 24FC      1374            add     a,#0xfc
0405 F581      1375            mov     sp,a
0407 8000      1376            sjmp    L017012?
0409           1377   L017011?:
0409           1378   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:334: else if(volts[1] < zero_y) {
0409 740A      1379            mov     a,#0x0A
040B C0E0      1380            push    acc
040D 7458      1381            mov     a,#0x58
040F C0E0      1382            push    acc
0411 7409      1383            mov     a,#0x09
0413 C0E0      1384            push    acc
0415 7440      1385            mov     a,#0x40
0417 C0E0      1386            push    acc
0419 855082    1387            mov     dpl,_GetPosition_sloc0_1_0
041C 855183    1388            mov     dph,(_GetPosition_sloc0_1_0 + 1)
041F 8552F0    1389            mov     b,(_GetPosition_sloc0_1_0 + 2)
0422 E553      1390            mov     a,(_GetPosition_sloc0_1_0 + 3)
0424 120000    1391            lcall   ___fslt
0427 AD82      1392            mov     r5,dpl
0429 E581      1393            mov     a,sp
042B 24FC      1394            add     a,#0xfc
042D F581      1395            mov     sp,a
042F ED        1396            mov     a,r5
0430 6000      1397            jz      L017008?
0432           1398   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:335: mov_y = -(zero_y - volts[1]);
0432 C050      1399            push    _GetPosition_sloc0_1_0
0434 C051      1400            push    (_GetPosition_sloc0_1_0 + 1)
0436 C052      1401            push    (_GetPosition_sloc0_1_0 + 2)
0438 C053      1402            push    (_GetPosition_sloc0_1_0 + 3)
043A 90580A    1403            mov     dptr,#0x580A
043D 75F009    1404            mov     b,#0x09
0440 7440      1405            mov     a,#0x40
0442 120000    1406            lcall   ___fssub
0445 AD82      1407            mov     r5,dpl
0447 AE83      1408            mov     r6,dph
0449 AFF0      1409            mov     r7,b
044B F8        1410            mov     r0,a
044C E581      1411            mov     a,sp
044E 24FC      1412            add     a,#0xfc
0450 F581      1413            mov     sp,a
0452 8D02      1414            mov     ar2,r5
0454 8E03      1415            mov     ar3,r6
0456 8F04      1416            mov     ar4,r7
0458 E8        1417            mov     a,r0
0459 B2E7      1418            cpl     acc.7
045B F9        1419            mov     r1,a
045C 8000      1420            sjmp    L017012?
045E           1421   L017008?:
045E           1422   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:339: mov_y = 0.0;
045E 7A00      1423            mov     r2,#0x00
0460 7B00      1424            mov     r3,#0x00
0462 7C00      1425            mov     r4,#0x00
0464 7900      1426            mov     r1,#0x00
0466           1427   L017012?:
0466           1428   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:344: pos[0] = mov_x;
0466 AD70      1429            mov     r5,_GetPosition_PARM_2
0468 AE71      1430            mov     r6,(_GetPosition_PARM_2 + 1)
046A AF72      1431            mov     r7,(_GetPosition_PARM_2 + 2)
046C 8D82      1432            mov     dpl,r5
046E 8E83      1433            mov     dph,r6
0470 8FF0      1434            mov     b,r7
0472 E560      1435            mov     a,_GetPosition_mov_x_1_75
0474 120000    1436            lcall   __gptrput
0477 A3        1437            inc     dptr
0478 E561      1438            mov     a,(_GetPosition_mov_x_1_75 + 1)
047A 120000    1439            lcall   __gptrput
047D A3        1440            inc     dptr
047E E562      1441            mov     a,(_GetPosition_mov_x_1_75 + 2)
0480 120000    1442            lcall   __gptrput
0483 A3        1443            inc     dptr
0484 E563      1444            mov     a,(_GetPosition_mov_x_1_75 + 3)
0486 120000    1445            lcall   __gptrput
0489           1446   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:345: pos[1] = mov_y;
0489 7404      1447            mov     a,#0x04
048B 2D        1448            add     a,r5
048C FD        1449            mov     r5,a
048D E4        1450            clr     a
048E 3E        1451            addc    a,r6
048F FE        1452            mov     r6,a
0490 8D82      1453            mov     dpl,r5
0492 8E83      1454            mov     dph,r6
0494 8FF0      1455            mov     b,r7
0496 EA        1456            mov     a,r2
0497 120000    1457            lcall   __gptrput
049A A3        1458            inc     dptr
049B EB        1459            mov     a,r3
049C 120000    1460            lcall   __gptrput
049F A3        1461            inc     dptr
04A0 EC        1462            mov     a,r4
04A1 120000    1463            lcall   __gptrput
04A4 A3        1464            inc     dptr
04A5 E9        1465            mov     a,r1
04A6 120000    1466            lcall   __gptrput
04A9           1467   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:347: sprintf(buff_x, "%.4f", mov_x);
04A9 C002      1468            push    ar2
04AB C003      1469            push    ar3
04AD C004      1470            push    ar4
04AF C001      1471            push    ar1
04B1 C060      1472            push    _GetPosition_mov_x_1_75
04B3 C061      1473            push    (_GetPosition_mov_x_1_75 + 1)
04B5 C062      1474            push    (_GetPosition_mov_x_1_75 + 2)
04B7 C063      1475            push    (_GetPosition_mov_x_1_75 + 3)
04B9 74E8      1476            mov     a,#__str_0
04BB C0E0      1477            push    acc
04BD 74BF      1478            mov     a,#(__str_0 >> 8)
04BF C0E0      1479            push    acc
04C1 7480      1480            mov     a,#0x80
04C3 C0E0      1481            push    acc
04C5 74B0      1482            mov     a,#_GetPosition_buff_x_1_75
04C7 C0E0      1483            push    acc
04C9 74B2      1484            mov     a,#(_GetPosition_buff_x_1_75 >> 8)
04CB C0E0      1485            push    acc
04CD 7440      1486            mov     a,#0x40
04CF C0E0      1487            push    acc
04D1 120000    1488            lcall   _sprintf
04D4 E581      1489            mov     a,sp
04D6 24F6      1490            add     a,#0xf6
04D8 F581      1491            mov     sp,a
04DA           1492   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:348: LCDprint(buff_x, 1, 1);
04DA 75C001    1493            mov     _LCDprint_PARM_2,#0x01
04DD D220      1494            setb    _LCDprint_PARM_3
04DF 90B2B0    1495            mov     dptr,#_GetPosition_buff_x_1_75
04E2 75F040    1496            mov     b,#0x40
04E5 120000    1497            lcall   _LCDprint
04E8           1498   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:349: sprintf(buff_y, "%.4f", mov_y);
04E8 74E8      1499            mov     a,#__str_0
04EA C0E0      1500            push    acc
04EC 74BF      1501            mov     a,#(__str_0 >> 8)
04EE C0E0      1502            push    acc
04F0 7480      1503            mov     a,#0x80
04F2 C0E0      1504            push    acc
04F4 7400      1505            mov     a,#_GetPosition_buff_y_1_75
04F6 C0E0      1506            push    acc
04F8 74B3      1507            mov     a,#(_GetPosition_buff_y_1_75 >> 8)
04FA C0E0      1508            push    acc
04FC 7440      1509            mov     a,#0x40
04FE C0E0      1510            push    acc
0500 120000    1511            lcall   _sprintf
0503 E581      1512            mov     a,sp
0505 24F6      1513            add     a,#0xf6
0507 F581      1514            mov     sp,a
0509           1515   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:350: LCDprint(buff_y, 2, 1);
0509 75C002    1516            mov     _LCDprint_PARM_2,#0x02
050C D220      1517            setb    _LCDprint_PARM_3
050E 90B300    1518            mov     dptr,#_GetPosition_buff_y_1_75
0511 75F040    1519            mov     b,#0x40
0514 120000    1520            lcall   _LCDprint
0517           1521   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:353: printf("xpos: %s ypos: %s\r\n", buff_x, buff_y);
0517 7400      1522            mov     a,#_GetPosition_buff_y_1_75
0519 C0E0      1523            push    acc
051B 74B3      1524            mov     a,#(_GetPosition_buff_y_1_75 >> 8)
051D C0E0      1525            push    acc
051F 7440      1526            mov     a,#0x40
0521 C0E0      1527            push    acc
0523 74B0      1528            mov     a,#_GetPosition_buff_x_1_75
0525 C0E0      1529            push    acc
0527 74B2      1530            mov     a,#(_GetPosition_buff_x_1_75 >> 8)
0529 C0E0      1531            push    acc
052B 7440      1532            mov     a,#0x40
052D C0E0      1533            push    acc
052F 7468      1534            mov     a,#__str_1
0531 C0E0      1535            push    acc
0533 74C0      1536            mov     a,#(__str_1 >> 8)
0535 C0E0      1537            push    acc
0537 7480      1538            mov     a,#0x80
0539 C0E0      1539            push    acc
053B 120000    1540            lcall   _printf
053E E581      1541            mov     a,sp
0540 24F7      1542            add     a,#0xf7
0542 F581      1543            mov     sp,a
0544 22        1544            ret
0545           1545   ;------------------------------------------------------------
0545           1546   ;Allocation info for local variables in function 'main'
0545           1547   ;------------------------------------------------------------
0545           1548   ;v                         Allocated with name '_main_v_1_83'
0545           1549   ;xy_pos                    Allocated with name '_main_xy_pos_1_83'
0545           1550   ;sloc0                     Allocated with name '_main_sloc0_1_0'
0545           1551   ;------------------------------------------------------------
0545           1552   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:356: void main (void)
0545           1553   ;        -----------------------------------------
0545           1554   ;         function main
0545           1555   ;        -----------------------------------------
0545           1556   _main:
0545           1557   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:365: TIMER0_Init();
0545 120000    1558            lcall   _TIMER0_Init
0548           1559   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:366: LCD_4BIT();
0548 120000    1560            lcall   _LCD_4BIT
054B           1561   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:368: waitms(500); // Give PuTTy a chance to start before sending
054B 9001F4    1562            mov     dptr,#0x01F4
054E 120000    1563            lcall   _waitms
0551           1564   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:369: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0551 74E8      1565            mov     a,#__str_2
0553 C0E0      1566            push    acc
0555 74C0      1567            mov     a,#(__str_2 >> 8)
0557 C0E0      1568            push    acc
0559 7480      1569            mov     a,#0x80
055B C0E0      1570            push    acc
055D 120000    1571            lcall   _printf
0560 1581      1572            dec     sp
0562 1581      1573            dec     sp
0564 1581      1574            dec     sp
0566           1575   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:374: __FILE__, __DATE__, __TIME__);
0566           1576   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:373: "Compiled: %s, %s\n\n",
0566 7428      1577            mov     a,#__str_6
0568 C0E0      1578            push    acc
056A 74C1      1579            mov     a,#(__str_6 >> 8)
056C C0E0      1580            push    acc
056E 7480      1581            mov     a,#0x80
0570 C0E0      1582            push    acc
0572 7468      1583            mov     a,#__str_5
0574 C0E0      1584            push    acc
0576 74C1      1585            mov     a,#(__str_5 >> 8)
0578 C0E0      1586            push    acc
057A 7480      1587            mov     a,#0x80
057C C0E0      1588            push    acc
057E 74A8      1589            mov     a,#__str_4
0580 C0E0      1590            push    acc
0582 74C1      1591            mov     a,#(__str_4 >> 8)
0584 C0E0      1592            push    acc
0586 7480      1593            mov     a,#0x80
0588 C0E0      1594            push    acc
058A 74E8      1595            mov     a,#__str_3
058C C0E0      1596            push    acc
058E 74C1      1597            mov     a,#(__str_3 >> 8)
0590 C0E0      1598            push    acc
0592 7480      1599            mov     a,#0x80
0594 C0E0      1600            push    acc
0596 120000    1601            lcall   _printf
0599 E581      1602            mov     a,sp
059B 24F4      1603            add     a,#0xf4
059D F581      1604            mov     sp,a
059F           1605   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:376: InitPinADC(1, 4); // Configure P1.4 as analog input
059F 758004    1606            mov     _InitPinADC_PARM_2,#0x04
05A2 758201    1607            mov     dpl,#0x01
05A5 120000    1608            lcall   _InitPinADC
05A8           1609   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:377: InitPinADC(1, 5); // Configure P1.5 as analog input
05A8 758005    1610            mov     _InitPinADC_PARM_2,#0x05
05AB 758201    1611            mov     dpl,#0x01
05AE 120000    1612            lcall   _InitPinADC
05B1           1613   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:378: InitADC();
05B1 120000    1614            lcall   _InitADC
05B4           1615   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:406: while(1)
05B4           1616   L018002?:
05B4           1617   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:409: v[0] = Volts_at_Pin(XPOS_PIN) * SQRT_2;
05B4 75820A    1618            mov     dpl,#0x0A
05B7 120000    1619            lcall   _Volts_at_Pin
05BA AA82      1620            mov     r2,dpl
05BC AB83      1621            mov     r3,dph
05BE ACF0      1622            mov     r4,b
05C0 FD        1623            mov     r5,a
05C1 C002      1624            push    ar2
05C3 C003      1625            push    ar3
05C5 C004      1626            push    ar4
05C7 C005      1627            push    ar5
05C9 9004F3    1628            mov     dptr,#0x04F3
05CC 75F0B5    1629            mov     b,#0xB5
05CF 743F      1630            mov     a,#0x3F
05D1 120000    1631            lcall   ___fsmul
05D4 AA82      1632            mov     r2,dpl
05D6 AB83      1633            mov     r3,dph
05D8 ACF0      1634            mov     r4,b
05DA FD        1635            mov     r5,a
05DB E581      1636            mov     a,sp
05DD 24FC      1637            add     a,#0xfc
05DF F581      1638            mov     sp,a
05E1 8A90      1639            mov     _main_v_1_83,r2
05E3 8B91      1640            mov     (_main_v_1_83 + 1),r3
05E5 8C92      1641            mov     (_main_v_1_83 + 2),r4
05E7 8D93      1642            mov     (_main_v_1_83 + 3),r5
05E9           1643   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:410: v[1] = Volts_at_Pin(YPOS_PIN) * SQRT_2;
05E9 75820B    1644            mov     dpl,#0x0B
05EC 120000    1645            lcall   _Volts_at_Pin
05EF AA82      1646            mov     r2,dpl
05F1 AB83      1647            mov     r3,dph
05F3 ACF0      1648            mov     r4,b
05F5 FD        1649            mov     r5,a
05F6 C002      1650            push    ar2
05F8 C003      1651            push    ar3
05FA C004      1652            push    ar4
05FC C005      1653            push    ar5
05FE 9004F3    1654            mov     dptr,#0x04F3
0601 75F0B5    1655            mov     b,#0xB5
0604 743F      1656            mov     a,#0x3F
0606 120000    1657            lcall   ___fsmul
0609 AA82      1658            mov     r2,dpl
060B AB83      1659            mov     r3,dph
060D ACF0      1660            mov     r4,b
060F FD        1661            mov     r5,a
0610 E581      1662            mov     a,sp
0612 24FC      1663            add     a,#0xfc
0614 F581      1664            mov     sp,a
0616 8A94      1665            mov     (_main_v_1_83 + 0x0004),r2
0618 8B95      1666            mov     ((_main_v_1_83 + 0x0004) + 1),r3
061A 8C96      1667            mov     ((_main_v_1_83 + 0x0004) + 2),r4
061C 8D97      1668            mov     ((_main_v_1_83 + 0x0004) + 3),r5
061E           1669   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:417: GetPosition(v, xy_pos);
061E 7570E0    1670            mov     _GetPosition_PARM_2,#_main_xy_pos_1_83
0621 757100    1671            mov     (_GetPosition_PARM_2 + 1),#0x00
0624 757240    1672            mov     (_GetPosition_PARM_2 + 2),#0x40
0627 90B390    1673            mov     dptr,#_main_v_1_83
062A 75F040    1674            mov     b,#0x40
062D 120000    1675            lcall   _GetPosition
0630           1676   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:419: printf("xvolts: %7.5f yvolts: %7.5f\r\n", Volts_at_Pin(XPOS_PIN), Volts_at_Pin(YPOS_PIN));
0630 75820B    1677            mov     dpl,#0x0B
0633 120000    1678            lcall   _Volts_at_Pin
0636 858220    1679            mov     _main_sloc0_1_0,dpl
0639 858321    1680            mov     (_main_sloc0_1_0 + 1),dph
063C 85F022    1681            mov     (_main_sloc0_1_0 + 2),b
063F F523      1682            mov     (_main_sloc0_1_0 + 3),a
0641 75820A    1683            mov     dpl,#0x0A
0644 120000    1684            lcall   _Volts_at_Pin
0647 AE82      1685            mov     r6,dpl
0649 AF83      1686            mov     r7,dph
064B AAF0      1687            mov     r2,b
064D FB        1688            mov     r3,a
064E C020      1689            push    _main_sloc0_1_0
0650 C021      1690            push    (_main_sloc0_1_0 + 1)
0652 C022      1691            push    (_main_sloc0_1_0 + 2)
0654 C023      1692            push    (_main_sloc0_1_0 + 3)
0656 C006      1693            push    ar6
0658 C007      1694            push    ar7
065A C002      1695            push    ar2
065C C003      1696            push    ar3
065E 7468      1697            mov     a,#__str_7
0660 C0E0      1698            push    acc
0662 74C2      1699            mov     a,#(__str_7 >> 8)
0664 C0E0      1700            push    acc
0666 7480      1701            mov     a,#0x80
0668 C0E0      1702            push    acc
066A 120000    1703            lcall   _printf
066D E581      1704            mov     a,sp
066F 24F5      1705            add     a,#0xf5
0671 F581      1706            mov     sp,a
0673           1707   ;        C:\Users\keybo\Documents\GitHub\Project2ELEC291\JoystickTestCode.c:421: waitms(500);
0673 9001F4    1708            mov     dptr,#0x01F4
0676 120000    1709            lcall   _waitms
0679 020000    1710            ljmp    L018002?
067C           1711            rseg R_CSEG
067C           1712   
0000           1713            rseg R_XINIT
0000           1714   
0000           1715            rseg R_CONST
0000           1716   __str_0:
0000 252E3466  1717            db '%.4f'
0004 00        1718            db 0x00
0005           1719   __str_1:
0005 78706F73  1720            db 'xpos: %s ypos: %s'
     3A202573
     2079706F
     733A2025
     73
0016 0D        1721            db 0x0D
0017 0A        1722            db 0x0A
0018 00        1723            db 0x00
0019           1724   __str_2:
0019 1B        1725            db 0x1B
001A 5B324A    1726            db '[2J'
001D 00        1727            db 0x00
001E           1728   __str_3:
001E 41444320  1729            db 'ADC test program'
     74657374
     2070726F
     6772616D
002E 0A        1730            db 0x0A
002F 46696C65  1731            db 'File: %s'
     3A202573
0037 0A        1732            db 0x0A
0038 436F6D70  1733            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
0048 0A        1734            db 0x0A
0049 0A        1735            db 0x0A
004A 00        1736            db 0x00
004B           1737   __str_4:
004B 433A      1738            db 'C:'
004D 5C        1739            db 0x5C
004E 55736572  1740            db 'Users'
     73
0053 5C        1741            db 0x5C
0054 6B657962  1742            db 'keybo'
     6F
0059 5C        1743            db 0x5C
005A 446F6375  1744            db 'Documents'
     6D656E74
     73
0063 5C        1745            db 0x5C
0064 47697448  1746            db 'GitHub'
     7562
006A 5C        1747            db 0x5C
006B 50726F6A  1748            db 'Project2ELEC291'
     65637432
     454C4543
     323931
007A 5C        1749            db 0x5C
007B 4A6F7973  1750            db 'JoystickTest'
     7469636B
     54657374
0087 436F6465  1751            db 'Code.c'
     2E63
008D 00        1752            db 0x00
008E           1753   __str_5:
008E 4D617220  1754            db 'Mar 18 2024'
     31382032
     303234
0099 00        1755            db 0x00
009A           1756   __str_6:
009A 30323A31  1757            db '02:19:53'
     393A3533
00A2 00        1758            db 0x00
00A3           1759   __str_7:
00A3 78766F6C  1760            db 'xvolts: %7.5f yvolts: %7.5f'
     74733A20
     25372E35
     66207976
     6F6C7473
     3A202537
     2E3566
00BE 0D        1761            db 0x0D
00BF 0A        1762            db 0x0A
00C0 00        1763            db 0x00
00C1           1764   
0003           1765            CSEG
0003           1766   
0003           1767   end
